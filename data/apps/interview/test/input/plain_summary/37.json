{"qid": 37, "orig_input": "Dante is engaged in a fight with \"The Savior\". Before he can fight it with his sword, he needs to break its shields. He has two guns, Ebony and Ivory, each of them is able to perform any non-negative number of shots.\n\nFor every bullet that hits the shield, Ebony deals a units of damage while Ivory deals b units of damage. In order to break the shield Dante has to deal exactly c units of damage. Find out if this is possible.\n\n\n-----Input-----\n\nThe first line of the input contains three integers a, b, c (1 \u2264 a, b \u2264 100, 1 \u2264 c \u2264 10 000)\u00a0\u2014 the number of units of damage dealt by Ebony gun and Ivory gun, and the total number of damage required to break the shield, respectively.\n\n\n-----Output-----\n\nPrint \"Yes\" (without quotes) if Dante can deal exactly c damage to the shield and \"No\" (without quotes) otherwise.\n\n\n-----Examples-----\nInput\n4 6 15\n\nOutput\nNo\n\nInput\n3 2 7\n\nOutput\nYes\n\nInput\n6 11 6\n\nOutput\nYes\n\n\n\n-----Note-----\n\nIn the second sample, Dante can fire 1 bullet from Ebony and 2 from Ivory to deal exactly 1\u00b73 + 2\u00b72 = 7 damage. In the third sample, Dante can fire 1 bullet from ebony and no bullets from ivory to do 1\u00b76 + 0\u00b711 = 6 damage.", "input": "Determine if it's possible to deal an exact amount of damage using two guns with different damage outputs.", "test_cases": {"inputs": ["4 6 15\n", "3 2 7\n", "6 11 6\n", "3 12 15\n", "5 5 10\n", "6 6 7\n", "1 1 20\n", "12 14 19\n", "15 12 26\n", "2 4 8\n", "4 5 30\n", "4 5 48\n", "2 17 105\n", "10 25 282\n", "6 34 323\n", "2 47 464\n", "4 53 113\n", "6 64 546\n", "1 78 725\n", "1 84 811\n", "3 100 441\n", "20 5 57\n", "14 19 143\n", "17 23 248\n", "11 34 383\n", "20 47 568\n", "16 58 410\n", "11 70 1199\n", "16 78 712\n", "20 84 562\n", "19 100 836\n", "23 10 58\n", "25 17 448\n", "22 24 866\n", "24 35 67\n", "29 47 264\n", "23 56 45\n", "25 66 1183\n", "21 71 657\n", "29 81 629\n", "23 95 2226\n", "32 4 62\n", "37 15 789\n", "39 24 999\n", "38 32 865\n", "32 50 205\n", "31 57 1362\n", "38 68 1870\n", "36 76 549\n", "35 84 1257\n", "39 92 2753\n", "44 1 287\n", "42 12 830\n", "42 27 9\n", "49 40 1422\n", "44 42 2005\n", "50 55 2479\n", "48 65 917\n", "45 78 152\n", "43 90 4096\n", "43 94 4316\n", "60 7 526\n", "53 11 735\n", "52 27 609\n", "57 32 992\n", "52 49 421\n", "57 52 2634\n", "54 67 3181\n", "52 73 638\n", "57 84 3470\n", "52 100 5582\n", "62 1 501\n", "63 17 858\n", "70 24 1784\n", "65 32 1391\n", "62 50 2775\n", "62 58 88\n", "66 68 3112\n", "61 71 1643\n", "69 81 3880\n", "63 100 1960\n", "73 6 431\n", "75 19 736\n", "78 25 247\n", "79 36 2854\n", "80 43 1864\n", "76 55 2196\n", "76 69 4122\n", "76 76 4905\n", "75 89 3056\n", "73 100 3111\n", "84 9 530\n", "82 18 633\n", "85 29 2533\n", "89 38 2879\n", "89 49 2200\n", "88 60 4140\n", "82 68 1299\n", "90 76 2207\n", "83 84 4923\n", "89 99 7969\n", "94 9 168\n", "91 20 1009\n", "93 23 2872\n", "97 31 3761\n", "99 46 1341\n", "98 51 2845\n", "93 66 3412\n", "95 76 3724\n", "91 87 6237\n", "98 97 7886\n", "12 17 15\n", "93 94 95\n", "27 43 27\n", "17 43 68\n", "44 12 12\n", "44 50 150\n", "1 1 10000\n", "2 3 10000\n", "100 1 10\n", "3 2 1\n", "1 1 1\n", "9 9 10000\n", "2 3 9995\n", "3 5 4\n", "99 98 100\n", "6 10 2\n", "1 6 5\n", "1 4 3\n", "3 2 3\n", "1 7 6\n", "2 3 9871\n", "10 5 5\n", "10 8 2\n"], "outputs": ["No\n", "Yes\n", "Yes\n", "Yes\n", "Yes\n", "No\n", "Yes\n", "No\n", "No\n", "Yes\n", "Yes\n", "Yes\n", "Yes\n", "No\n", "No\n", "Yes\n", "Yes\n", "Yes\n", "Yes\n", "Yes\n", "Yes\n", "No\n", "No\n", "No\n", "Yes\n", "Yes\n", "Yes\n", "Yes\n", "Yes\n", "No\n", "Yes\n", "No\n", "Yes\n", "Yes\n", "No\n", "Yes\n", "No\n", "Yes\n", "Yes\n", "No\n", "Yes\n", "No\n", "Yes\n", "Yes\n", "No\n", "No\n", "Yes\n", "Yes\n", "No\n", "No\n", "Yes\n", "Yes\n", "No\n", "No\n", "No\n", "No\n", "No\n", "No\n", "No\n", "Yes\n", "Yes\n", "Yes\n", "Yes\n", "Yes\n", "Yes\n", "No\n", "Yes\n", "Yes\n", "No\n", "No\n", "No\n", "Yes\n", "Yes\n", "Yes\n", "Yes\n", "No\n", "No\n", "Yes\n", "No\n", "No\n", "Yes\n", "Yes\n", "Yes\n", "No\n", "Yes\n", "Yes\n", "Yes\n", "Yes\n", "No\n", "Yes\n", "Yes\n", "No\n", "No\n", "Yes\n", "Yes\n", "Yes\n", "Yes\n", "No\n", "No\n", "Yes\n", "Yes\n", "No\n", "No\n", "Yes\n", "Yes\n", "Yes\n", "No\n", "No\n", "Yes\n", "Yes\n", "Yes\n", "No\n", "No\n", "Yes\n", "Yes\n", "Yes\n", "Yes\n", "Yes\n", "Yes\n", "Yes\n", "No\n", "Yes\n", "No\n", "Yes\n", "No\n", "No\n", "No\n", "Yes\n", "Yes\n", "Yes\n", "Yes\n", "Yes\n", "Yes\n", "No\n"]}, "solutions": "[\"a, b, c = list(map(int, input().split()))\\np = [0] * 100000\\np[0] = 1\\np[a] = 1\\np[b] = 1\\nfor i in range(c + 1):\\n    if p[i]:\\n        p[i + a] = 1\\n        p[i + b] = 1\\nif p[c]:\\n    print('Yes')\\nelse:\\n    print('No')\\n\", \"# You lost the game.\\na,b,c = list(map(int, input().split()))\\n\\nT = [not((c-a*k)%b) for k in range(c//a+1)]\\n\\nif sum(T):\\n    print(\\\"Yes\\\")\\nelse:\\n    print(\\\"No\\\")\\n\", \"def mina():\\n    a, b, c = map(int, input().split())\\n    k = 0\\n    while k * a <= c:\\n        if (c - k * a) % b == 0:\\n            print(\\\"Yes\\\")\\n            return\\n        k += 1\\n    print(\\\"No\\\")\\n    \\nmina()\", \"A, B, C = [int(x) for x in input().split()]\\n\\nfor i in range(0, C + 1):\\n    if A * i > C:\\n        break\\n    if (C - A * i) % B == 0:\\n        print(\\\"Yes\\\")\\n        return\\n\\nprint(\\\"No\\\")\\n\", \"a, b, c = list(map(int, input().split()))\\nf = False\\nfor na in range(1 + c//a):\\n    if f:\\n        break\\n    for nb in range(1 + c//b):\\n        if a * na + b * nb == c:\\n            f = True\\n            break\\nif f:\\n    print(\\\"Yes\\\")\\nelse:\\n    print(\\\"No\\\")\\n\", \"a, b, c = map(int, input().split())\\nfor i in range(0, c + 1, a):\\n    if c - i >= 0 and (c - i) % b == 0:\\n        print('Yes')\\n        return\\nprint('No')\", \"a, b, c = list(map(int, input().split()))\\nfor x in range(c // a + 1):\\n    if (c - a * x) % b == 0:\\n        print('Yes')\\n        break\\nelse:\\n    print('No')\\n\", \"def solve(a,b,c):\\n    x, y = c//a, c//b\\n    for i in range(x + 1):\\n        for j in range(y + 1):\\n            if a * i + b * j == c:\\n                return True\\n    return False\\n\\na,b,c = list(map(int,input().split()))\\n\\nif solve(a,b,c):\\n    print('Yes')\\nelse:\\n    print('No')\\n\", \"a,b,c = map(int, input().split())\\nx = 0\\nwhile a * x <= c:\\n    if (c - a * x) % b == 0: \\n        print('Yes')\\n        return\\n    x+=1\\nprint('No')\", \"a, b, c = map(int, input().split())\\nfor i in range(0, 10000):\\n    if (i * a > c):\\n        break\\n    if (c - i * a) % b == 0:\\n        print(\\\"Yes\\\")\\n        return\\nprint(\\\"No\\\")\", \"a,b,c = list(map(int,input().split()))\\nnum = c // a + 1\\ntemp = 0\\nfor i in range(num):\\n    if (c - i*a)%b == 0:\\n        temp = 1\\n        break\\nif temp == 1:\\n    print(\\\"Yes\\\")\\nelse:\\n    print(\\\"No\\\")\\n\", \"a,b,c=map(int,input().split())\\nfor i in range(c//a+1):\\n    if (c-i*a)%b==0: print('Yes'); break\\nelse: print('No')\", \"import collections\\nimport math\\n\\na, b, c = list(map(int, input().split()))\\n#n = int(input())\\nfor i in range(c // a + 1):\\n    if (c - a * i) % b == 0:\\n        print('Yes')\\n        return\\nprint('No')\\n\\n\", \"a, b, c = [int(x) for x in input().split()]\\nf = True\\nfor i in range(c // a + 1):\\n    for j in range((c - i) // b + 1):\\n        if i * a + j * b == c:\\n            f = False\\n            break\\n    if not f:\\n        break\\nif not f :\\n    print(\\\"Yes\\\")\\nelse:\\n    print(\\\"No\\\")\", \"a, b, c = input().split()\\na, b, c = int(a), int(b), int(c)\\n\\nc_left = c\\nwhile c_left >= 0:\\n    if c_left % b == 0:\\n        print(\\\"Yes\\\")\\n        break\\n    c_left -= a\\nif c_left < 0:\\n    print(\\\"No\\\")\\n\", \"__author__ = 'Utena'\\na,b,c=map(int,map(int,input().split()))\\nwhile True:\\n    if c<0:\\n        print('No')\\n        break\\n    elif c%a==0 or c%b==0:\\n        print('Yes')\\n        break\\n    c-=a\", \"black, white, health = map(int, input().split())\\ndamage = [False] * (health + 1 + max(white, black))\\ndamage[0] = True\\nfor i in range(health):\\n    if damage[i]:\\n        damage[i + black] = True\\n        damage[i + white] = True\\n\\nif damage[health]:\\n    print('Yes')\\nelse:\\n    print('No')\", \"a, b, c = map(int, input().split())\\npossible = False\\nfor i in range(c//a + 1):\\n    if (c - a*i) % b == 0:\\n        possible = True\\nif possible:\\n    print('Yes')\\nelse:\\n    print('No')\", \"a, b, c = list(map(int, input().split()))\\nkey = 0\\ni = 0\\nwhile (i * b <= c):\\n    if (c - i * b) % a == 0:\\n        key = 1\\n        break\\n    i += 1\\nif key == 0:\\n    print('No')\\nelse:\\n    print('Yes')\\n\", \"a, b, c = list(map(int, input().split()))\\nx1 = c // a + 1\\nf = False\\nfor i in range(x1):\\n    j = (c - a*i) // b\\n    #print(i, i*a, j, b * j, c - a*i)\\n    if a * i + b * j == c:\\n        f = True\\nif f:\\n    print(\\\"Yes\\\")\\nelse:\\n    print(\\\"No\\\")\", \"line = [int(x) for x in input().strip().split(\\\" \\\")]\\na = line[0]\\nb = line[1]\\nc = line[2]\\n\\ndef doable(a, b, c):\\n\\tfor i in range((c//a)+1):\\n\\t\\tt = c-(i*a)\\n\\t\\t# print(\\\"t: %s\\\" % (t))\\n\\t\\tif t%b==0:\\n\\t\\t\\treturn True\\n\\treturn False\\n\\nif doable(a, b, c):\\n\\tprint(\\\"Yes\\\")\\nelse:\\n\\tprint(\\\"No\\\")\", \"w, b, sh = list(map(int, input().split()))\\nfl = False\\nwhile not fl and sh > 0:\\n    if sh % b == 0 or sh % w == 0:\\n        fl = True\\n    sh -= w\\nif fl:\\n    print('Yes')\\nelse:\\n    print('No')\\n\", \"a,b,c=(int(z) for z in input().split())\\n\\n\\ndef f(a,b,c):\\n    x=0\\n    ca=c//a\\n    res=0\\n    while x<=ca:\\n        if (c-res)%b==0:\\n            return \\\"Yes\\\"\\n        else:\\n            res+=a\\n            x+=1\\n    return \\\"No\\\"\\n\\nprint(f(a,b,c))\", \"a,b,c=list(map(int,input().split()))\\nd=0\\ndef ans(a,b,c,d):\\n    if c%a==0 or c%b==0:\\n        print('Yes')\\n        return\\n    else:\\n        a,b=min(a,b),max(a,b)\\n        ##print(a,b)\\n        while d<c:\\n            d+=a\\n            if (c-d)%b==0:\\n                print('Yes')\\n                return\\n            else:\\n                continue\\n        print(\\\"No\\\")\\n        return\\nans(a,b,c,d)\\n\"]", "task": "apps", "difficulty": "interview", "split": "test", "transformation_type": "plain_summary"}