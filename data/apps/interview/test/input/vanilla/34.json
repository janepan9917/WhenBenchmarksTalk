{"qid": 34, "orig_input": "It's New Year's Eve soon, so Ivan decided it's high time he started setting the table. Ivan has bought two cakes and cut them into pieces: the first cake has been cut into a pieces, and the second one \u2014 into b pieces.\n\nIvan knows that there will be n people at the celebration (including himself), so Ivan has set n plates for the cakes. Now he is thinking about how to distribute the cakes between the plates. Ivan wants to do it in such a way that all following conditions are met:  Each piece of each cake is put on some plate;  Each plate contains at least one piece of cake;  No plate contains pieces of both cakes. \n\nTo make his guests happy, Ivan wants to distribute the cakes in such a way that the minimum number of pieces on the plate is maximized. Formally, Ivan wants to know the maximum possible number x such that he can distribute the cakes according to the aforementioned conditions, and each plate will contain at least x pieces of cake.\n\nHelp Ivan to calculate this number x!\n\n\n-----Input-----\n\nThe first line contains three integers n, a and b (1 \u2264 a, b \u2264 100, 2 \u2264 n \u2264 a + b) \u2014 the number of plates, the number of pieces of the first cake, and the number of pieces of the second cake, respectively.\n\n\n-----Output-----\n\nPrint the maximum possible number x such that Ivan can distribute the cake in such a way that each plate will contain at least x pieces of cake.\n\n\n-----Examples-----\nInput\n5 2 3\n\nOutput\n1\n\nInput\n4 7 10\n\nOutput\n3\n\n\n\n-----Note-----\n\nIn the first example there is only one way to distribute cakes to plates, all of them will have 1 cake on it.\n\nIn the second example you can have two plates with 3 and 4 pieces of the first cake and two plates both with 5 pieces of the second cake. Minimal number of pieces is 3.", "input": "It's New Year's Eve soon, so Ivan decided it's high time he started setting the table. Ivan has bought two cakes and cut them into pieces: the first cake has been cut into a pieces, and the second one \u2014 into b pieces.\n\nIvan knows that there will be n people at the celebration (including himself), so Ivan has set n plates for the cakes. Now he is thinking about how to distribute the cakes between the plates. Ivan wants to do it in such a way that all following conditions are met:  Each piece of each cake is put on some plate;  Each plate contains at least one piece of cake;  No plate contains pieces of both cakes. \n\nTo make his guests happy, Ivan wants to distribute the cakes in such a way that the minimum number of pieces on the plate is maximized. Formally, Ivan wants to know the maximum possible number x such that he can distribute the cakes according to the aforementioned conditions, and each plate will contain at least x pieces of cake.\n\nHelp Ivan to calculate this number x!\n\n\n-----Input-----\n\nThe first line contains three integers n, a and b (1 \u2264 a, b \u2264 100, 2 \u2264 n \u2264 a + b) \u2014 the number of plates, the number of pieces of the first cake, and the number of pieces of the second cake, respectively.\n\n\n-----Output-----\n\nPrint the maximum possible number x such that Ivan can distribute the cake in such a way that each plate will contain at least x pieces of cake.\n\n\n-----Examples-----\nInput\n5 2 3\n\nOutput\n1\n\nInput\n4 7 10\n\nOutput\n3\n\n\n\n-----Note-----\n\nIn the first example there is only one way to distribute cakes to plates, all of them will have 1 cake on it.\n\nIn the second example you can have two plates with 3 and 4 pieces of the first cake and two plates both with 5 pieces of the second cake. Minimal number of pieces is 3.", "test_cases": {"inputs": ["5 2 3\n", "4 7 10\n", "100 100 100\n", "10 100 3\n", "2 9 29\n", "4 6 10\n", "3 70 58\n", "5 7 10\n", "5 30 22\n", "5 5 6\n", "2 4 3\n", "10 10 31\n", "2 1 1\n", "10 98 99\n", "4 10 16\n", "11 4 8\n", "5 10 14\n", "6 7 35\n", "5 6 7\n", "4 15 3\n", "7 48 77\n", "4 4 10\n", "4 7 20\n", "5 2 8\n", "3 2 3\n", "14 95 1\n", "99 82 53\n", "10 71 27\n", "5 7 8\n", "11 77 77\n", "10 5 28\n", "7 3 12\n", "10 15 17\n", "7 7 7\n", "4 11 18\n", "3 3 4\n", "9 2 10\n", "100 90 20\n", "3 2 2\n", "12 45 60\n", "3 94 79\n", "41 67 34\n", "9 3 23\n", "10 20 57\n", "55 27 30\n", "100 100 10\n", "20 8 70\n", "3 3 3\n", "4 9 15\n", "3 1 3\n", "2 94 94\n", "5 3 11\n", "4 3 2\n", "12 12 100\n", "6 75 91\n", "3 4 3\n", "3 2 5\n", "6 5 15\n", "4 3 6\n", "3 9 9\n", "26 93 76\n", "41 34 67\n", "6 12 6\n", "5 20 8\n", "2 1 3\n", "35 66 99\n", "30 7 91\n", "5 22 30\n", "8 19 71\n", "3 5 6\n", "5 3 8\n", "2 4 2\n", "4 3 7\n", "5 20 10\n", "5 100 50\n", "6 3 10\n", "2 90 95\n", "4 8 6\n", "6 10 3\n", "3 3 5\n", "5 33 33\n", "5 5 8\n", "19 24 34\n", "5 5 12\n", "8 7 10\n", "5 56 35\n", "4 3 5\n", "18 100 50\n", "5 6 8\n", "5 98 100\n", "6 5 8\n", "3 40 80\n", "4 8 11\n", "66 100 99\n", "17 100 79\n", "3 2 10\n", "99 100 99\n", "21 100 5\n", "3 10 2\n", "4 100 63\n", "2 2 10\n", "5 94 79\n", "4 12 5\n", "5 5 40\n", "99 99 99\n", "8 97 44\n", "11 4 10\n", "6 3 3\n", "7 3 4\n", "8 4 4\n", "9 4 5\n", "12 6 6\n", "4 48 89\n", "8 3 6\n", "4 6 3\n", "5 5 1\n", "11 6 5\n", "4 5 4\n", "6 6 4\n", "2 1 2\n", "4 1 3\n", "3 3 1\n", "9 4 6\n", "6 5 6\n", "2 2 3\n", "4 5 1\n", "13 6 7\n", "14 7 7\n", "12 97 13\n", "4 2 9\n", "10 20 59\n", "12 34 56\n", "4 5 9\n", "2 2 2\n", "4 66 41\n"], "outputs": ["1\n", "3\n", "2\n", "3\n", "9\n", "3\n", "35\n", "3\n", "10\n", "2\n", "3\n", "3\n", "1\n", "19\n", "5\n", "1\n", "4\n", "7\n", "2\n", "3\n", "16\n", "3\n", "6\n", "2\n", "1\n", "1\n", "1\n", "9\n", "2\n", "12\n", "3\n", "2\n", "3\n", "1\n", "6\n", "2\n", "1\n", "1\n", "1\n", "8\n", "47\n", "2\n", "2\n", "7\n", "1\n", "1\n", "3\n", "1\n", "5\n", "1\n", "94\n", "2\n", "1\n", "9\n", "25\n", "2\n", "2\n", "3\n", "2\n", "4\n", "6\n", "2\n", "3\n", "5\n", "1\n", "4\n", "3\n", "10\n", "10\n", "3\n", "2\n", "2\n", "2\n", "5\n", "25\n", "2\n", "90\n", "3\n", "2\n", "2\n", "11\n", "2\n", "3\n", "3\n", "2\n", "17\n", "1\n", "8\n", "2\n", "33\n", "2\n", "40\n", "4\n", "3\n", "10\n", "2\n", "2\n", "5\n", "2\n", "33\n", "2\n", "31\n", "4\n", "5\n", "1\n", "16\n", "1\n", "1\n", "1\n", "1\n", "1\n", "1\n", "29\n", "1\n", "2\n", "1\n", "1\n", "2\n", "1\n", "1\n", "1\n", "1\n", "1\n", "1\n", "2\n", "1\n", "1\n", "1\n", "8\n", "2\n", "7\n", "7\n", "3\n", "2\n", "22\n"]}, "solutions": "[\"n, a, b = map(int, input().split())\\nans = 0\\nfor i in range(1, n):\\n    ans = max(ans, min(a // i, b // (n - i)))\\nprint(ans)\", \"n,a,b = [int(x) for x in input().split()]\\nmxmn = max(min(a//i,b//(n-i)) for i in range(1,n))\\nprint(mxmn)\\n\", \"n, a, b = map(int, input().split())\\n\\nans = -1\\nfor x in range(1, min(n, a) + 1):\\n\\ty = n - x\\n\\tif (y > b or y == 0):\\n\\t\\tcontinue\\n\\tans = max(ans, min(a // x, b // y))\\nprint(ans)\", \"n,a,b = list(map(int, input().strip().split()))\\n\\nx = 1\\nwhile True:\\n    prva = a//x\\n    druga = b//x\\n    if prva + druga < n:\\n        x -= 1\\n        break\\n    x += 1\\nx = min(x,a,b)\\nprint(x)\\n\", \"n, a, b = map(int, input().split())\\nr = set()\\nfor m in range(1, n):\\n\\tr.add(min(a // m, b // (n - m)))\\nprint(max(r))\", \"n,a,b = [int(x) for x in input().split()]\\nfor x in reversed(list(range(1,1000000))):\\n    if a//x + b//x >= n and a//x>0 and b//x > 0:\\n        print(x)\\n        break\\n\", \"from sys import stdin, stdout\\n\\nINF = float('inf')\\n\\nn, a, b = map(int, stdin.readline().split())\\n\\nl, r = 1, 200\\nwhile r - l > 1:\\n    m = (l + r) >> 1\\n    \\n    if (b // m and a // m and a // m + b // m >= n):\\n        l = m\\n    else:\\n        r = m\\n\\nstdout.write(str(l))\", \"n, a, b = [int(v) for v in input().split()]\\n\\nbest = 0\\nfor k in range(1, n):\\n    fst = k\\n    snd = n - k\\n    best = max(best, min(a // fst, b // snd))\\nprint(best)\\n\", \"n, a, b = list(map(int, input().split()))\\nansw = 0\\nfor fir in range(1, n):\\n    sec = n - fir\\n    answ = max(answ, min(a // fir, b // sec))\\nprint(answ)\\n    \\n\", \"n,a,b=list(map(int,input().split()))\\nans=0\\nfor x in range(1,n):\\n    #if a//x>0 and b//(n-x)>0:\\n        ans=max(ans,min(a//x,b//(n-x)))\\nprint(ans)\\n\", \"\\nn, a, b = list(map(int, input().strip().split()))\\n\\n\\nif a + b < n:\\n    print(0)\\nelse:\\n    x = 2\\n    while True:\\n        if a // x + b // x >= n and a // x >= 1 and b // x >= 1:\\n            x += 1\\n        else:\\n            print(x - 1)\\n            break\\n\", \"n, a, b = map(int, input().split())\\n\\nc = int(n * (a/(a+b)))\\nd = n - c\\nfrom math import ceil\\ncc = ceil(n * (a/(a+b)))\\ndd = n-cc\\nopts = []\\nif c != 0 and d != 0:\\n    opts.append(min(a//c, b//d))\\nif cc != 0 and dd != 0:\\n    opts.append(min(a//cc, b//dd))\\nprint(max(opts))\", \"z, n, m = list(map(int, input().split()))\\nans = 0\\nfor i in range(1, z):\\n    ans = max(ans, min(n / (z - i), m / i))\\nprint(int(ans // 1))\\n\", \"q,w,e=list(map(int,input().split()))\\ns=w+e\\ntt=s//q\\nwhile ((w//tt)+(e//tt)<q):\\n    tt-=1\\nif tt>min(w,e):\\n    tt=min(w,e)\\nprint(tt)\\n\", \"n,a,b = list(map(int,input().split()))\\nfor i in range(200,0,-1):\\n    if a//i > 0 and b//i > 0 and a//i+b//i>=n:\\n        print(i)\\n        break\\n\", \"n,a,b = list(map(int,input().split()))\\nm = min(a,b//(n-1))\\nfor i in range(1,n):\\n    m = max(m , min(a//i,b//(n-i)))\\nprint(m)\\n\", \"n, a, b=list(map(int,input().split(\\\" \\\")))\\nans=0\\nfor i in range(1,n):\\n    m=min(a//i, b//(n-i))\\n    if m>ans:\\n        ans=m\\nprint(ans)\\n\", \"zh, nh, mmm = list(map(int, input().split()))\\nasss = 0\\nfor i in range(1, zh):\\n    asss = max(asss, min(nh / (zh - i), mmm / i))\\nprint(int(asss // 1))\\n\", \"n, a, b = list(map(int,input().split()))\\nz = []\\nfor i in range(1, n):\\n\\tz += [min(a // i, b // (n - i))]\\nprint(max(z))\\n\", \"            \\n\\nn,a,b = list(map(int,input().split()))\\n\\n\\n\\ndef check(x):\\n\\tA = a\\n\\tB = b\\n\\tif A >= x and B >= x:\\n\\t\\tA -= x\\n\\t\\tB -= x\\n\\telse:\\n\\t\\treturn False\\n\\tfor i in range(n-2):\\n\\t\\tif A >= x:\\n\\t\\t\\tA -= x\\n\\t\\telif B >= x:\\n\\t\\t\\tB -= x\\n\\t\\telse:\\n\\t\\t\\treturn False\\n\\treturn True\\n\\nl = 0 \\nr = a+b\\n\\nwhile l + 1 < r:\\n\\tm = (l+r) // 2\\n\\tif check(m):\\n\\t\\tl = m\\n\\telse:\\n\\t\\tr = m\\nprint(l)\\n\", \"n,a,b = map(int, input().split())\\nans = 0\\nfor i in range(1,n):\\n\\tans = max(ans, min(a//i, b//(n-i)))\\nprint(ans)\", \"x, y, z = list(map(int, input().split()))\\nans = 0\\nfor i in range(1, x):\\n    kt = x - i\\n    ans = max(ans, min(y // i, z // kt))\\nprint(ans)\\n\", \"n,a,b = [int(i) for i in input().split()]\\n\\nans = 0\\n\\nfor n1 in range(1,n):\\n    n2 = n - n1\\n\\n    x1 = a//n1\\n    x2 = b//n2\\n\\n    ans = max(ans,min(x1,x2))\\n\\nprint(ans)\\n    \\n\", \"n, a, b = list(map(int, input().split()))\\nans = 0\\nfor x in range(1, min(a, b) + 1):\\n\\tk = (a // x) + (b // x)\\n\\tif k >= n:\\n\\t\\tans = x\\nprint(ans)\\n\\n\", \"n,a,b=list(map(int,input().split()))\\nfor x in range(1,110):\\n    if a//x+b//x<n or a<x or b<x:\\n        print(x-1)\\n        break\\n        \\n        \\n\"]", "task": "apps", "difficulty": "interview", "split": "test", "transformation_type": "vanilla"}