{"qid": 89, "orig_input": "You are given an integer N. Consider all possible segments on the coordinate axis with endpoints at integer points with coordinates between 0 and N, inclusive; there will be $\\frac{n(n + 1)}{2}$ of them.\n\nYou want to draw these segments in several layers so that in each layer the segments don't overlap (they might touch at the endpoints though). You can not move the segments to a different location on the coordinate axis. \n\nFind the minimal number of layers you have to use for the given N.\n\n\n-----Input-----\n\nThe only input line contains a single integer N (1 \u2264 N \u2264 100).\n\n\n-----Output-----\n\nOutput a single integer - the minimal number of layers required to draw the segments for the given N.\n\n\n-----Examples-----\nInput\n2\n\nOutput\n2\n\nInput\n3\n\nOutput\n4\n\nInput\n4\n\nOutput\n6\n\n\n\n-----Note-----\n\nAs an example, here are the segments and their optimal arrangement into layers for N = 4. [Image]", "input": "You are given an integer N. Consider all possible segments on the coordinate axis with endpoints at integer points with coordinates between 0 and N, inclusive; there will be $\\frac{n(n + 1)}{2}$ of them.\n\nYou want to draw these segments in several layers so that in each layer the segments don't overlap (they might touch at the endpoints though). You can not move the segments to a different location on the coordinate axis. \n\nFind the minimal number of layers you have to use for the given N.\n\n\n-----Input-----\n\nThe only input line contains a single integer N (1 \u2264 N \u2264 100).\n\n\n-----Output-----\n\nOutput a single integer - the minimal number of layers required to draw the segments for the given N.\n\n\n-----Examples-----\nInput\n2\n\nOutput\n2\n\nInput\n3\n\nOutput\n4\n\nInput\n4\n\nOutput\n6\n\n\n\n-----Note-----\n\nAs an example, here are the segments and their optimal arrangement into layers for N = 4. [Image]", "test_cases": {"inputs": ["2\n", "3\n", "4\n", "21\n", "100\n", "1\n", "5\n", "6\n", "7\n", "8\n", "9\n", "10\n", "11\n", "12\n", "13\n", "14\n", "15\n", "16\n", "17\n", "18\n", "19\n", "20\n", "22\n", "23\n", "24\n", "25\n", "26\n", "27\n", "28\n", "29\n", "30\n", "31\n", "32\n", "33\n", "34\n", "35\n", "36\n", "37\n", "38\n", "39\n", "40\n", "41\n", "42\n", "43\n", "44\n", "45\n", "46\n", "47\n", "48\n", "49\n", "50\n", "51\n", "52\n", "53\n", "54\n", "55\n", "56\n", "57\n", "58\n", "59\n", "60\n", "61\n", "62\n", "63\n", "64\n", "65\n", "66\n", "67\n", "68\n", "69\n", "70\n", "71\n", "72\n", "73\n", "74\n", "75\n", "76\n", "77\n", "78\n", "79\n", "80\n", "81\n", "82\n", "83\n", "84\n", "85\n", "86\n", "87\n", "88\n", "89\n", "90\n", "91\n", "92\n", "93\n", "94\n", "95\n", "96\n", "97\n", "98\n", "99\n", "1\n", "5\n"], "outputs": ["2\n", "4\n", "6\n", "121\n", "2550\n", "1\n", "9\n", "12\n", "16\n", "20\n", "25\n", "30\n", "36\n", "42\n", "49\n", "56\n", "64\n", "72\n", "81\n", "90\n", "100\n", "110\n", "132\n", "144\n", "156\n", "169\n", "182\n", "196\n", "210\n", "225\n", "240\n", "256\n", "272\n", "289\n", "306\n", "324\n", "342\n", "361\n", "380\n", "400\n", "420\n", "441\n", "462\n", "484\n", "506\n", "529\n", "552\n", "576\n", "600\n", "625\n", "650\n", "676\n", "702\n", "729\n", "756\n", "784\n", "812\n", "841\n", "870\n", "900\n", "930\n", "961\n", "992\n", "1024\n", "1056\n", "1089\n", "1122\n", "1156\n", "1190\n", "1225\n", "1260\n", "1296\n", "1332\n", "1369\n", "1406\n", "1444\n", "1482\n", "1521\n", "1560\n", "1600\n", "1640\n", "1681\n", "1722\n", "1764\n", "1806\n", "1849\n", "1892\n", "1936\n", "1980\n", "2025\n", "2070\n", "2116\n", "2162\n", "2209\n", "2256\n", "2304\n", "2352\n", "2401\n", "2450\n", "2500\n", "1\n", "9\n"]}, "solutions": "[\"n=int(input())\\nprint(max((i+1)*(n-i)for i in range(n)))\\n\", \"n = int(input())\\n\\na = (n + 1) // 2\\nb = (n + 2) // 2\\n\\nprint(a * b)\", \"import sys\\nn = int(input())\\nans = 0\\nwhile n > 0:\\n    ans += n\\n    n -= 2\\nprint(ans)\\n\", \"n = int(input())\\nans = 0\\nif(n % 2 == 0):\\n\\tans += (n//2) * (n//2+1)\\nelse:\\n\\tans += ((n+1)//2)**2\\n\\nprint(ans)\", \"n = int(input())\\nk = n + 1\\nprint((k*k)//4)\", \"n = int(input())\\nif n % 2 == 0:\\n    b = 2\\nelse:\\n    b = 1\\ns = 0\\nfor i in range(b, n + 1, 2):\\n    s += i\\nprint(s)\", \"n = int(input())\\n\\nans = 0\\n\\nfor i in range(n, 0, -2):\\n\\tans += i\\n\\nprint(ans)\", \"n = int(input())\\nans = 0\\nfor i in range(n):\\n    ans = max(ans, (i + 1) * (n - i))\\nprint(ans)\", \"n=int(input())\\nar=[]\\nfor x in range(0,n+1):\\n    for y in range(x+1,n+1):\\n        ar.append([x,y])\\nans=0\\nfor x in ar:\\n    if x[0] <= (n+1-(n%2))/2 <= x[1]:\\n        ans+=1\\nprint(ans)\\n\", \"n = int(input())\\ndef f(x):\\n\\tif x == 1:\\n\\t\\treturn 1\\n\\tif x % 2:\\n\\t\\treturn f(x - 1) + (x + 1) // 2\\n\\treturn f(x - 1) + x // 2\\nprint(f(n))\", \"n = int(input())\\n\\ncnt = 0\\nwhile n > 0:\\n    cnt += n\\n    n -= 2\\n\\nprint(cnt)\\n\", \"n = int(input())\\nl, r = 0, n\\nans = 0\\nwhile l < r:\\n    ans += r - l\\n    l += 1\\n    r -= 1\\nprint(ans)\\n\", \"def f(n):\\n  if n <= 1:\\n    return n\\n  else:\\n    return f(n-2) + n\\n\\nn = int(input())\\nprint(f(n))\", \"n = int(input())\\ncnt = 0\\ncur_cnt = 1\\nfor i in range(n, 0, -1):\\n    cnt += min(cur_cnt, i)\\n    cur_cnt += 1\\nprint(cnt)\\n\", \"from math import *\\na = int(input())\\na += 1\\nprint(floor(a*a/4))\", \"n = int(input())\\n\\nsumma = 0\\nwhile n>0:\\n    summa+=n\\n    n-=2\\nprint(summa)\\n\", \"n = int(input())\\nprint((n+1)**2//4)\\n\", \"n = int(input())\\nans = 0\\nfor i in range(1, n + 1):\\n\\tif n >= 2 * i:\\n\\t\\tans += i\\n\\telse:\\n\\t\\tans += n - i + 1\\nprint(ans)\\n\", \"n = int(input())\\nsm = 0\\nfor i in range(n, -1, -2):\\n\\tsm+=i\\n\\tif n<=2: break\\nprint(sm)\", \"n = int(input())\\n\\nans = 0\\n\\nfor i in range(n // 2 + (0 if n % 2 == 0 else 1)):\\n    l = n - 2 * i\\n    if l <= 0:\\n        break\\n    ans += l\\n\\nprint(ans)\\n    \\n\", \"'''input\\n4\\n'''\\nn = int(input())\\nl = [[False] * n]\\nfor s in range(n):\\n\\tfor e in range(s+1, n+1):\\n\\t\\tfor x in range(len(l)):\\n\\t\\t\\tif True not in l[x][s:e]:\\n\\t\\t\\t\\tl[x][s:e] = [True] * (e-s)\\n\\t\\t\\t\\tbreak\\n\\t\\telse:\\n\\t\\t\\tl.append([False] * n)\\n\\t\\t\\tl[-1][s:e] = [True] * (e-s)\\nprint(len(l))\\n\", \"n = int(input())\\n\\nmemo = dict()\\n\\ndef f(n):\\n    if n == 1:\\n        return 1\\n    if n == 2:\\n        return 2\\n    if n in memo:\\n        return memo[n]\\n    memo[n] = n + f(n-2)\\n    return memo[n]\\n\\nprint(f(n))\\n\", \"n = int(input())\\nk = (n//2)*(n//2+1)\\nprint(k if n%2==0 else k+(n+1)//2)\\n\", \"n = int(input())\\n\\nif n % 2 == 0:\\n    print((n // 2) * (n // 2 + 1))\\nelse:\\n    nn = (n - 1) // 2\\n    print(n * (n + 1) // 2 - nn * (nn + 1))\\n\"]", "task": "apps", "difficulty": "interview", "split": "test", "transformation_type": "vanilla"}