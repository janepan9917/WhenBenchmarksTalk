{"qid": 64, "orig_input": "One day Kefa found n baloons. For convenience, we denote color of i-th baloon as s_{i} \u2014 lowercase letter of the Latin alphabet. Also Kefa has k friends. Friend will be upset, If he get two baloons of the same color. Kefa want to give out all baloons to his friends. Help Kefa to find out, can he give out all his baloons, such that no one of his friens will be upset \u2014 print \u00abYES\u00bb, if he can, and \u00abNO\u00bb, otherwise. Note, that Kefa's friend will not upset, if he doesn't get baloons at all.\n\n\n-----Input-----\n\nThe first line contains two integers n and k (1 \u2264 n, k \u2264 100) \u2014 the number of baloons and friends.\n\nNext line contains string s \u2014 colors of baloons.\n\n\n-----Output-----\n\nAnswer to the task \u2014 \u00abYES\u00bb or \u00abNO\u00bb in a single line.\n\nYou can choose the case (lower or upper) for each letter arbitrary.\n\n\n-----Examples-----\nInput\n4 2\naabb\n\nOutput\nYES\n\nInput\n6 3\naacaab\n\nOutput\nNO\n\n\n\n-----Note-----\n\nIn the first sample Kefa can give 1-st and 3-rd baloon to the first friend, and 2-nd and 4-th to the second.\n\nIn the second sample Kefa needs to give to all his friends baloons of color a, but one baloon will stay, thats why answer is \u00abNO\u00bb.", "input": "One day Kefa found n baloons. For convenience, we denote color of i-th baloon as s_{i} \u2014 lowercase letter of the Latin alphabet. Also Kefa has k friends. Friend will be upset, If he get two baloons of the same color. Kefa want to give out all baloons to his friends. Help Kefa to find out, can he give out all his baloons, such that no one of his friens will be upset \u2014 print \u00abYES\u00bb, if he can, and \u00abNO\u00bb, otherwise. Note, that Kefa's friend will not upset, if he doesn't get baloons at all.\n\n\n-----Input-----\n\nThe first line contains two integers n and k (1 \u2264 n, k \u2264 100) \u2014 the number of baloons and friends.\n\nNext line contains string s \u2014 colors of baloons.\n\n\n-----Output-----\n\nAnswer to the task \u2014 \u00abYES\u00bb or \u00abNO\u00bb in a single line.\n\nYou can choose the case (lower or upper) for each letter arbitrary.\n\n\n-----Examples-----\nInput\n4 2\naabb\n\nOutput\nYES\n\nInput\n6 3\naacaab\n\nOutput\nNO\n\n\n\n-----Note-----\n\nIn the first sample Kefa can give 1-st and 3-rd baloon to the first friend, and 2-nd and 4-th to the second.\n\nIn the second sample Kefa needs to give to all his friends baloons of color a, but one baloon will stay, thats why answer is \u00abNO\u00bb.", "test_cases": {"inputs": ["4 2\naabb\n", "6 3\naacaab\n", "2 2\nlu\n", "5 3\novvoo\n", "36 13\nbzbzcffczzcbcbzzfzbbfzfzzbfbbcbfccbf\n", "81 3\nooycgmvvrophvcvpoupepqllqttwcocuilvyxbyumdmmfapvpnxhjhxfuagpnntonibicaqjvwfhwxhbv\n", "100 100\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n", "100 1\nnubcvvjvbjgnjsdkajimdcxvewbcytvfkihunycdrlconddlwgzjasjlsrttlrzsumzpyumpveglfqzmaofbshbojmwuwoxxvrod\n", "100 13\nvyldolgryldqrvoldvzvrdrgorlorszddtgqvrlisxxrxdxlqtvtgsrqlzixoyrozxzogqxlsgzdddzqrgitxxritoolzolgrtvl\n", "18 6\njzwtnkvmscqhmdlsxy\n", "21 2\nfscegcqgzesefghhwcexs\n", "32 22\ncduamsptaklqtxlyoutlzepxgyfkvngc\n", "49 27\noxyorfnkzwsfllnyvdhdanppuzrnbxehugvmlkgeymqjlmfxd\n", "50 24\nxxutzjwbggcwvxztttkmzovtmuwttzcbwoztttohzzxghuuthv\n", "57 35\nglxshztrqqfyxthqamagvtmrdparhelnzrqvcwqxjytkbuitovkdxueul\n", "75 23\nittttiiuitutuiiuuututiuttiuiuutuuuiuiuuuuttuuttuutuiiuiuiiuiitttuututuiuuii\n", "81 66\nfeqevfqfebhvubhuuvfuqheuqhbeeuebehuvhffvbqvqvfbqqvvhevqffbqqhvvqhfeehuhqeqhueuqqq\n", "93 42\npqeiafraiavfcteumflpcbpozcomlvpovlzdbldvoopnhdoeqaopzthiuzbzmeieiatthdeqovaqfipqlddllmfcrrnhb\n", "100 53\nizszyqyndzwzyzgsdagdwdazadiawizinagqqgczaqqnawgijziziawzszdjdcqjdjqiwgadydcnqisaayjiqqsscwwzjzaycwwc\n", "100 14\nvkrdcqbvkwuckpmnbydmczdxoagdsgtqxvhaxntdcxhjcrjyvukhugoglbmyoaqexgtcfdgemmizoniwtmisqqwcwfusmygollab\n", "100 42\naaaaaiiiiaiiiaaiaiiaaiiiiiaaaaaiaiiiaiiiiaiiiaaaaaiiiaaaiiaaiiiaiiiaiaaaiaiiiiaaiiiaiiaiaiiaiiiaaaia\n", "100 89\ntjbkmydejporbqhcbztkcumxjjgsrvxpuulbhzeeckkbchpbxwhedrlhjsabcexcohgdzouvsgphjdthpuqrlkgzxvqbuhqxdsmf\n", "100 100\njhpyiuuzizhubhhpxbbhpyxzhbpjphzppuhiahihiappbhuypyauhizpbibzixjbzxzpbphuiaypyujappuxiyuyaajaxjupbahb\n", "100 3\nsszoovvzysavsvzsozzvoozvysozsaszayaszasaysszzzysosyayyvzozovavzoyavsooaoyvoozvvozsaosvayyovazzszzssa\n", "100 44\ndluthkxwnorabqsukgnxnvhmsmzilyulpursnxkdsavgemiuizbyzebhyjejgqrvuckhaqtuvdmpziesmpmewpvozdanjyvwcdgo\n", "100 90\ntljonbnwnqounictqqctgonktiqoqlocgoblngijqokuquoolciqwnctgoggcbojtwjlculoikbggquqncittwnjbkgkgubnioib\n", "100 79\nykxptzgvbqxlregvkvucewtydvnhqhuggdsyqlvcfiuaiddnrrnstityyehiamrggftsqyduwxpuldztyzgmfkehprrneyvtknmf\n", "100 79\naagwekyovbviiqeuakbqbqifwavkfkutoriovgfmittulhwojaptacekdirgqoovlleeoqkkdukpadygfwavppohgdrmymmulgci\n", "100 93\nearrehrehenaddhdnrdddhdahnadndheeennrearrhraharddreaeraddhehhhrdnredanndneheddrraaneerreedhnadnerhdn\n", "100 48\nbmmaebaebmmmbbmxvmammbvvebvaemvbbaxvbvmaxvvmveaxmbbxaaemxmxvxxxvxbmmxaaaevvaxmvamvvmaxaxavexbmmbmmev\n", "100 55\nhsavbkehaaesffaeeffakhkhfehbbvbeasahbbbvkesbfvkefeesesevbsvfkbffakvshsbkahfkfakebsvafkbvsskfhfvaasss\n", "100 2\ncscffcffsccffsfsfffccssfsscfsfsssffcffsscfccssfffcfscfsscsccccfsssffffcfcfsfffcsfsccffscffcfccccfffs\n", "100 3\nzrgznxgdpgfoiifrrrsjfuhvtqxjlgochhyemismjnanfvvpzzvsgajcbsulxyeoepjfwvhkqogiiwqxjkrpsyaqdlwffoockxnc\n", "100 5\njbltyyfjakrjeodqepxpkjideulofbhqzxjwlarufwzwsoxhaexpydpqjvhybmvjvntuvhvflokhshpicbnfgsqsmrkrfzcrswwi\n", "100 1\nfnslnqktlbmxqpvcvnemxcutebdwepoxikifkzaaixzzydffpdxodmsxjribmxuqhueifdlwzytxkklwhljswqvlejedyrgguvah\n", "100 21\nddjenetwgwmdtjbpzssyoqrtirvoygkjlqhhdcjgeurqpunxpupwaepcqkbjjfhnvgpyqnozhhrmhfwararmlcvpgtnopvjqsrka\n", "100 100\nnjrhiauqlgkkpkuvciwzivjbbplipvhslqgdkfnmqrxuxnycmpheenmnrglotzuyxycosfediqcuadklsnzjqzfxnbjwvfljnlvq\n", "100 100\nbbbbbbbtbbttbtbbbttbttbtbbttttbbbtbttbbbtbttbtbbttttbbbbbtbbttbtbbtbttbbbtbtbtbtbtbtbbbttbbtbtbtbbtb\n", "14 5\nfssmmsfffmfmmm\n", "2 1\nff\n", "2 1\nhw\n", "2 2\nss\n", "1 1\nl\n", "100 50\nfffffttttttjjjuuuvvvvvdddxxxxwwwwgggbsssncccczzyyyyyhhhhhkrreeeeeeaaaaaiiillllllllooooqqqqqqmmpppppp\n", "100 50\nbbbbbbbbgggggggggggaaaaaaaahhhhhhhhhhpppppppppsssssssrrrrrrrrllzzzzzzzeeeeeeekkkkkkkwwwwwwwwjjjjjjjj\n", "100 50\nwwwwwwwwwwwwwwxxxxxxxxxxxxxxxxxxxxxxxxzzzzzzzzzzzzzzzzzzbbbbbbbbbbbbbbbbbbbbjjjjjjjjjjjjjjjjjjjjjjjj\n", "100 80\nbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm\n", "100 10\nbbttthhhhiiiiiiijjjjjvvvvpppssssseeeeeeewwwwgggkkkkkkkkmmmddddduuuzzzzllllnnnnnxxyyyffffccraaaaooooq\n", "100 20\nssssssssssbbbbbbbhhhhhhhyyyyyyyzzzzzzzzzzzzcccccxxxxxxxxxxddddmmmmmmmeeeeeeejjjjjjjjjwwwwwwwtttttttt\n", "1 2\na\n", "3 1\nabb\n", "2 1\naa\n", "2 1\nab\n", "6 2\naaaaaa\n", "8 4\naaaaaaaa\n", "4 2\naaaa\n", "4 3\naaaa\n", "1 3\na\n", "4 3\nzzzz\n", "4 1\naaaa\n", "3 4\nabc\n", "2 5\nab\n", "2 4\nab\n", "1 10\na\n", "5 2\nzzzzz\n", "53 26\naaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbb\n", "4 1\nabab\n", "4 1\nabcb\n", "4 2\nabbb\n", "5 2\nabccc\n", "2 3\nab\n", "4 3\nbbbs\n", "10 2\nazzzzzzzzz\n", "1 2\nb\n", "1 3\nb\n", "4 5\nabcd\n", "4 6\naabb\n", "5 2\naaaab\n", "3 5\naaa\n", "5 3\nazzzz\n", "4 100\naabb\n", "3 10\naaa\n", "3 4\naaa\n", "12 5\naaaaabbbbbbb\n", "5 2\naabbb\n", "10 5\nzzzzzzzzzz\n", "2 4\naa\n", "1 5\na\n", "10 5\naaaaaaaaaa\n", "6 3\naaaaaa\n", "7 1\nabcdeee\n", "18 3\naaaaaabbbbbbcccccc\n", "8 2\naabbccdd\n", "4 2\nzzzz\n", "4 2\nabaa\n", "3 2\naaa\n", "3 1\nzzz\n", "5 4\nzzzzz\n", "6 2\naabbbc\n", "3 6\naaa\n", "2 1\nzz\n", "10 3\naaaeeeeeee\n", "4 5\naabb\n", "3 1\naaa\n", "5 2\naazzz\n", "6 2\nabbbbc\n", "4 2\nxxxx\n", "6 3\nzzzzzz\n", "3 2\nabb\n", "3 2\nzzz\n", "6 5\nzzzzzz\n", "6 3\nbcaaaa\n", "100 100\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n", "3 6\nabc\n"], "outputs": ["YES\n", "NO\n", "YES\n", "YES\n", "YES\n", "NO\n", "YES\n", "NO\n", "YES\n", "YES\n", "NO\n", "YES\n", "YES\n", "YES\n", "YES\n", "NO\n", "YES\n", "YES\n", "YES\n", "YES\n", "NO\n", "YES\n", "YES\n", "NO\n", "YES\n", "YES\n", "YES\n", "YES\n", "YES\n", "YES\n", "YES\n", "NO\n", "NO\n", "NO\n", "NO\n", "YES\n", "YES\n", "YES\n", "NO\n", "NO\n", "YES\n", "YES\n", "YES\n", "YES\n", "YES\n", "YES\n", "YES\n", "YES\n", "YES\n", "YES\n", "NO\n", "NO\n", "YES\n", "NO\n", "NO\n", "NO\n", "NO\n", "YES\n", "NO\n", "NO\n", "YES\n", "YES\n", "YES\n", "YES\n", "NO\n", "NO\n", "NO\n", "NO\n", "NO\n", "NO\n", "YES\n", "YES\n", "NO\n", "YES\n", "YES\n", "YES\n", "YES\n", "NO\n", "YES\n", "NO\n", "YES\n", "YES\n", "YES\n", "NO\n", "NO\n", "NO\n", "YES\n", "YES\n", "NO\n", "NO\n", "NO\n", "NO\n", "YES\n", "NO\n", "NO\n", "NO\n", "NO\n", "NO\n", "NO\n", "YES\n", "NO\n", "NO\n", "YES\n", "NO\n", "NO\n", "NO\n", "NO\n", "NO\n", "YES\n", "NO\n", "NO\n", "NO\n", "YES\n", "YES\n"]}, "solutions": "[\"alpha = [chr(ord('a')+i) for i in range(26)]\\nn,k = list(map(int,input().split()))\\ns = input()\\narr = [s.count(alpha[i]) for i in range(26)]\\n\\nprint('YES' if max(arr) <= k else 'NO')\\n\", \"n, k = map(int, input().split())\\ns = input()\\nd = {}\\n\\nfor el in s:\\n    if el in d:\\n        d[el] += 1\\n    else:\\n        d[el] = 1\\n\\nfor value in d.values():\\n    if value > k:\\n        print('NO')\\n        return\\n\\nprint('YES')\", \"def list_input():\\n    return list(map(int,input().split()))\\ndef map_input():\\n    return map(int,input().split())\\ndef map_string():\\n    return input().split()\\n    \\nn,k = map_input()\\ns = input()\\nans = 0\\nfor i in s:\\n    ans = max(ans,s.count(i))\\nif ans <= k:\\n    print(\\\"YES\\\")\\nelse:\\n    print(\\\"NO\\\")\", \"n,k=list(map(int,input().split()))\\ns=str(input())\\nb=0\\nip=[0 for i in range(256)]\\nfor i in s:\\n   ip[ord(i)-97]+=1\\nfor i in ip:\\n   if i>k:\\n      print(\\\"NO\\\")\\n      b=1\\n      break\\nif b==0:\\n   print(\\\"YES\\\")\\n\", \"n,k = [int(i) for i in input().split()]\\ns = input()\\n\\nfor i in range(ord('a'), ord('z') + 1):\\n    x = 0\\n    for j in s:\\n        if ord(j) == i:\\n            x += 1\\n    if x > k:\\n        print('NO')\\n        return\\n\\nprint('YES')\\n\", \"n, k = map(int, input().split())\\ns = input()\\nd = dict()\\nfor i in s:\\n    d[i] = d.get(i, 0) + 1\\n    if d[i] > k:\\n        print('NO')\\n        return\\nprint('YES')\", \"import math \\ndef __starting_point():\\n\\tn,k = list(map(int,input().split()))\\n\\ts = input()\\n\\ts = list(s)\\n\\tls = set(s)\\n\\tflag = 1\\n\\tfor i in ls:\\n\\t\\tif s.count(i)>k:\\n\\t\\t\\tflag = 0\\n\\tif flag :\\n\\t\\tprint(\\\"YES\\\")\\n\\telse:\\n\\t\\tprint(\\\"NO\\\")\\n\\n\\n__starting_point()\", \"n, k = map(int, input().split())\\ns = input()\\nf = True\\nfor i in range(n):\\n    if s.count(s[i]) > k:\\n        f = False\\nif f:\\n    print(\\\"YES\\\")\\nelse:\\n    print(\\\"NO\\\")\", \"n, k = map(int, input().split())\\nns = {}\\nfor c in input():\\n    if c in ns.keys():\\n        ns[c] += 1\\n    else:\\n        ns[c] = 1\\nfor a in ns.values():\\n    if a > k:\\n        print(\\\"NO\\\")\\n        break\\nelse:\\n    print(\\\"YES\\\")\", \"from collections import Counter\\nn, k = [int(i) for i in input().split()]\\ns = input()\\nC = Counter(s)\\nfor c in C:\\n    if(C[c] > k):\\n        print(\\\"NO\\\")\\n        break\\nelse:\\n    print(\\\"YES\\\")\\n\", \"from collections import Counter\\n\\nn, k = [int(v) for v in input().split()]\\ns = input().strip()\\n\\ncnt = Counter(s)\\nprint([\\\"NO\\\", \\\"YES\\\"][all([v <= k for v in cnt.values()])])\", \"n, k = map(int, input().split())\\ns = input()\\nflag = True\\nfor i in range(n):\\n    if s.count(s[i]) > k:\\n        flag = False\\nif flag:\\n    print(\\\"YES\\\")\\nelse:\\n    print(\\\"NO\\\")\", \"n,m=list(map(int,input().split()))\\ns=input()\\ncount={}\\nfor val in s:\\t\\n\\tif(val not in count):\\n\\t\\tcount[val]=0\\n\\tcount[val]+=1\\nflag=0\\nfor item in count:\\n\\tif(count[item]>m):\\n\\t\\tflag=1\\n\\t\\tbreak\\nif(flag==0):\\n\\tprint(\\\"YES\\\")\\nelse:\\n\\tprint(\\\"NO\\\")\", \"a, b = map(int, input().split())\\ns = input()\\nletters = {}\\nfor x in s:\\n    if not x in letters:\\n        letters[x] = 0\\n    letters[x] += 1\\nfor x in letters.values():\\n    if x > b:\\n        print(\\\"NO\\\")\\n        break\\nelse:\\n    print(\\\"YES\\\")\", \"n, k = map(int, input().split())\\n\\nd = dict()\\narr = input()\\nfor i in range(len(arr)):\\n    if arr[i] in d:\\n        d[arr[i]] += 1\\n        if d[arr[i]] > k:\\n            print('NO')\\n            break\\n    else:\\n        d[arr[i]] = 1\\nelse:\\n    print('YES')\", \"n,k = map(int,input().split())\\narr = input()\\nmaxi = 0\\n\\nfor i in range(26):\\n    temp = arr.count(chr(ord('a')+i))\\n    if(temp>maxi):\\n        maxi = temp\\nif(maxi>k):\\n    print(\\\"NO\\\")\\nelse:\\n    print(\\\"YES\\\")\", \"n, k = list(map(int,input().split()))\\nst = input()\\na = [0] * 28\\nfor i in range(len(st)):\\n\\ta[ord(st[i]) - 97] += 1\\nif max(a) <= k: print('YES')\\nelse: print('NO')\\n\", \"from collections import Counter as cc\\nn,m=list(map(int,input().split()))\\ns=[i for i in input()]\\nc=cc(s)\\nif max(c.values())>m:\\n    print(\\\"NO\\\")\\nelse:\\n    print(\\\"YES\\\")\\n\", \"n, k = [int(i) for i in input().split()]\\ns = input()\\nm = [0] * 1000\\nfor c in s:\\n    m[ord(c)] += 1\\nif max(m) > k:\\n    print(\\\"NO\\\")\\nelse:\\n    print(\\\"YES\\\")\\n\", \"n, k = list(map(int, input().split()))\\ns = list(input())\\n\\ncnt = {}\\nfor c in s:\\n    if c in cnt:\\n        cnt[c] += 1\\n    else:\\n        cnt[c] = 1\\nans = \\\"YES\\\"\\nfor v in list(cnt.values()):\\n    if k < v:\\n        ans = \\\"NO\\\"\\n        break\\nprint(ans)\\n\", \"from collections import Counter\\n\\nballs_nr, friends_nr = (int(x) for x in input().split())\\nball_idx___color = input()\\nif max(Counter(ball_idx___color).values()) > friends_nr:\\n    print('NO')\\nelse:\\n    print('YES')\\n\\n\", \"from collections import Counter\\n\\nn, k = list(map(int, input().split()))\\ncolors = input()\\n\\nd = Counter(colors)\\n\\nfor color, i in list(d.items()):\\n    if i > k:\\n        print('NO')\\n        break\\nelse:\\n    print('YES')\\n\", \"import sys\\n\\ninput = sys.stdin.readline\\n\\nalpha = 'abcdefghijklmnopqrstuvwxyz'\\n\\ncount = {}\\n\\nfor i in alpha:\\n    count[i] = 0\\n\\nn, f = list(map(int,input().split()))\\n\\nballs = list(input().strip('\\\\n'))\\n\\nfor i in range(n):\\n    count[balls[i]] += 1\\n\\nmax = 0\\n\\nfor i in alpha:\\n    if count[i] > max:\\n        max = count[i]\\n\\nif (max > f):\\n    print(\\\"NO\\\")\\nelse:\\n    print(\\\"YES\\\")\\n\", \"n,k = list(map(int,input().split()))\\ndata = input()\\na={}\\nfor i in data:\\n    if i in a:\\n        a[i]+=1\\n    else:\\n        a[i]=1\\nfor i in list(a.values()):\\n    if i>k:\\n        print('NO')\\n        break\\nelse:\\n    print('YES')\\n\", \"n, k = list(map(int, input().split()))\\ns = input()\\nc = dict()\\nfor x in s:\\n    if not x in c:\\n        c[x] = 1\\n    else:\\n        c[x] += 1\\n\\nno = False\\nfor x in c:\\n    if c[x] > k:\\n        print(\\\"NO\\\")\\n        no = True\\n        break\\nif not no:\\n    print(\\\"YES\\\")\\n\\n\"]", "task": "apps", "difficulty": "interview", "split": "test", "transformation_type": "vanilla"}