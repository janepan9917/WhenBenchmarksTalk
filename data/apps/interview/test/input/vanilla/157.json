{"qid": 157, "orig_input": "Nikolay has a lemons, b apples and c pears. He decided to cook a compote. According to the recipe the fruits should be in the ratio 1: 2: 4. It means that for each lemon in the compote should be exactly 2 apples and exactly 4 pears. You can't crumble up, break up or cut these fruits into pieces. These fruits\u00a0\u2014 lemons, apples and pears\u00a0\u2014 should be put in the compote as whole fruits.\n\nYour task is to determine the maximum total number of lemons, apples and pears from which Nikolay can cook the compote. It is possible that Nikolay can't use any fruits, in this case print 0. \n\n\n-----Input-----\n\nThe first line contains the positive integer a (1 \u2264 a \u2264 1000)\u00a0\u2014 the number of lemons Nikolay has. \n\nThe second line contains the positive integer b (1 \u2264 b \u2264 1000)\u00a0\u2014 the number of apples Nikolay has. \n\nThe third line contains the positive integer c (1 \u2264 c \u2264 1000)\u00a0\u2014 the number of pears Nikolay has.\n\n\n-----Output-----\n\nPrint the maximum total number of lemons, apples and pears from which Nikolay can cook the compote.\n\n\n-----Examples-----\nInput\n2\n5\n7\n\nOutput\n7\n\nInput\n4\n7\n13\n\nOutput\n21\n\nInput\n2\n3\n2\n\nOutput\n0\n\n\n\n-----Note-----\n\nIn the first example Nikolay can use 1 lemon, 2 apples and 4 pears, so the answer is 1 + 2 + 4 = 7.\n\nIn the second example Nikolay can use 3 lemons, 6 apples and 12 pears, so the answer is 3 + 6 + 12 = 21.\n\nIn the third example Nikolay don't have enough pears to cook any compote, so the answer is 0.", "input": "Nikolay has a lemons, b apples and c pears. He decided to cook a compote. According to the recipe the fruits should be in the ratio 1: 2: 4. It means that for each lemon in the compote should be exactly 2 apples and exactly 4 pears. You can't crumble up, break up or cut these fruits into pieces. These fruits\u00a0\u2014 lemons, apples and pears\u00a0\u2014 should be put in the compote as whole fruits.\n\nYour task is to determine the maximum total number of lemons, apples and pears from which Nikolay can cook the compote. It is possible that Nikolay can't use any fruits, in this case print 0. \n\n\n-----Input-----\n\nThe first line contains the positive integer a (1 \u2264 a \u2264 1000)\u00a0\u2014 the number of lemons Nikolay has. \n\nThe second line contains the positive integer b (1 \u2264 b \u2264 1000)\u00a0\u2014 the number of apples Nikolay has. \n\nThe third line contains the positive integer c (1 \u2264 c \u2264 1000)\u00a0\u2014 the number of pears Nikolay has.\n\n\n-----Output-----\n\nPrint the maximum total number of lemons, apples and pears from which Nikolay can cook the compote.\n\n\n-----Examples-----\nInput\n2\n5\n7\n\nOutput\n7\n\nInput\n4\n7\n13\n\nOutput\n21\n\nInput\n2\n3\n2\n\nOutput\n0\n\n\n\n-----Note-----\n\nIn the first example Nikolay can use 1 lemon, 2 apples and 4 pears, so the answer is 1 + 2 + 4 = 7.\n\nIn the second example Nikolay can use 3 lemons, 6 apples and 12 pears, so the answer is 3 + 6 + 12 = 21.\n\nIn the third example Nikolay don't have enough pears to cook any compote, so the answer is 0.", "test_cases": {"inputs": ["2\n5\n7\n", "4\n7\n13\n", "2\n3\n2\n", "1\n1\n1\n", "1\n2\n4\n", "1000\n1000\n1000\n", "1\n1\n4\n", "1\n2\n3\n", "1\n1000\n1000\n", "1000\n1\n1000\n", "1000\n2\n1000\n", "1000\n500\n1000\n", "1000\n1000\n4\n", "1000\n1000\n3\n", "4\n8\n12\n", "10\n20\n40\n", "100\n200\n399\n", "200\n400\n800\n", "199\n400\n800\n", "201\n400\n800\n", "200\n399\n800\n", "200\n401\n800\n", "200\n400\n799\n", "200\n400\n801\n", "139\n252\n871\n", "109\n346\n811\n", "237\n487\n517\n", "161\n331\n725\n", "39\n471\n665\n", "9\n270\n879\n", "137\n422\n812\n", "15\n313\n525\n", "189\n407\n966\n", "18\n268\n538\n", "146\n421\n978\n", "70\n311\n685\n", "244\n405\n625\n", "168\n454\n832\n", "46\n344\n772\n", "174\n438\n987\n", "144\n387\n693\n", "22\n481\n633\n", "196\n280\n848\n", "190\n454\n699\n", "231\n464\n928\n", "151\n308\n616\n", "88\n182\n364\n", "12\n26\n52\n", "204\n412\n824\n", "127\n256\n512\n", "224\n446\n896\n", "146\n291\n584\n", "83\n164\n332\n", "20\n38\n80\n", "198\n393\n792\n", "120\n239\n480\n", "208\n416\n831\n", "130\n260\n517\n", "67\n134\n267\n", "245\n490\n979\n", "182\n364\n727\n", "104\n208\n413\n", "10\n2\n100\n", "2\n100\n100\n", "2\n3\n8\n", "1\n2\n8\n", "1\n2\n200\n", "5\n4\n16\n", "1\n10\n10\n", "1\n4\n8\n", "100\n4\n1000\n", "2\n6\n12\n", "10\n7\n4\n", "2\n10\n100\n", "2\n3\n4\n", "1\n2\n999\n", "1\n10\n20\n", "100\n18\n20\n", "100\n1\n100\n", "3\n7\n80\n", "2\n8\n24\n", "1\n100\n100\n", "2\n1\n8\n", "10\n5\n23\n"], "outputs": ["7\n", "21\n", "0\n", "0\n", "7\n", "1750\n", "0\n", "0\n", "7\n", "0\n", "7\n", "1750\n", "7\n", "0\n", "21\n", "70\n", "693\n", "1400\n", "1393\n", "1400\n", "1393\n", "1400\n", "1393\n", "1400\n", "882\n", "763\n", "903\n", "1127\n", "273\n", "63\n", "959\n", "105\n", "1323\n", "126\n", "1022\n", "490\n", "1092\n", "1176\n", "322\n", "1218\n", "1008\n", "154\n", "980\n", "1218\n", "1617\n", "1057\n", "616\n", "84\n", "1428\n", "889\n", "1561\n", "1015\n", "574\n", "133\n", "1372\n", "833\n", "1449\n", "903\n", "462\n", "1708\n", "1267\n", "721\n", "7\n", "14\n", "7\n", "7\n", "7\n", "14\n", "7\n", "7\n", "14\n", "14\n", "7\n", "14\n", "7\n", "7\n", "7\n", "35\n", "0\n", "21\n", "14\n", "7\n", "0\n", "14\n"]}, "solutions": "[\"n1 = int( input() )\\nn2 = int( input() )\\nn3 = int( input() )\\nprint( min( n1 , n2 // 2 , n3 // 4 ) * 7 )\\n\", \"#!/usr/bin/env python3\\n\\ndef main():\\n    try:\\n        while True:\\n            a = int(input())\\n            b = int(input())\\n            c = int(input())\\n            x = min(a, b >> 1, c >> 2)\\n            print(x * 7)\\n\\n    except EOFError:\\n        pass\\n\\nmain()\\n\", \"a = int(input())\\nb = int(input())\\nc = int(input())\\nprint(7 * min(a, b // 2, c // 4))\", \"a = int(input())\\nb = int(input())\\nc = int(input())\\n\\nm_a = a\\nm_b = b // 2\\nm_c = c // 4\\nprint(min(m_a, m_b, m_c) * 7)\\n\", \"\\na = int(input())\\nb = int(input())\\nc = int(input())\\n\\nans = 0\\nfor x in range(a + 1):\\n    if (x * 2 > b or x * 4 > c):\\n        continue\\n    ans = max(ans, x + 2 * x + 4 * x)\\nprint(ans)\\n\", \"a, b, c = int(input()), int(input()), int(input())\\nprint(min(a, b // 2, c // 4) * 7)\", \"a,b,c=[int(input()) for i in range(3)]\\nprint(min(a,b//2,c//4)*7)\\n\", \"a = int(input())\\nb = int(input())//2\\nc = int(input())//4\\nprint(7*min(a,min(b,c)))\", \"import sys\\n\\na = int(sys.stdin.readline())\\nb = int(sys.stdin.readline())\\nc = int(sys.stdin.readline())\\n\\nres = min([a, b // 2, c // 4])\\nprint(7 * res)\\n\\n\\n\", \"a = int(input())\\nb = int(input())\\nc = int(input())\\nprint(min(a, b//2, c//4) * 7)\\n\", \"a = int(input())\\nb = int(input())\\nc = int(input())\\nper = min(a,b//2,c//4)\\nprint(per*7)\", \"#CF1\\na=int(input())\\nb=int(input())\\nc=int(input())\\n#l=list(map(int,input()))\\nn=min([a//1,b//2,c//4])\\nprint(7*n)\\n\", \"a = int(input())\\nb = int(input())\\nc = int(input())\\n\\nprint(min(a, b//2, c//4)*7)\\n\", \"a = int(input())\\nb = int(input())//2\\nc = int(input())//4\\nmn = min([a, b, c]) * 7\\nprint(mn)\", \"a = int(input())\\nb = int(input())\\nc = int(input())\\n\\nn = 0\\nwhile n + 1 <= a and (n + 1) * 2 <= b and (n + 1) * 4 <= c:\\n    n += 1\\n\\nprint(7 * n)\", \"a = int(input())\\nb = int(input())//2\\nc = int(input())//4\\nprint(min([a,b,c])*7)\\n\", \"a = int(input())\\nb = int(input())\\nc = int(input())\\n\\nans = 0\\nfor i in range(a + 1):\\n    if b >= i * 2 and c >= i * 4:\\n        ans = i * 7\\nprint(ans)\", \"a = int(input())\\nb = int(input())\\nc = int(input())\\nans = 0\\n\\nwhile (a - 1 >= 0 and b - 2 >= 0 and c - 4 >= 0):\\n    a -= 1\\n    b -= 2\\n    c -= 4\\n    ans += 7\\n\\nprint(ans)\", \"a = int(input())\\nb = int(input())\\nc = int(input())\\nans = 0\\nwhile a > 0 and b > 1 and c > 3:\\n    a -= 1\\n    b -= 2\\n    c -= 4\\n    ans += 7\\nprint(ans)\", \"A = int(input())\\nB = int(input())\\nC = int(input())\\n\\nsol = 0\\nfor a in range(1, A+1):\\n    if B >= a*2 and C >= a*4:\\n        sol = max(sol, 7*a)\\n\\nprint(sol)\\n\", \"a,b,c = int(input()),int(input()),int(input())\\n\\nt = min(a, b//2, c//4)\\n\\nprint(t + t*2 + t*4)\\n\", \"a = int(input())\\nb = int(input())\\nc = int(input())\\nfor i in range(1, 1000):\\n    if i <= a and i * 2 <= b and i * 4 <= c:\\n        continue\\n    else:\\n        break\\nprint(i - 1 + (i - 1) * 2 + (i - 1) * 4)\", \"l = int(input())\\ny = int(input())\\ng = int(input())\\ncnt = 0\\nwhile l >= 1 and y>=2 and g >=4:\\n    cnt+=7\\n    l-=1\\n    y-=2\\n    g-=4\\nprint(cnt)\", \"#!/usr/bin/env python3\\n# -*- coding: utf-8 -*-\\n\\n# n = int(iunput())\\n#\\n# a, b = [int(i) for i in input().split()]\\n#\\n\\na = int(input())\\nb = int(input())\\nc = int(input())\\nmax_b = b//2\\nmax_c = c//4\\ndoli = min(a, max_b, max_c)\\nkompot = doli *7\\nprint (kompot)\\n\\n\\t\\t\\n\\t\\n\\n\", \"a = int(input())\\nb = int(input())\\nc = int(input())\\nres = 0\\nwhile a - 1 >= 0 and b - 2 >= 0 and c - 4 >= 0:\\n    a -= 1\\n    b -= 2\\n    c -= 4\\n    res += 7\\nprint(res)\"]", "task": "apps", "difficulty": "interview", "split": "test", "transformation_type": "vanilla"}