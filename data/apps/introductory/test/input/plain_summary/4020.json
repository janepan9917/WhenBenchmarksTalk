{"qid": 4020, "orig_input": "Polycarp is going to participate in the contest. It starts at $h_1:m_1$ and ends at $h_2:m_2$. It is guaranteed that the contest lasts an even number of minutes (i.e. $m_1 \\% 2 = m_2 \\% 2$, where $x \\% y$ is $x$ modulo $y$). It is also guaranteed that the entire contest is held during a single day. And finally it is guaranteed that the contest lasts at least two minutes.\n\nPolycarp wants to know the time of the midpoint of the contest. For example, if the contest lasts from $10:00$ to $11:00$ then the answer is $10:30$, if the contest lasts from $11:10$ to $11:12$ then the answer is $11:11$.\n\n\n-----Input-----\n\nThe first line of the input contains two integers $h_1$ and $m_1$ in the format hh:mm.\n\nThe second line of the input contains two integers $h_2$ and $m_2$ in the same format (hh:mm).\n\nIt is guaranteed that $0 \\le h_1, h_2 \\le 23$ and $0 \\le m_1, m_2 \\le 59$.\n\nIt is guaranteed that the contest lasts an even number of minutes (i.e. $m_1 \\% 2 = m_2 \\% 2$, where $x \\% y$ is $x$ modulo $y$). It is also guaranteed that the entire contest is held during a single day. And finally it is guaranteed that the contest lasts at least two minutes.\n\n\n-----Output-----\n\nPrint two integers $h_3$ and $m_3$ ($0 \\le h_3 \\le 23, 0 \\le m_3 \\le 59$) corresponding to the midpoint of the contest in the format hh:mm. Print each number as exactly two digits (prepend a number with leading zero if needed), separate them with ':'.\n\n\n-----Examples-----\nInput\n10:00\n11:00\n\nOutput\n10:30\n\nInput\n11:10\n11:12\n\nOutput\n11:11\n\nInput\n01:02\n03:02\n\nOutput\n02:02", "input": "Calculate the midpoint time of a contest given its start and end times in hh:mm format.", "test_cases": {"inputs": ["10:00\n11:00\n", "11:10\n11:12\n", "01:02\n03:02\n", "00:00\n23:58\n", "00:01\n23:59\n", "00:00\n00:02\n", "23:57\n23:59\n", "11:40\n12:22\n", "05:05\n05:55\n", "21:12\n22:24\n", "09:12\n09:14\n", "09:10\n09:12\n", "00:00\n00:18\n", "09:54\n09:56\n", "10:35\n11:55\n", "00:01\n00:03\n", "15:15\n15:17\n", "12:12\n12:14\n", "09:24\n09:26\n", "08:08\n10:10\n", "09:50\n09:52\n", "09:00\n10:00\n", "10:00\n10:04\n", "09:08\n09:10\n", "00:00\n00:20\n", "00:00\n00:10\n", "00:00\n00:12\n", "02:08\n02:10\n", "10:06\n10:08\n", "10:08\n10:10\n", "12:00\n12:18\n", "13:00\n13:30\n", "10:09\n10:11\n", "10:00\n10:02\n", "06:20\n10:30\n", "01:21\n17:59\n", "13:00\n13:02\n", "08:00\n10:00\n", "13:13\n13:15\n", "00:00\n18:18\n", "09:00\n09:18\n", "09:09\n09:11\n", "08:08\n10:12\n", "11:04\n11:08\n", "00:01\n03:01\n", "11:30\n13:30\n", "00:00\n02:18\n", "00:01\n19:39\n", "11:11\n12:11\n", "08:20\n19:46\n", "20:04\n20:08\n", "10:00\n12:18\n", "10:11\n10:15\n", "07:04\n13:08\n", "12:15\n12:33\n", "15:37\n20:55\n", "21:06\n21:14\n", "03:00\n17:06\n", "09:07\n09:13\n", "09:06\n09:14\n", "09:00\n09:02\n", "09:05\n09:13\n", "00:00\n00:08\n", "00:08\n00:10\n", "09:30\n10:30\n", "01:00\n21:20\n"], "outputs": ["10:30\n", "11:11\n", "02:02\n", "11:59\n", "12:00\n", "00:01\n", "23:58\n", "12:01\n", "05:30\n", "21:48\n", "09:13\n", "09:11\n", "00:09\n", "09:55\n", "11:15\n", "00:02\n", "15:16\n", "12:13\n", "09:25\n", "09:09\n", "09:51\n", "09:30\n", "10:02\n", "09:09\n", "00:10\n", "00:05\n", "00:06\n", "02:09\n", "10:07\n", "10:09\n", "12:09\n", "13:15\n", "10:10\n", "10:01\n", "08:25\n", "09:40\n", "13:01\n", "09:00\n", "13:14\n", "09:09\n", "09:09\n", "09:10\n", "09:10\n", "11:06\n", "01:31\n", "12:30\n", "01:09\n", "09:50\n", "11:41\n", "14:03\n", "20:06\n", "11:09\n", "10:13\n", "10:06\n", "12:24\n", "18:16\n", "21:10\n", "10:03\n", "09:10\n", "09:10\n", "09:01\n", "09:09\n", "00:04\n", "00:09\n", "10:00\n", "11:10\n"]}, "solutions": "[\"h1, m1 = list(map(int, input().split(':')))\\nh2, m2 = list(map(int, input().split(':')))\\nz = h1 * 60 + m1 + h2 * 60 + m2\\nz //= 2\\nprint(str(z // 60 // 10) + str(z // 60 % 10) + ':' + str(z % 60 // 10) + str(z % 60 % 10))\", \"h1, m1 = list(map(int, input().split(':')))\\nh2, m2 = list(map(int, input().split(':')))\\n\\nt1 = h1 * 60 + m1\\nt2 = h2 * 60 + m2\\nmid = (t1 + t2) // 2\\nprint(f'{mid // 60:02}:{mid % 60:02}')\\n\", \"a, b = list(map(int, input().split(':')))\\nc, d = list(map(int, input().split(':')))\\nx = a * 60 + b\\ny = c * 60 + d\\nz = (x + y) // 2\\nprint('%02d:%02d' % (z // 60, z % 60))\\n\", \"s = input()\\ns1 = input()\\n\\nh = int(s[:2])\\nm = int(s[3:])\\nt = h * 60 + m\\nh = int(s1[:2])\\nm = int(s1[3:])\\nt2 = h * 60 + m\\n\\nt = (t2 + t) // 2\\nh = t // 60\\nm = t % 60\\nprint(h // 10, h %10, ':', m // 10, m % 10, sep = \\\"\\\")\\n\", \"h1, m1 = list(map(int, input().split(':')))\\nh2, m2 = list(map(int, input().split(':')))\\n\\nt1 = h1 * 60 + m1\\nt2 = h2 * 60 + m2\\n\\ndelta = (t2 - t1) // 2\\nt1_f = t1 + delta\\nh1_f = t1_f // 60\\nm1_f = t1_f % 60\\nprint('{:02d}:{:02d}'.format(h1_f, m1_f))\\n\", \"s = input().split(':')\\ns1 = input().split(':')\\nch1 = int(s[0])\\nm1 = int(s[1])\\nch2 = int(s1[0])\\nm2 = int(s1[1])\\nvr1 = ch1 * 60 + m1\\nvr2 = ch2 * 60 + m2\\nrz = vr2 - vr1\\nrz //= 2\\nch1 = ch1 * 60 + m1 + rz\\nchas = ch1 // 60\\nmn = ch1 - chas * 60\\nif chas < 10:\\n\\ts = '0'\\n\\ts += str(chas)\\n\\tchas = s\\nif mn < 10:\\n\\ts = '0'\\n\\ts += str(mn)\\n\\tmn = s\\nprint(chas, mn, sep = \\\":\\\")\\n\", \"h1, m1 = map(int, input().split(\\\":\\\"))\\nh2, m2 = map(int, input().split(\\\":\\\"))\\n\\nt1 = h1 * 60 + m1\\nt2 = h2 * 60 + m2\\n\\ndiff = t2 - t1\\n\\nt = t1 + diff//2\\n\\nh3 = t//60\\nm3 = t%60\\n\\nprint(\\\"{:02}:{:02}\\\".format(h3,m3))\", \"h1, m1 = list(map(int, input().split(':')))\\nh2, m2 = list(map(int, input().split(':')))\\nq1 = h1*60+m1\\nq2 = h2*60+m2\\nq3 = (q1+q2)/2\\nh3 = int(q3 // 60)\\nm3 = int(q3 % 60)\\nprint(\\\"{:02d}:{:02d}\\\".format(h3,m3))\\n\", \"a, b = map(int, input().split(':'))\\nc, d = map(int, input().split(':'))\\ns = a * 60 + b\\nf = c * 60 + d\\nans = s + ((f - s) // 2)\\nansh = str(ans // 60)\\nansm = str(ans % 60)\\nprint('0' * (2 - len(ansh)) + ansh, '0' * (2 - len(ansm)) + ansm, sep=':')\", \"h1, m1 = list(map(int,input().split(\\\":\\\")))\\nh2, m2 = list(map(int,input().split(\\\":\\\")))\\nnum = h1 * 60 + m1 + h2 * 60 + m2\\nnum //= 2\\nnum2 = str(num // 60)\\nnum3 = str(num % 60)\\nif len(num2) == 1:\\n    num2 = \\\"0\\\"+ num2\\nif len(num3) == 1:\\n    num3 = \\\"0\\\"+ num3\\nprint(num2+ \\\":\\\" + num3)\\n\", \"f = list(map(int, input().split(':')))\\ns = list(map(int, input().split(':')))\\n\\na = f[0]*60 + f[1]\\nb = s[0]*60 + s[1]\\n\\nn = (a+b)//2\\n\\nprint('%02d:%02d' %(n//60, n%60)) \\n\\n\", \"def mp():\\n    return map(int, input().split(':'))\\n\\nh1, m1 = mp()\\nh2, m2 = mp()\\nr = h1 * 60 + m1 + h2 * 60 + m2\\nr = r // 2\\nh3 = str(r // 60)\\nif len(h3) == 1:\\n    h3 = '0' + h3\\nm3 = str(r % 60)\\nif len(m3) == 1:\\n    m3 = '0' + m3\\nprint(h3, ':', m3, sep = '')\", \"h1, m1 = list(map(int, input().split(':')))\\nh2, m2 = list(map(int, input().split(':')))\\n\\ntotal1 = h1 * 60 + m1\\ntotal2 = h2 * 60 + m2\\n\\nmoy = (total1 + total2) // 2\\n\\nh3 = moy // 60\\nm3 = moy % 60\\n\\nif h3 < 10:\\n    h3 = '0' + str(h3)\\nif m3 < 10:\\n    m3 = '0' + str(m3)\\n\\nprint('{}:{}'.format(h3, m3))\\n\", \"def p(a):\\n    k = str(a)\\n    if (a // 10) == 0:\\n        k = '0' + k\\n    return k\\n\\ndef main():\\n    h, m = map(int, input().split(':'))\\n    h1, m1 = map(int, input().split(':'))\\n    k = (h * 60 + m + h1 * 60 + m1) // 2\\n    print(p(k // 60), p(k % 60), sep=':')\\n \\n \\nmain()\\n\", \"h1, m1 = tuple(map(int, input().split(':')))\\nh2, m2 = tuple(map(int, input().split(':')))\\n\\n\\nsered = ((h2 * 60 + m2) - (h1 * 60 + m1)) // 2 + (h1 * 60 + m1)\\n\\nh = str(sered // 60)\\nm = str(sered % 60)\\n\\nif len(h) == 1:\\n    h = '0' + h\\nif len(m) == 1:\\n    m = '0' + m\\nprint(h, m, sep=':')\\n\", \"\\nt1 = [int(i) for i in input().split(':')]\\n\\nA1 = 60*t1[0]+t1[1]\\n\\nt2 = [int(i) for i in input().split(':')]\\n\\nA2 = 60*t2[0]+t2[1]\\n\\nM = (A1+A2)//2\\n\\nH = M//60\\n\\nM = M-(H)*60\\n\\nprint(str(H).zfill(2)+':'+str(M).zfill(2))\\n\\n\", \"a,b=map(int,input().split(':'))\\nc,d=map(int,input().split(':'))\\nm=(a*60+b+c*60+d)//2\\nprint(('0'+str(m//60))[-2:],('0'+str(m%60))[-2:],sep=':')\\n\", \"a = input()\\nb = input()\\n\\nh1 = int(a[0:2])\\nm1 = int(a[3:])\\nh2 = int(b[0:2])\\nm2 = int(b[3:])\\n\\nh1 = h1*60 + m1\\nh2 = h2*60 + m2\\n\\nh = (h1 + h2) // 2\\n\\nh1 = h//60\\nm1 = h - h1*60\\n\\nprint(\\\"0\\\"*(2-len(str(h1)))+str(h1)+\\\":\\\"+\\\"0\\\"*(2-len(str(m1)))+str(m1))\\n\", \"h1, m1 = list(map(int, input().split(':')))\\nh2, m2 = list(map(int, input().split(':')))\\n\\nminutes = h2 * 60 - h1 * 60 + m2 - m1\\nminutes //= 2\\n\\nh1 = h1 + (m1 + minutes) // 60\\nm1 = (m1 + minutes) % 60\\n\\nh1 = str(h1)\\nh1 = '0' * (2 - len(h1)) + h1\\n\\nm1 = str(m1)\\nm1 = '0' * (2 - len(m1)) + m1\\nprint(h1 + ':' + m1)\\n\", \"'''input\\n01:02\\n03:02\\n'''\\nimport sys\\nfrom collections import defaultdict as dd\\nfrom itertools import  permutations as pp\\nfrom itertools import combinations as cc\\nfrom collections import Counter as ccd\\nfrom random import randint as rd\\nfrom bisect import bisect_left as bl\\nimport heapq\\nmod=10**9+7\\n\\ndef ri(flag=0):\\n\\tif flag==0:\\n\\t\\treturn [int(i) for i in sys.stdin.readline().split()]\\n\\telse:\\n\\t\\treturn int(sys.stdin.readline())\\n\\n\\nh1,m1=[int(i) for i in input().split(\\\":\\\")]\\nh2,m2=[int(i) for i in input().split(\\\":\\\")]\\n\\nk1=h1\\nk2=m1\\nc=0\\nwhile h1!=h2 or m1!=m2:\\n\\tm1+=1\\n\\tif m1==60:\\n\\t\\th1+=1\\n\\t\\tm1=0\\n\\tc+=1\\nc=c//2\\nwhile c:\\n\\tk2+=1\\n\\tif k2==60:\\n\\t\\tk1+=1\\n\\t\\tk2=0\\n\\tc-=1\\nprint(\\\"%02d:%02d\\\"%(k1,k2))\", \"def main():\\n    h1,m1 = list(map(int,input().split(':')))\\n    h2,m2 = list(map(int,input().split(':')))\\n    min1 = h1*60+m1\\n    min2 = h2*60+m2\\n\\n    diff = min2-min1\\n    mid = min1+(int(diff/2))\\n    hr = mid//60\\n    m = mid%60\\n\\n    if hr < 10:\\n        hr = '0'+str(hr)\\n\\n    if m < 10:\\n        m = '0'+str(m)\\n\\n    print(str(hr)+':'+str(m))\\n\\nmain()\\n\", \"s1=input()\\ns2=input()\\nh1,h2,m1,m2=int(s1[:2]),int(s2[:2]),int(s1[3:]),int(s2[3:])\\nv1=h1*60+m1\\nv2=h2*60+m2\\ns=(v1+v2)//2\\nprint(\\\"0\\\"*(2-len(str(s//60)))+str(s//60)+\\\":\\\"+\\\"0\\\"*(2-len(str(s%60)))+str(s%60))\\n\", \"a = input().split(\\\":\\\")\\nb = input().split(\\\":\\\")\\nm = int(a[0]) * 60 + int(a[1]) + int(b[0]) * 60 + int(b[1])\\nm //= 2\\nans = str(m % 60)\\nif (len(ans) == 1):\\n\\tans = \\\"0\\\" + ans\\nans = \\\":\\\" + ans\\nans = str(m // 60) + ans\\nif len(ans) == 4:\\n\\tans = \\\"0\\\" + ans\\nprint(ans)\", \"a, b = input().split(':'), input().split(':')\\na = int(a[0]) * 60 + int(a[1])\\nb = int(b[0]) * 60 + int(b[1])\\nt = (a + b) // 2\\nprint(str(t // 60).rjust(2, '0') + ':' + str(t % 60).rjust(2, '0'))\", \"h1, m1 = map(int, input().split(':'))\\nh2, m2 = map(int, input().split(':'))\\ndiff = h1*60 + m1 + ((h2*60 + m2) - (h1*60 + m1))//2\\nhres = diff // 60\\nmres = diff % 60\\nprint(str(hres).zfill(2), str(mres).zfill(2), sep=':')\\n\"]", "task": "apps", "difficulty": "introductory", "split": "test", "transformation_type": "plain_summary"}