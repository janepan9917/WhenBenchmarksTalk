{"qid": 4099, "orig_input": "Takahashi is taking exams on N subjects. The score on each subject will be an integer between 0 and K (inclusive).\nHe has already taken exams on N-1 subjects and scored A_i points on the i-th subject.\nHis goal is to achieve the average score of M points or above on the N subjects.\nPrint the minimum number of points Takahashi needs on the final subject to achieve his goal.\nIf the goal is unachievable, print -1 instead.\n\n-----Constraints-----\n - 2 \\leq N \\leq 100\n - 1 \\leq K \\leq 100\n - 1 \\leq M \\leq K\n - 0 \\leq A_i \\leq K\n - All values in input are integers.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN K M\nA_1 A_2 ... A_{N-1}\n\n-----Output-----\nPrint the minimum number of points required on the final subject, or -1.\n\n-----Sample Input-----\n5 10 7\n8 10 3 6\n\n-----Sample Output-----\n8\n\nIf he scores 8 points on the final subject, his average score will be (8+10+3+6+8)/5 = 7 points, which meets the goal.", "input": "Calculate the minimum score needed on the final exam to achieve a target average across all subjects, or return -1 if impossible.", "test_cases": {"inputs": ["5 10 7\n8 10 3 6\n", "4 100 60\n100 100 100\n", "4 100 60\n0 0 0\n", "5 20 10\n12 12 12 13\n", "5 20 10\n12 12 13 13\n", "5 20 10\n7 7 8 8\n", "5 20 10\n7 7 7 8\n", "100 100 100\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n", "100 100 100\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n", "100 100 1\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\n", "2 1 1\n0\n", "36 75 41\n33 40 51 72 30 72 12 9 10 68 49 31 8 19 39 61 19 32 36 54 17 50 18 41 3 51 75 7 19 66 48 52 70 61 74\n", "100 100 58\n6 89 86 31 88 48 13 93 75 38 93 25 80 99 98 78 30 42 57 17 96 95 25 12 94 57 81 35 5 74 89 45 18 69 67 67 11 96 23 59 97 73 26 68 77 50 19 17 79 54 76 64 69 98 9 42 48 61 70 19 49 79 80 81 95 96 39 63 92 81 85 98 0 61 57 30 36 44 19 38 22 70 4 75 30 94 34 59 83 15 28 81 87 51 34 42 42 100 63\n", "100 100 52\n55 10 29 32 38 23 66 20 36 42 91 78 64 6 48 78 83 1 41 82 50 28 44 38 23 8 73 1 50 34 79 48 43 72 57 11 42 49 72 50 21 65 83 85 78 57 81 35 96 68 57 64 2 25 9 26 53 76 76 24 91 97 13 45 68 57 64 74 64 64 74 40 47 29 95 11 45 30 8 8 100 25 48 16 95 100 44 77 96 44 89 68 90 34 52 37 7 26 90\n", "82 10 4\n9 4 3 0 2 5 1 10 0 0 2 10 1 1 1 4 9 10 5 3 3 6 7 2 1 7 5 0 7 0 10 8 0 10 5 7 2 3 10 7 4 0 2 9 3 3 9 2 0 1 8 10 8 9 7 10 10 5 0 6 0 3 3 7 6 7 3 5 6 3 9 10 3 9 2 2 1 0 9 8 0\n", "100 100 44\n1 60 89 98 15 62 10 56 87 46 18 91 83 5 45 55 38 20 86 97 76 36 51 25 49 19 12 50 25 0 49 50 93 35 22 12 27 40 35 1 69 47 77 38 2 41 45 52 78 98 16 18 25 61 73 95 17 12 71 37 88 8 26 27 83 60 1 94 23 66 9 94 8 73 18 1 41 60 54 91 67 27 16 58 53 24 2 36 31 39 46 47 29 19 95 44 9 98 48\n", "100 100 56\n9 100 10 97 98 41 73 96 88 21 94 33 84 36 23 45 24 71 8 100 96 17 100 1 35 61 79 4 99 100 53 67 15 80 77 65 96 56 33 77 19 2 71 12 94 19 33 71 33 88 15 96 16 31 57 55 63 43 59 53 68 32 80 7 89 47 20 95 34 43 74 67 33 100 81 92 93 85 75 32 90 4 69 21 83 69 70 61 80 49 82 50 42 94 45 18 52 100 33\n", "84 77 40\n57 10 34 11 69 8 49 66 29 60 74 42 2 24 17 56 8 22 10 17 15 34 72 34 52 70 31 36 61 56 49 15 57 45 51 13 42 34 53 63 70 17 61 20 76 31 44 36 65 29 52 15 22 35 30 31 72 54 55 68 54 8 20 30 33 73 31 65 29 58 59 69 49 23 65 38 21 25 37 9 23 8 66\n", "100 100 50\n23 52 29 73 100 49 46 44 82 26 10 65 14 12 56 67 15 85 17 3 48 77 56 11 79 80 32 17 9 59 99 40 53 62 63 32 53 62 69 7 51 38 92 77 31 72 11 73 87 100 18 45 22 57 42 67 43 69 67 8 55 37 61 85 60 74 3 96 97 14 91 35 3 46 29 89 22 51 95 15 25 89 3 83 98 98 48 63 3 78 5 21 8 24 43 83 100 25 19\n", "100 100 50\n32 87 50 84 94 47 86 46 59 34 55 97 14 77 53 69 62 58 93 68 33 0 20 98 5 38 41 50 47 6 45 10 30 37 54 65 8 43 4 4 54 72 64 37 34 39 10 91 62 58 32 72 49 57 34 51 37 12 86 32 95 76 4 78 52 62 91 38 22 37 79 93 43 94 46 52 33 7 48 23 79 16 95 62 42 38 0 89 56 94 91 10 37 77 67 29 34 19 59\n", "11 11 5\n5 3 4 0 9 4 6 8 6 0\n", "100 100 46\n28 44 40 67 57 86 64 99 6 64 48 63 52 70 95 60 97 49 73 74 44 41 1 47 3 71 0 52 12 96 13 75 28 26 29 68 98 24 41 34 20 4 6 14 66 21 34 17 84 81 60 11 36 71 28 70 56 46 21 68 83 4 20 63 26 8 12 17 51 74 16 89 49 23 34 100 62 18 72 9 59 11 19 39 59 25 93 19 59 0 88 81 22 61 2 94 35 78 13\n", "100 100 52\n31 36 58 4 100 55 93 5 73 3 54 39 38 58 1 82 16 12 37 44 70 68 1 94 13 86 65 14 86 45 81 5 37 45 27 48 55 46 70 52 99 82 69 93 5 70 39 85 11 54 98 39 55 57 68 80 22 94 0 83 43 71 18 80 75 1 76 17 84 84 32 79 75 9 100 92 36 70 44 22 69 89 53 16 73 62 86 65 3 31 51 55 26 91 95 1 11 54 59\n", "47 80 77\n12 70 0 75 80 62 49 6 31 55 24 52 52 33 77 28 9 33 75 60 63 21 39 72 67 7 41 76 22 73 75 37 5 5 46 79 77 71 31 79 6 58 52 43 67 76\n", "54 13 11\n3 4 6 11 3 1 3 3 3 9 4 2 2 6 11 8 0 9 1 2 6 10 11 9 7 4 12 11 4 0 9 12 11 7 6 4 0 1 9 10 4 8 3 12 5 9 4 2 12 2 12 8 1\n", "11 39 29\n30 24 3 39 15 13 34 31 39 24\n"], "outputs": ["8\n", "0\n", "-1\n", "1\n", "0\n", "20\n", "-1\n", "100\n", "-1\n", "0\n", "-1\n", "-1\n", "-1\n", "-1\n", "0\n", "0\n", "0\n", "36\n", "80\n", "47\n", "10\n", "60\n", "52\n", "-1\n", "-1\n", "-1\n"]}, "solutions": "[\"N, K, M = map(int,input().split())\\nA = list(map(int,input().split()))\\ndef score():\\n    max_aim = M*N\\n    last_score = max_aim - sum(A)\\n    if last_score <=0:\\n        return 0\\n    elif 0 < last_score <= K:\\n        return last_score\\n    elif  K < last_score:\\n        return -1\\n    \\nprint(score())\", \"N, K, M = map(int, input().split())\\nA = list(map(int, input().split()))\\nnow_total = 0\\ntarget_total = N * M\\nfor i in A:\\n    now_total += i\\ntarget_point = target_total - now_total\\nif 0 < target_point <= K:\\n    print(target_point)\\nelif target_point <= 0:\\n    print(0)\\nelse:\\n    print(-1)\", \"N, K, M = list(map(int, input().split()))\\nA1 = list(map(int, input().split()))\\nadd=[]\\nfor i in range(0,K+1):\\n    if (sum(A1)+i)//N >=M:\\n        add.append(i)\\n    else:\\n        pass\\n\\nif not add:\\n    print((-1))\\nelif K>max(add):\\n    print((-1))\\nelse:\\n    print((min(add)))\\n\\n\", \"n,k,m = map(int, input().split())\\na = map(int, input().split())\\n\\nscore = sum(a)\\n\\nfor i in range(k + 1): # i\\u306f\\u6700\\u5f8c\\u306e\\u30c6\\u30b9\\u30c8\\u306e\\u70b9\\u6570\\u30010\\u304b\\u3089\\u5897\\u3084\\u3057\\u3066\\u3044\\u304f\\u3002\\u6e80\\u70b9k\\u306e\\u6642\\u307e\\u3067\\u7e70\\u308a\\u8fd4\\u3059\\u305f\\u3081\\u306bk+1\\n    total= score + i\\n    avarage = total / n\\n#    print(i,'total',total,'avarage',avarage)\\n    if avarage >= m:\\n        print(i)\\n        break\\n    if i == k:\\n        print('-1')\", \"N,K,M = list(map(int, input().split()))\\nA = list(map(int, input().split()))\\n\\nPoint = M * N - sum(A)\\n\\nif Point >= 0 and Point <= K:\\n    print(Point)\\nelif Point > K:\\n    print((-1))\\nelse:\\n    print((0))\\n\", \"\\\"\\\"\\\"\\n\\u9ad8\\u6a4b\\u541b\\u306f N \\u79d1\\u76ee\\u306e\\u30c6\\u30b9\\u30c8\\u3092\\u53d7\\u3051\\u307e\\u3059\\u3002\\n\\u5404\\u30c6\\u30b9\\u30c8\\u306f K \\u70b9\\u6e80\\u70b9\\u3067\\u3042\\u308a\\u3001\\u70b9\\u6570\\u306f\\u305d\\u308c\\u305e\\u308c 0 \\u4ee5\\u4e0a\\u306e\\u6574\\u6570\\u3067\\u3059\\u3002\\n\\u9ad8\\u6a4b\\u541b\\u306f N\\u22121 \\u79d1\\u76ee\\u306e\\u30c6\\u30b9\\u30c8\\u3092\\u65e2\\u306b\\u53d7\\u3051\\u3066\\u304a\\u308a\\u3001\\ni \\u756a\\u76ee\\u306e\\u79d1\\u76ee\\u306e\\u30c6\\u30b9\\u30c8\\u306e\\u70b9\\u6570\\u306f Ai \\u70b9\\u3067\\u3057\\u305f\\u3002\\n\\u9ad8\\u6a4b\\u541b\\u306e\\u76ee\\u6a19\\u306f\\u3001N \\u79d1\\u76ee\\u306e\\u30c6\\u30b9\\u30c8\\u306e\\u5e73\\u5747\\u70b9\\u3092 M \\u70b9\\u4ee5\\u4e0a\\u306b\\u3059\\u308b\\u3053\\u3068\\u3067\\u3059\\u3002\\n\\u9ad8\\u6a4b\\u541b\\u304c\\u76ee\\u6a19\\u3092\\u9054\\u6210\\u3059\\u308b\\u305f\\u3081\\u306b\\u306f\\u3001\\u6700\\u5f8c\\u306e\\u30c6\\u30b9\\u30c8\\u3067\\u6700\\u4f4e\\u4f55\\u70b9\\u53d6\\u308b\\u5fc5\\u8981\\u304c\\u3042\\u308b\\u304b\\u51fa\\u529b\\u3057\\u3066\\u304f\\u3060\\u3055\\u3044\\u3002\\n\\u9054\\u6210\\u4e0d\\u53ef\\u80fd\\u3067\\u3042\\u308b\\u5834\\u5408\\u306f\\u3001\\u4ee3\\u308f\\u308a\\u306b -1 \\u3092\\u51fa\\u529b\\u3057\\u3066\\u304f\\u3060\\u3055\\u3044\\u3002\\n\\\"\\\"\\\"\\n\\nN, K, M = list(map(int, input().split()))\\nscore = list(map(int, input().split()))\\n\\nans = N * M - sum(score)\\n\\nif ans > K:\\n    ans = -1\\nelif ans < 0:\\n    ans = 0\\n\\nprint(ans)\\n\\n\", \"n, k, m = list(map(int, input().split()))\\ntotal = sum(list(map(int, input().split())))\\n\\nlowest_score = m * n\\nadd_score = lowest_score - total\\n\\nif add_score <= 0:\\n    print((0))\\nelif add_score > k:\\n    print((-1))\\nelse:\\n    print(add_score)\\n\\n\", \"import sys\\nn,k,m = map(int, input().split())\\nA = list(map(int, input().split()))\\nsum1=sum(A)\\ngou=n*m\\nif gou<=sum1:\\n    print(\\\"0\\\")\\n    return\\nif gou>sum1:\\n    if gou-sum1>k:\\n        print(\\\"-1\\\")\\n        return\\n    print(gou-sum1)\", \"# N \\u79d1\\u76ee\\u306e\\u30c6\\u30b9\\u30c8, K \\u70b9\\u6e80\\u70b9, \\u5e73\\u5747\\u70b9 M \\u70b9\\u4ee5\\u4e0a\\n# \\u6700\\u5f8c\\u306e\\u30c6\\u30b9\\u30c8\\u3067\\u6700\\u4f4e\\u4f55\\u70b9\\u53d6\\u308b\\u5fc5\\u8981\\u304c\\u3042\\u308b\\u304b : answer\\n# \\u9054\\u6210\\u4e0d\\u53ef\\u80fd\\u3067\\u3042\\u308b\\u5834\\u5408\\u306f\\u3001\\u4ee3\\u308f\\u308a\\u306b -1 \\u3092\\u51fa\\u529b\\n\\nN, K, M = map(int, input().split())\\nscores = list(map(int, input().split()))\\n\\nachieve_score = N * M\\nanswer = achieve_score - sum(scores)\\n\\nif answer <= 0:\\n    print(0)\\nelif answer <= K:\\n    print(answer)\\nelse:\\n    print('-1')\", \"N,K,M=map(int,input().split())\\nA=list(map(int,input().split()))\\nanswer=0\\nSum=0\\nfor i in range(N-1):\\n  Sum+=A[i]\\n\\na=M*N-Sum\\nif a<=0:\\n  print(0)\\nelif a<=K:\\n  answer=a\\n  print(answer)\\nelse:\\n  print(-1)\", \"n,k,m=list(map(int, input().split()))\\na=list(map(int, input().split()))\\nreq=m*n-sum(a)\\nprint((max(0,req) if req<=k else -1))\\n\", \"def resolve():\\n    n,k,m = map(int,input().split())\\n    a = tuple(map(int,input().split()))\\n    ans = n*m - sum(a)\\n    print(max(ans,0) if ans<=k else -1)\\nresolve()\", \"n,k,m=map(int,input().split())\\na=list(map(int,input().split()))\\nif sum(a)+k<n*m:\\n    print(-1)\\nelse:\\n    for i in range(k+1):\\n        if sum(a)+i>n*m:\\n            print(0)\\n            break\\n        if sum(a)+i==n*m:\\n            print(i)\\n            break\", \"n,k,m=list(map(int,input().split()))\\na=list(map(int,input().split()))\\nif n*m-sum(a) > k:\\n  print((-1))\\nelse:\\n  if n*m-sum(a) < 0:\\n    print((0))\\n  else:\\n    print((n*m-sum(a)))\\n\", \"N, K, M = list(map(int, input().split()))\\nA = list(map(int, input().split()))\\n\\nanswer = (N * M) - sum(A)\\n\\nif answer <= K:\\n    if answer < 0:\\n        print('0')\\n    else:\\n        print(answer)\\nelse:\\n    print('-1')\\n\", \"N, K, M, = map(int, input().split())\\nS = map(int, input().split())\\ntotal_score = sum(S)\\n\\n\\nclass Achieve:\\n    def __init__(self, subjects, points, goal):\\n        self.subjects = subjects\\n        self.points = points\\n        self.goal = goal\\n\\n    def calculation(self):\\n        ans = self.subjects * self.goal - total_score\\n        if ans > self.points:\\n            return (\\\"-1\\\")\\n        if ans < 0:\\n            return (0)\\n        else:\\n            return (ans)\\n\\n\\ntakahasi = Achieve(N, K, M)\\nprint(takahasi.calculation())\", \"N, K, M = map(int,input().split())\\nscores = list(map(int,input().split()))\\n\\nx = M * N - sum(scores)\\n\\nif x > K:\\n    print(\\\"-1\\\")\\nelif 0 < x:\\n    print(x)\\nelse:\\n    print(0)\", \"N, K, M = map(int, input().split())\\n\\nA = list(map(int, input().split()))\\nscore = sum(A)\\n\\nif N * M - score > K:\\n    print(-1)\\nelse:\\n    print(max(N * M - score, 0))\", \"# N(\\u79d1\\u76ee\\u6570)\\u3001M(\\u5e73\\u5747\\u70b9)\\u3001K(\\u6e80\\u70b9):\\u6a19\\u6e96\\u5165\\u529b\\nN, K, M = map(int, input().split())\\nA = list(map(int, input().split()))\\n\\n# \\u6700\\u5f8c\\u306e\\u30c6\\u30b9\\u30c8\\u306e\\u6700\\u4f4e\\u70b9\\nworst_score = sum(A)\\n\\n# \\u6700\\u5f8c\\u306e\\u5e73\\u5747\\u70b9\\u306e\\u5024\\nscore = (N * M) - worst_score\\n\\nif score <= K:\\n    if score > 0:\\n        print(score)\\n    else:\\n        print(0)\\nelse:\\n    print(-1)\", \"#151b\\n#1.\\u5024\\u3092\\u53d7\\u3051\\u53d6\\u308b\\nN, K, M = map(int, input().split())\\nA = list(map(int, input().split()))\\n\\n#2.\\u6b8b\\u308a\\u306e\\u30c6\\u30b9\\u30c8\\u3067\\u4f55\\u70b9\\u53d6\\u308c\\u306f\\u5927\\u4e08\\u592b\\u304b\\u5224\\u65ad\\u3059\\u308b\\u3002\\nanswer = (N * M) - sum(A)\\n\\nif answer <= K:\\n    if answer < 0:\\n        print('0')\\n    else:\\n        print(answer)\\nelse:\\n    print('-1')\", \"n,k,m = map(int,input().split())\\na = list(map(int,input().split()))\\n\\np = n*m - sum(a)\\nif p > k :\\n  ans = -1\\nelif p < 0:\\n  ans = 0\\nelse:\\n  ans = p\\n\\nprint(ans)\", \"n, k, m = (int(n) for n in input().split())\\nlist_a = [int(n) for n in input().split()]\\nif n * m <= sum(list_a) + k and n * m - sum(list_a) > 0: print((n * m - sum(list_a)))\\nelif n * m - sum(list_a) <= 0: print(\\\"0\\\")\\nelse: print(\\\"-1\\\")\\n\", \"N, K, M = [int(n) for n in input().split()]\\nA = sum([int(n) for n in input().split()])\\n\\nscore = N * M - A\\nif score <= K:\\n    print(max(0, score))\\nelse:\\n    print(-1)\", \"n,k,m=map(int,input().split())\\na=list(map(int,input().split()))\\nb=m*n-sum(a)\\nif 0<=b<=k:\\n    print(b)\\nelif b<0:\\n    print(0)\\nelse:\\n    print(-1)\", \"N, K, M = map(int, input().split())\\nscores = list(map(int, input().split()))\\n\\n\\n\\nanswer = max((M*N) - sum(scores), 0)\\n\\nif answer <= K:\\n    print(answer)\\nelse:\\n    print('-1') \", \"n,k,m=map(int,input().split());a=n*m-sum(map(int,input().split()))\\nprint([0,[-1,a][a<=k]][a>=0])\", \"N,K,M = map(int,input().split())\\nscore = list(map(int,input().split()))\\nfor i in range(K+1):\\n    if (sum(score)+i)/N >= M:\\n        print(i)\\n        return\\nprint(-1)\", \"n, k, m = map(int, input().split())\\na = list(map(int, input().split()))\\nx = max(0, m*n - sum(a))\\nprint(x if x <= k else -1)\", \"N, K, M = map(int, input().split())\\nA = list(map(int, input().split()))\\n\\nSUM = 0\\nAVG = 0\\nA_N = 0\\n\\nwhile AVG <= M:\\n    for i in range(0, N - 1):\\n        SUM += A[i]\\n\\n    SUM += A_N\\n    AVG = int(SUM / N)\\n    if AVG >= M:\\n        break\\n    SUM = 0\\n    A_N += 1\\n\\nif A_N > K:\\n    print('-1')\\nelse:\\n    print(A_N)\", \"N,K,M = map(int,input().split())\\nAlist = list(map(int,input().split()))\\n\\ni = 0\\ntemp = 0\\nflag = False\\nfor i in range(0,K+1):\\n  mean = (sum(Alist)+i)//N\\n  if M<=mean:\\n    temp =i\\n    flag =True\\n    break\\n\\nif flag ==True:\\n  print (temp)\\nelse :\\n  print (-1)\", \"sub_num, full_score, average = map(int, input().split())\\nscores = list(map(int, input().split()))\\n\\nrequired_score = average * sub_num - sum(scores)\\n\\nif full_score >= required_score:\\n    if required_score <= 0:\\n        print(0)\\n    else:\\n        print(required_score)\\nelse:\\n    print(-1)\", \"n,k,m=map(int,input().split())\\na=list(map(int,input().split()))\\nai=0\\nfor i in range(n-1):\\n    ai+=a[i]\\nans=n*m-ai\\nif ai<n*m and ans<=k:\\n    print(ans)\\nelif ai<n*m and ans>k:\\n    print(-1)\\nelse:\\n    print(0)\", \"N,K,M = map(int,input().split())\\nA = list(map(int,input().split()))\\nAA = sum(A)\\n\\n\\nfor i in range(K+1):\\n    if N*M <= sum(A)+i:\\n        print(i)\\n        return\\n\\nprint(-1)\", \"n, k, m = map(int, input().split())\\n\\nlst = [ int(i) for i in input().split() ]\\n\\nsa = n*m\\n\\nx = sum(lst)\\n\\nif sa - x > k:\\n  print(-1)\\nelse:\\n  print(max(sa-x,0))\", \"N, K, M = map(int,input().split())\\nscores = list(map(int,input().split()))\\n\\nx = M * N - sum(scores)\\n\\nif x > K:\\n    print(\\\"-1\\\")\\nif 0 < x <= K:\\n    print(x)\\nif x <= 0:\\n    print(0)\", \"N,K,M=map(int,input().split())\\n*A,=map(int,input().split())\\nx=N*M-sum(A)\\nprint(-1 if x>K else max(0,x))\", \"N, K, M = list(map(int, input().split()))\\nscore = list(map(int, input().split()))\\n\\nsum_score = sum(score)\\nanswer = N * M - sum_score\\n\\nif answer > K:\\n    print('-1')\\n\\nelif answer <= 0:\\n    print('0')\\n\\nelse:\\n    print(answer)\\n\", \"sub_num, full_score, average = map(int, input().split())\\nscores = list(map(int, input().split()))\\n \\nrequired_score = average * sub_num - sum(scores)\\n \\nif full_score >= required_score:\\n    if required_score <= 0:\\n        print(0)\\n    else:\\n        print(required_score)\\nelse:\\n    print(-1)\", \"N,K,M = list(map(int,input().split()))\\nA = list(map(int,input().split()))\\n\\nX = M * N -sum(A)\\n\\nif X > K:\\n    print('-1')\\nelif 0 <= X <= K:\\n    print(X)\\nelse:\\n    print('0')\\n\", \"# abc151B\\n# https://atcoder.jp/contests/abc151/tasks/abc151_b\\n\\n# \\uff2e\\u79d1\\u76ee\\u30c6\\u30b9\\u30c8\\u3000\\u5404\\u30c6\\u30b9\\u30c8\\uff2b\\u70b9\\u6e80\\u70b9\\n# \\uff2e-1\\u79d1\\u76ee\\u306e\\u30c6\\u30b9\\u30c8\\u3092\\u53d7\\u3051\\u3001\\n# i\\u756a\\u76ee\\u306e\\u79d1\\u76ee\\u306e\\u30c6\\u30b9\\u30c8\\u70b9\\u6570\\u306f\\uff21i\\u70b9\\n# \\uff2e\\u79d1\\u76ee\\u306e\\u5e73\\u5747\\u70b9\\u3092\\uff2d\\u70b9\\u4ee5\\u4e0a\\u306b\\u3059\\u308b\\n# \\u6700\\u5f8c\\u306e\\u30c6\\u30b9\\u30c8\\u3067\\u6700\\u4f4e\\u4f55\\u70b9\\u53d6\\u308b\\u5fc5\\u8981\\u304c\\u3042\\u308b\\u304b\\n\\n# \\u9054\\u6210\\u8ca0\\u4e0d\\u53ef\\u306e\\u5834\\u5408\\u306f\\\"-1\\\"\\u3092\\u51fa\\u529b\\n\\n# \\u5165\\u529b\\nn, k, m = list(map(int, input().split()))\\na = list(map(int, input().split()))\\n\\n# \\u51e6\\u7406\\n# \\u6700\\u5f8c\\u306e\\u30c6\\u30b9\\u30c8\\u3067\\u306e\\u5fc5\\u8981\\u6700\\u4f4e\\u70b9\\u3092\\u51fa\\u529b\\na = sum(a)\\n\\nscore = (n * m) - a # \\u6700\\u5f8c\\u306e\\u5e73\\u5747\\u70b9\\u306e\\u5fc5\\u8981\\u306a\\u5024\\n\\nif score <= k:\\n    answer = score if score > 0 else \\\"0\\\"\\n    print(answer)\\nelse:\\n    print(\\\"-1\\\")\\n\\n\", \"N,K,M = map(int,input().split())\\nA = list(map(int,input().split()))\\n\\nall = sum(A)\\ngoal = M * N\\n\\nlast = goal - all\\n\\nif last > K:\\n    print(-1)\\nelif last < 0:\\n    print(0)\\nelse:\\n    print(last)\", \"n,k,m=map(int,input().split())\\na=list(map(int,input().split()))\\nx=m*n-sum(a)\\nif x>k:\\n       print(-1)\\nelif x>0:\\n        print(x)\\nelse:\\n    print(0)\", \"N,K,M=map(int,input().split())\\nA=list(map(int,input().split()))\\nif M*N-sum(A)<= K:\\n    print(max(M*N-sum(A),0))\\nelse:\\n    print(-1)\", \"sub_num, full_score, average = map(int, input().split())\\nscores = list(map(int, input().split()))\\n\\nrequired_score = average * sub_num - sum(scores)\\n\\nif full_score >= required_score:\\n    if required_score <= 0:\\n        print(0)\\n    else:\\n        print(required_score)\\nelse:\\n    print(-1)\", \"N, K, M = map(int, input().split())\\nA1 = list(map(int, input().split()))\\nadd=[]\\nfor i in range(0,K+1):\\n    if (sum(A1)+i)//N >=M:\\n        add.append(i)\\n    else:\\n        pass\\n\\nif not add:\\n    print(-1)\\nelif K>max(add):\\n    print(-1)\\nelse:\\n    print(min(add))\", \"n,k,m = map(int,input().split())\\na = map(int,input().split())\\n\\nans = n*m - sum(a)\\nif ans < 0:\\n  print(0)\\nelif ans > k:\\n  print(-1)\\nelse:\\n  print(ans)\", \"n,k,m = map(int,input().split())\\na = list(map(int,input().split()))\\nif n*m-sum(a)<0:\\n    print(-0)\\nelif 0<=n*m-sum(a)<=k:\\n    print(n*m-sum(a))\\nelse: print(-1)\", \"N, K, M = map(int, input().split())\\nA = list(map(int, input().split()))\\n\\nif (sum(A) + K) / N < M:\\n    print(-1)\\nelif sum(A) / N >= M:\\n    print(0)\\nelse:\\n    print(M * N - sum(A))\", \"N, K, M = map(int, input().split())\\ndata = list(map(int, input().split()))\\n\\nsum_data = sum(data)\\nresult = N*M-sum_data\\n\\nif result>K:\\n    print(\\\"-1\\\")\\n\\nelif result <= 0:\\n    print(\\\"0\\\")\\n\\nelse:\\n    print(result)\", \"n,k,m = map(int,input().split())\\na = list(map(int,input().split()))\\nif n * m > sum(a) + k:\\n    print(-1)\\nelif n * m < sum(a):\\n    print(0)\\nelse:\\n    print(n * m - sum(a))\", \"N, K, M = map(int, input().split())\\nA = list(map(int, input().split()))\\n\\nans = N * M - sum(A)\\n\\nif ans < 0:\\n    print(0)\\nelif ans > K:\\n    print(-1)\\nelse:\\n    print(ans)\", \"n,k,m = map(int,input().split())\\na = list(map(int,input().split()))\\n\\nif m > (sum(a) + k) / (len(a) + 1):\\n    print(-1)\\nelif m < (sum(a)) / (len(a) + 1):\\n    print(0)\\nelse:\\n    print((m * (len(a) + 1)) - sum(a) )\", \"n,k,m = list(map(int,input().split()))\\na = list(map(int,input().split()))\\nsum1 = sum(a)\\nstock = sum1\\ncheck = n*m\\nflag = 0\\nfor i in range(k+1):\\n    sum1 += i\\n    if check <= sum1:\\n        ans = i\\n        flag = 1\\n        break\\n    sum1 = stock\\nif flag == 0:\\n    print((-1))\\nelse:\\n    print(ans)\\n\", \"n, k, m = map(int, input().split())\\naa = list(map(int, input().split()))\\n\\nsum_aa = sum(aa)\\nx =n*m -sum_aa\\nif 0 <= x <= k:\\n  print(x)\\nelif x > k:\\n  print(-1)\\nelif x < 0:\\n  print(0)\", \"n,k,m=map(int,input().split())\\na=list(map(int,input().split()))\\ng=n*m\\nfor i in a:\\n  g-=i\\nprint(max(g,0) if g<=k else -1)\", \"n, k, m = map(int, input().split())\\nA = list(map(int, input().split()))\\n\\naim = n * m\\n\\np = sum(A)\\n\\nif aim - p < 0:\\n  print(0)\\nelif aim - p > k:\\n  print(-1)\\nelif aim - p <= k:\\n  print(aim-p)\", \"N, K, M = map(int, input().split())\\nA = list(map(int, input().split()))\\n\\nSUM = 0\\nAVG = 0\\nA_N = 0\\n\\nwhile AVG <= M:\\n    for i in range(0, N - 1):\\n        SUM += A[i]\\n\\n    SUM += A_N\\n    AVG = int(SUM / N)\\n    if AVG >= M:\\n        break\\n    SUM = 0\\n    A_N += 1\\n\\nif A_N > K:\\n    print('-1')\\nelse:\\n    print(A_N)\", \"def hantei(n, k, m, a_sum):\\n    if a_sum / n >= m:\\n        return 0\\n    if (a_sum + k) / n >= m:\\n        return m * n - a_sum\\n    return -1\\n\\n\\nn, k, m = map(int, input().split())\\na = list(map(int, input().split()))\\n\\na_sum = sum(a)\\n\\nprint(hantei(n, k, m, a_sum))\", \"# \\u9ad8\\u6a4b\\u541b\\u306f N\\u79d1\\u76ee\\u306e\\u30c6\\u30b9\\u30c8\\u3092\\u53d7\\u3051\\u307e\\u3059\\u3002\\u5404\\u30c6\\u30b9\\u30c8\\u306f K\\u70b9\\u6e80\\u70b9\\u3067\\u3042\\u308a\\u3001\\u70b9\\u6570\\u306f\\u305d\\u308c\\u305e\\u308c 0\\u4ee5\\u4e0a\\u306e\\u6574\\u6570\\u3067\\u3059\\u3002\\n# \\u9ad8\\u6a4b\\u541b\\u306f N\\u22121\\u79d1\\u76ee\\u306e\\u30c6\\u30b9\\u30c8\\u3092\\u65e2\\u306b\\u53d7\\u3051\\u3066\\u304a\\u308a\\u3001i\\u756a\\u76ee\\u306e\\u79d1\\u76ee\\u306e\\u30c6\\u30b9\\u30c8\\u306e\\u70b9\\u6570\\u306f Ai\\u70b9\\u3067\\u3057\\u305f\\u3002\\n# \\u9ad8\\u6a4b\\u541b\\u306e\\u76ee\\u6a19\\u306f\\u3001N\\u79d1\\u76ee\\u306e\\u30c6\\u30b9\\u30c8\\u306e\\u5e73\\u5747\\u70b9\\u3092 M\\u70b9\\u4ee5\\u4e0a\\u306b\\u3059\\u308b\\u3053\\u3068\\u3067\\u3059\\u3002\\n# \\u9ad8\\u6a4b\\u541b\\u304c\\u76ee\\u6a19\\u3092\\u9054\\u6210\\u3059\\u308b\\u305f\\u3081\\u306b\\u306f\\u3001\\u6700\\u5f8c\\u306e\\u30c6\\u30b9\\u30c8\\u3067\\u6700\\u4f4e\\u4f55\\u70b9\\u53d6\\u308b\\u5fc5\\u8981\\u304c\\u3042\\u308b\\u304b\\u51fa\\u529b\\u3057\\u3066\\u304f\\u3060\\u3055\\u3044\\u3002\\n# \\u9054\\u6210\\u4e0d\\u53ef\\u80fd\\u3067\\u3042\\u308b\\u5834\\u5408\\u306f\\u3001\\u4ee3\\u308f\\u308a\\u306b -1 \\u3092\\u51fa\\u529b\\u3057\\u3066\\u304f\\u3060\\u3055\\u3044\\u3002\\n\\n# n(\\u79d1\\u76ee\\u6570)\\u3001m(\\u5e73\\u5747\\u70b9)\\u3001k(\\u6e80\\u70b9):\\u6a19\\u6e96\\u5165\\u529b\\nn, k, m = map(int, input().split())\\na = list(map(int, input().split()))\\n\\n# \\u6700\\u5f8c\\u306e\\u30c6\\u30b9\\u30c8\\u306e\\u6700\\u4f4e\\u70b9\\nlast_score = sum(a)\\n\\n# \\u6700\\u5f8c\\u306e\\u5e73\\u5747\\u70b9\\u306e\\u5024\\nscore = (n * m) - last_score\\n\\nif score <= k:\\n    if score > 0:\\n        print(score)\\n    else:\\n        print(0)\\nelse:\\n    print(-1)\", \"n,k,m = list(map(int,input().split()))\\na = list(map(int,input().split()))\\nif m * n - sum(a) > k:\\n    print((-1))\\nelse:\\n    print((max(m*n - sum(a),0)))\\n\", \"n = input()\\nn = n.split()\\nm = int(n[2])\\nk = int(n[1])\\nn = int(n[0])\\na = input()\\na = a.split()\\nb = int(a[0])\\nfor c in range(n-2):\\n    b = b + int(a[c+1])\\nif b >= m * n:\\n    print(0)\\nelif b + k < m * n:\\n    print(-1)\\nelse:\\n    print(m * n - b)\", \"N, maxscore, avgscore = map(int, input().split())\\nA = list(map(int, input().split()))\\n\\n\\ngoaltotal = N * avgscore\\ncurrenttotal = sum(A)\\nif goaltotal - currenttotal > maxscore:\\n    print(-1)\\nelif goaltotal - currenttotal < 0:\\n    print(0)\\nelse:\\n    print(goaltotal - currenttotal)\", \"n, k, m = map(int, input().split())\\na = list(map(int, input().split()))\\n\\na1 = sum(a)\\nans = (n * m - a1)\\nif ans > k:\\n    print(-1)\\n\\nelif ans < 0:\\n    print(0)\\n\\nelse:\\n    print(ans)\", \"n,k,m = map(int, input().split())\\na = map(int, input().split())\\n\\nscore = sum(a) # \\u4eca\\u307e\\u3067\\u306e\\u30c6\\u30b9\\u30c8\\u306e\\u5408\\u8a08\\u70b9\\n\\nfor i in range(k + 1): # i\\u306f\\u6700\\u5f8c\\u306e\\u30c6\\u30b9\\u30c8\\u306e\\u70b9\\u6570\\u30010\\u304b\\u3089\\u5897\\u3084\\u3057\\u3066\\u3044\\u304f\\u3002\\u6e80\\u70b9k\\u306e\\u6642\\u307e\\u3067\\u7e70\\u308a\\u8fd4\\u3059\\u305f\\u3081\\u306bk+1\\n    total = score + i # \\u6700\\u5f8c\\u306e\\u30c6\\u30b9\\u30c8\\u306e\\u70b9\\u6570\\u3092\\u8db3\\u3059\\n    avarage = total / n # \\u5168\\u4f53\\u306e\\u5e73\\u5747\\u70b9\\u3092\\u51fa\\u3059\\n#    print(i,'total',total,'avarage',avarage) # \\u52d5\\u4f5c\\u30c6\\u30b9\\u30c8\\u7528\\n    if avarage >= m: # \\u5e73\\u5747\\u70b9\\u304c\\u3001\\u5fc5\\u8981\\u5e73\\u5747\\u70b9m\\u3068\\u540c\\u3058\\u304b\\u4e0a\\u56de\\u3063\\u305f\\u3089\\u30fb\\u30fb\\u30fb\\n        print(i) # \\u6700\\u5f8c\\u306e\\u30c6\\u30b9\\u30c8\\u306e\\u70b9\\u6570\\u3092print\\n        break # for\\u3092\\u7d42\\u4e86\\u3059\\u308b\\n    if i == k: # \\u6700\\u5f8c\\u306e\\u30c6\\u30b9\\u30c8\\u306e\\u70b9\\u6570\\u304c\\u6e80\\u70b9\\u306b\\u306a\\u3063\\u3066\\u3082\\u5fc5\\u8981\\u5e73\\u5747\\u70b9m\\u3092\\u4e0a\\u56de\\u3089\\u306a\\u304b\\u3063\\u305f\\u3089-1\\u3068\\u51fa\\u529b\\n        print('-1') \", \"\\nn, k, m = list(map(int, input().split()))\\na = list(map(int, input().split()))\\n\\nresult = m * n - sum(a)\\n\\ndef show_result():\\n    if result > k:\\n        return -1\\n    elif 1 <= result <= k:\\n        return result\\n    elif result <= 0:\\n        return 0\\n\\nprint((show_result()))\\n\", \"n, k, m = map(int, input().split())\\na = (map(int, input().split()))\\n\\nsum_Score = sum(a)\\ngood = ((m * n) - (sum_Score))\\n\\nif good > k:\\n    print('-1')\\nelse:\\n    print(max(good, 0))\", \"N, K, M = map(int, input().split())\\nA = list(map(int, input().split()))\\n\\nx = (M * N) - sum(A)\\nif x < 0:\\n    print(\\\"0\\\")\\nelif x <= K:\\n    print(x)\\nelse:\\n    print(\\\"-1\\\")\", \"N, K, M = map(int, input().split())\\nA = map(int, input().split())\\nscore = M * N - sum(A)\\n\\nif score <= 0:\\n    print(0)\\nelif score <= K:\\n    print(score)\\nelse:\\n    print('-1')\", \"# \\u9ad8\\u6a4b\\u541b\\u3000N\\u79d1\\u76ee\\u306e\\u30c6\\u30b9\\u30c8\\u3092\\u53d7\\u3051\\u308b\\n# K\\u306f\\u6e80\\u70b9\\n# M\\u306f\\u5e73\\u5747\\u70b9\\n#\\u3000A\\u306f\\u53d6\\u3063\\u305f\\u30b9\\u30b3\\u30a2\\u306e\\u30ea\\u30b9\\u30c8\\nN, K, M = map(int, input().split())\\nA = list(map(int, input().split()))\\n\\n#\\u3000\\u5fc5\\u8981\\u306a\\u30b9\\u30b3\\u30a2\\u306e\\u8a08\\u7b97\\nneed_score = N * M - sum(A)\\n\\n#\\u3000need_score\\u304cK\\u3088\\u308a\\u5927\\u304d\\u3044\\u3068\\u304d\\nif K >= need_score:\\n    if need_score <=0:\\n        print(0)\\n    else:\\n        print(need_score)\\n# need_score\\u304cK\\u3088\\u308a\\u5c0f\\u3055\\u3044\\u306e\\u3067\\u3001\\u633d\\u56de\\u4e0d\\u53ef\\nelse:\\n    print(-1)\", \"n,k,m = map(int,input().split())\\nli = list(map(int,input().split()))\\nsu = sum(li)\\nx = m*n -su\\nif x > k:\\n    print('-1')\\nelif x < 0:\\n    print(0)\\nelse:\\n    print(x)\", \"n, k, m = list(map(int, input().split()))\\nscores = list(map(int,input().split()))\\n\\nN_score = m * n - sum(scores)\\n\\nif N_score < 0:\\n    print((0))\\nelif k < N_score:\\n    print((-1))\\nelse:\\n    print(N_score)\\n\", \"N,K,M = map(int,input().split())\\nscore = list(map(int,input().split()))\\nlastscore = N * M - (sum(score))\\nif lastscore <= 0:\\n    print('0')\\nelif K >= lastscore:\\n    print(lastscore)\\nelse:\\n    print('-1')\", \"n,k,m=map(int,input().split())\\na=list(map(int,input().split()))\\nx=m*n-sum(a)\\nif x>k:\\n    print(-1)\\nelif x>0:\\n    print(x)\\nelse:\\n    print(0)\", \"n, k, m = map(int, input().split())\\na = list(map(int, input().split()))\\n\\nx = m*n - sum(a) \\n\\nif x <= k and x > 0:\\n    print(x)\\nelif x <= k:\\n    print(0)\\nelse:\\n    print(-1)\", \"N, K, M = list(map(int, input().split()))\\nA = list(map(int, input().split()))\\nnow_total = 0\\ntarget_total = N * M\\nfor i in A:\\n    now_total += i\\ntarget_point = target_total - now_total\\nif 0 < target_point <= K:\\n    print(target_point)\\nelif target_point <= 0:\\n    print((0))\\nelse:\\n    print((-1))\\n\", \"'''\\n\\u554f\\u984c\\uff1a\\n    \\u9ad8\\u6a4b\\u541b\\u306f N \\u79d1\\u76ee\\u306e\\u30c6\\u30b9\\u30c8\\u3092\\u53d7\\u3051\\u307e\\u3059\\u3002\\n    \\u5404\\u30c6\\u30b9\\u30c8\\u306f K \\u70b9\\u6e80\\u70b9\\u3067\\u3042\\u308a\\u3001\\u70b9\\u6570\\u306f\\u305d\\u308c\\u305e\\u308c 0 \\u4ee5\\u4e0a\\u306e\\u6574\\u6570\\u3067\\u3059\\u3002\\n\\n    \\u9ad8\\u6a4b\\u541b\\u306f N\\u22121 \\u79d1\\u76ee\\u306e\\u30c6\\u30b9\\u30c8\\u3092\\u65e2\\u306b\\u53d7\\u3051\\u3066\\u304a\\u308a\\u3001\\n    i \\u756a\\u76ee\\u306e\\u79d1\\u76ee\\u306e\\u30c6\\u30b9\\u30c8\\u306e\\u70b9\\u6570\\u306f Ai \\u70b9\\u3067\\u3057\\u305f\\u3002\\n\\n    \\u9ad8\\u6a4b\\u541b\\u306e\\u76ee\\u6a19\\u306f\\u3001N \\u79d1\\u76ee\\u306e\\u30c6\\u30b9\\u30c8\\u306e\\u5e73\\u5747\\u70b9\\u3092 M \\u70b9\\u4ee5\\u4e0a\\u306b\\u3059\\u308b\\u3053\\u3068\\u3067\\u3059\\u3002\\n    \\u9ad8\\u6a4b\\u541b\\u304c\\u76ee\\u6a19\\u3092\\u9054\\u6210\\u3059\\u308b\\u305f\\u3081\\u306b\\u306f\\u3001\\u6700\\u5f8c\\u306e\\u30c6\\u30b9\\u30c8\\u3067\\u6700\\u4f4e\\u4f55\\u70b9\\u53d6\\u308b\\u5fc5\\u8981\\u304c\\u3042\\u308b\\u304b\\u51fa\\u529b\\u3057\\u3066\\u304f\\u3060\\u3055\\u3044\\u3002\\n    \\u9054\\u6210\\u4e0d\\u53ef\\u80fd\\u3067\\u3042\\u308b\\u5834\\u5408\\u306f\\u3001\\u4ee3\\u308f\\u308a\\u306b -1 \\u3092\\u51fa\\u529b\\u3057\\u3066\\u304f\\u3060\\u3055\\u3044\\u3002\\n'''\\n\\n'''\\n\\u5236\\u7d04\\uff1a\\n    2 \\u2266 N \\u2266 100\\n    1 \\u2266 K \\u2266 100\\n    1 \\u2266 M \\u2266 K\\n    0 \\u2266 Ai \\u2266 K\\n    \\u5165\\u529b\\u4e2d\\u306e\\u3059\\u3079\\u3066\\u306e\\u5024\\u306f\\u6574\\u6570\\u3067\\u3042\\u308b\\n'''\\n# class Test:\\n#     points = []\\n#     def __init__(self, point):\\n#         self.point = point\\n#\\n#     def add_test(self):\\n#         self.points.append(self)\\n#\\n#     def lasttest_min(self, target_point)   -> int:\\n#         target_point - ave(points)\\n\\n# \\u6a19\\u6e96\\u5165\\u529b\\u304b\\u3089 N, K, M, Ai \\u306e\\u5024\\u3092\\u53d6\\u5f97\\u3059\\u308b\\nn, k, m = list(map(int, input().split()))\\na = list(map(int, input().split()))\\n\\ntarget_ponits = m * n # \\u76ee\\u6a19\\u306b\\u5fc5\\u8981\\u306a\\u5408\\u8a08\\u70b9\\u6570\\nneed_point_n = target_ponits - sum(a)   # N\\u756a\\u76ee\\u306e\\u30c6\\u30b9\\u30c8\\u3067\\u76ee\\u6a19\\u9054\\u6210\\u306b\\u5fc5\\u8981\\u306a\\u70b9\\u6570\\n\\nresult = \\\"ret\\\"\\nif need_point_n > k:\\n    result = -1\\nelse:\\n    if need_point_n < 0:    # N\\u756a\\u76ee\\u304c 0\\u70b9\\u3067\\u3082\\u76ee\\u6a19\\u9054\\u6210\\u3067\\u304d\\u308b\\u5834\\u5408\\n        result = 0\\n    else:\\n        result = need_point_n\\n\\nprint(result)\\n\", \"N, K, M, = map(int,input().split())\\nS = map(int,input().split())\\ntotal_score = sum(S)\\n\\nclass Achieve:\\n    def __init__(self,subjects,points,goal):\\n        self.subjects = subjects\\n        self.points = points\\n        self.goal = goal\\n\\n    def calculation(self):\\n        ans = self.subjects * self.goal - total_score\\n        if ans > self.points:\\n            return (\\\"-1\\\")\\n        if ans < 0:\\n            return (0)\\n        else:\\n            return (ans)\\n\\ntakahasi = Achieve(N,K,M)\\nprint(takahasi.calculation())\", \"n, k, m = map(int, input().split())\\na = list(map(int, input().split()))\\nx = max(0, m*n-sum(a))\\nprint(x if x <= k else -1)\", \"n,k,m = map(int,input().split())\\na = list(map(int,input().split()))\\nif sum(a)+k < m*n:\\n  print(-1)\\nelif sum(a) >= m*n:\\n  print(0)\\nelse:\\n  print(m*n-sum(a))\", \"n, k, m = map(int, input().split())\\na = tuple(map(int, input().split()))\\n\\ntotal = sum(a)\\nfor i in range(k+1):\\n    if (total + i)/n >= m:\\n        print(i)\\n        return\\nprint('-1')\", \"N, K, M = map(int, input().split())\\nA = list(map(int, input().split()))\\nans = max(0, M*N-sum(A))\\nans = ans if ans <= K else -1\\nprint(ans)\", \"N, K, M = list(map(int, input().split()))\\n\\nA = list(map(int, input().split()))\\n\\nans = max(0, M*N-sum(A))\\n\\nans = ans if ans <= K else -1\\n\\nprint(ans)\\n\\n\", \"import sys\\n\\nsys.setrecursionlimit(10 ** 8)\\nini = lambda: int(sys.stdin.readline())\\ninl = lambda: [int(x) for x in sys.stdin.readline().split()]\\nins = lambda: sys.stdin.readline().rstrip()\\ndebug = lambda *a, **kw: print(\\\"\\\\033[33m\\\", *a, \\\"\\\\033[0m\\\", **dict(file=sys.stderr, **kw))\\n\\n\\ndef solve():\\n    n, k, m = inl()\\n    a = inl()\\n    s = sum(a)\\n    y = m * n - s\\n    if y > k:\\n        return -1\\n    return max(y, 0)\\n\\n\\nprint(solve())\\n\", \"N,K,M = map(int,input().split())\\nA = [int(i) for i in input().split()]\\nans = M*N\\nfor i in range(N-1):\\n    ans -= A[i]\\nif(ans > K):\\n    print(-1)\\n    return\\nif(ans <= 0):\\n    print(0)\\n    return\\nprint(ans)\", \"n, k, m = map(int, input().split())\\na = list(map(int, input().split()))\\n\\nresult = m * n - sum(a)\\n\\ndef show_result():\\n    if result > k:\\n        return -1\\n    elif 1 <= result <= k:\\n        return result\\n    elif result <= 0:\\n        return 0\\n\\nprint(show_result())\", \"# \\u9ad8\\u6a4b\\u541bN\\u79d1\\u76ee\\u306e\\u30c6\\u30b9\\u30c8\\u53d7\\u3051\\u308b\\n# \\u5404\\u30c6\\u30b9\\u30c8K\\u6e80\\u70b9\\u30020\\u4ee5\\u4e0a\\u306e\\u6574\\u6570\\u3002\\n# \\u9ad8\\u6a4b\\u541bN-1\\u79d1\\u76ee\\u53d7\\u8b1b\\u6e08\\u307f\\n# i\\u756a\\u76ee\\u306e\\u79d1\\u76ee\\u306e\\u70b9\\u6570\\u306fA1\\u70b9\\u3000A\\uff1dlist(map(int.input().split())\\u4f7f\\u3046\\n# \\u76ee\\u6a19\\u3000N\\u79d1\\u76ee\\u306e\\u30c6\\u30b9\\u30c8\\u306e\\u5e73\\u5747\\u70b9\\u3092M\\u4ee5\\u4e0a\\u306b\\u3059\\u308b\\u3002\\u3000\\u6700\\u4f4e\\u70b9\\u6570N\\u00d7M\\n# \\u76ee\\u6a19\\u9054\\u6210\\u306e\\u70ba\\u306b\\u306f\\u6700\\u5f8c\\u306e\\u30c6\\u30b9\\u30c8\\u3067\\u6700\\u4f4e\\u4f55\\u70b9\\u3068\\u308b\\u5fc5\\u8981\\u304c\\u3042\\u308b\\u304b\\u51fa\\u529b\\u305b\\u3088\\u3002\\u3000N\\u79d1\\u76ee\\u00d7M\\u70b9-\\u7dcf\\u5408\\u70b9\\u6570A\\u70b9\\n# \\u9054\\u6210\\u4e0d\\u53ef\\u80fd\\u306a\\u5834\\u5408-1\\u3092\\u51fa\\u529b\\u3002 print(-1)\\n#\\n\\n# \\u5165\\u529b\\n# N K M\\n# A1 A2\\u2026An-1\\n# \\u51fa\\u529b\\n# \\u6700\\u5f8c\\u306e\\u30c6\\u30b9\\u30c8\\u3067\\u306e\\u5fc5\\u8981\\u6700\\u4f4e\\u70b9\\u307e\\u305f\\u306f-1\\n\\n\\nN,K,M = map(int,input().split())\\nA = list(map(int,input().split()))\\n\\nif 0 <= (N*M)-sum(A) <= K:\\n    print((N*M)-sum(A))\\n\\nelif K < (N*M)-sum(A):\\n    print(-1)\\n\\nelse:  # 0\\u3067\\u3082\\u9054\\u6210\\n   print(0)\", \"N, K, M = list(map(int, input().split()))\\nA = list(map(int, input().split()))\\nX = M * N - sum(A)\\n\\nif X <= K and X >= 0:\\n    print(X)\\nelif X <= K and X < 0:\\n    print(\\\"0\\\")\\nelse:\\n    print(\\\"-1\\\")\\n\", \"n, k, m = map(int, input().split())\\na = list(map(int, input().split()))\\n\\nans = max(0, m*n-sum(a)) if m*n-sum(a)<=k else -1\\nprint(ans)\", \"N, K, M = map(int, input().split())\\nscores = list(map(int, input().split()))\\n\\nx = M * N - sum(scores)\\n\\nif x > K:\\n    print('-1')\\nelif 0 < x:\\n    print(x)\\nelse:\\n    print('0')\", \"n, k, m = map(int, input().split())\\ntotal = sum(list(map(int, input().split())))\\n \\nlowest_score = m * n\\nadd_score = lowest_score - total\\n \\nif add_score <= 0:\\n    print(0)\\nelif add_score > k:\\n    print(-1)\\nelse:\\n    print(add_score)\", \"n,k,m = map(int,input().split())\\na = list(map(int,input().split()))\\n\\n# \\u6e80\\u70b9K\\u3092\\u3068\\u3063\\u3066\\u3082\\u5e73\\u5747\\uff4d\\u306b\\u306a\\u3089\\u306a\\u3044\\u3068\\u304d\\u306b\\u306f-1\\nif m > (sum(a) + k) / (len(a) + 1):\\n    print(-1)\\n# 0\\u70b9\\u3092\\u3068\\u3063\\u3066\\u3082\\u5e73\\u5747\\uff4d\\u4ee5\\u4e0a\\u306b\\u306a\\u308b\\u3068\\u304d\\u306b\\u306f\\uff10\\nelif m < (sum(a)) / (len(a) + 1):\\n    print(0)\\n# \\u4e0a\\u8a18\\u3067\\u7121\\u3044\\u5834\\u5408\\u306b\\u306f\\u5e73\\u5747\\uff4d\\u3068\\u306a\\u308b\\u6574\\u6570\\u3092\\u51fa\\u529b\\nelse:\\n    print((m * (len(a) + 1)) - sum(a) )\", \"n,k,m = map(int,input().split())\\na = list(map(int,input().split()))\\n\\n# \\u3053\\u308c\\u307e\\u3067\\u306e\\u70b9\\u6570sum(a)\\u3092\\u6e80\\u70b9k\\u3092\\u4f75\\u305b\\u3066\\u3082\\u5e73\\u5747m\\u306b\\u306a\\u3089\\u306a\\u3051\\u308c\\u3070-1\\nif sum(a) + k < n * m :\\n    print(-1)\\n# 0\\u70b9\\u3092\\u3068\\u3063\\u3066\\u3082\\u5e73\\u5747m\\u306b\\u306a\\u308b\\u3088\\u3046\\u306a\\u30890\\nelif (n * m) < sum(a):\\n    print(0)\\n# \\u4e0a\\u8a18\\u3067\\u306a\\u3051\\u308c\\u3070\\u5e73\\u5747m\\u306b\\u306a\\u308b\\u305f\\u3081\\u306b\\u5fc5\\u8981\\u306a\\u70b9\\u6570\\u3092\\u51fa\\u529b\\nelse:\\n    print((n*m)-sum(a))\", \"n, k, m = map(int, input().split())\\nlist01 = list(map(int, input().split()))\\nscore01 = n * m\\nscore02 = sum(list01)\\nif 0 < score01 - score02 <= k:\\n    print(score01 - score02)\\nelif score01 - score02 <= 0:\\n    print(0)\\nelse:\\n    print('-1')\", \"N,K,M= list(map(int,input().split())) \\nA=list(map(int,input().split())) \\n\\nscore=0\\nfor i in range(N-1):\\n    score+=A[i]\\n    \\nans=M*N-score\\nif 0<=ans<=K:\\n    print(ans)\\nelif ans<0:\\n    print(0)\\nelse:\\n    print(-1)\", \"n,k,m = map(int,input().split())\\na = list(map(int,input().split()))\\nneed = m*n-sum(a)\\nprint(0 if need<0 else need if need<=k else -1)\", \"N,K,M = map(int,input().split())\\narr = list(map(int,input().split()))\\nnum = sum(arr)\\nideal = N*M\\nsa = ideal - num\\nif sa > K:\\n  print(-1)\\nelif sa <= 0:\\n  print(0)\\nelse:\\n  print(sa)\", \"N, K, M = list(map(int, input().split()))\\nA = list(map(int, input().split()))\\n\\ndef answer(N: int, K: int, M: int, A: list) -> int:\\n    A = sum(A)\\n    if max(0, M * N - A) > K:\\n        return -1\\n    else:\\n        return(max(0, M * N - A))\\n\\nprint((answer(N, K, M, A)))\\n\\n\", \"N,K,M=map(int, input().split())\\nA=map(int,input().split())\\n\\nx=M*N-sum(A)\\n\\nif K>=x:\\n    if x<=0:\\n        print(0)\\n    else:\\n        print(x)\\n\\nelse:\\n    print(-1)\", \"n, k, m = map(int, input().split())\\nlist01 = list(map(int, input().split()))\\nscore01 = n * m\\nscore02 = sum(list01)\\nif 0 < score01 - score02 <= k:\\n    print(score01 - score02)\\nelif score01 - score02 <= 0:\\n    print(0)\\nelse:\\n    print('-1')\"]", "task": "apps", "difficulty": "introductory", "split": "test", "transformation_type": "plain_summary"}