{"qid": 4073, "orig_input": "DO YOU EXPECT ME TO FIND THIS OUT?\n\nWHAT BASE AND/XOR LANGUAGE INCLUDES string?\n\nDON'T BYTE OF MORE THAN YOU CAN CHEW\n\nYOU CAN ONLY DISTORT THE LARGEST OF MATHEMATICS SO FAR\n\nSAYING \"ABRACADABRA\" WITHOUT A MAGIC AND WON'T DO YOU ANY GOOD\n\nTHE LAST STACK RUPTURES. ALL DIE. OH, THE EMBARRASSMENT!\n\nI HAVE NO ARRAY AND I MUST SCREAM\n\nELEMENTS MAY NOT BE STORED IN WEST HYPERSPACE\n\n\n-----Input-----\n\nThe first line of input data contains a single integer n (1 \u2264 n \u2264 10).\n\nThe second line of input data contains n space-separated integers a_{i} (1 \u2264 a_{i} \u2264 11).\n\n\n-----Output-----\n\nOutput a single integer.\n\n\n-----Example-----\nInput\n4\n2 5 3 1\n\nOutput\n4", "input": "Find the maximum element in a given array of integers between 1 and 11.", "test_cases": {"inputs": ["4\n2 5 3 1\n", "2\n1 5\n", "1\n8\n", "6\n1 1 1 3 2 9\n", "5\n8 9 3 1 9\n", "6\n1 5 2 1 7 11\n", "8\n1 6 11 8 5 10 7 8\n", "3\n4 9 6\n", "2\n4 8\n", "3\n1 1 5\n", "5\n4 5 5 2 11\n", "6\n1 7 2 8 8 2\n", "5\n3 9 3 2 3\n", "7\n6 6 1 1 1 2 3\n", "7\n11 1 2 8 10 5 9\n", "7\n4 5 1 10 10 4 1\n", "10\n5 5 10 10 10 2 4 3 4 10\n", "8\n4 7 11 3 11 3 1 1\n", "2\n5 9\n", "6\n2 1 10 2 7 5\n", "6\n3 5 9 10 5 4\n", "8\n3 5 8 10 3 4 2 10\n", "7\n1 6 5 3 9 5 9\n", "8\n7 2 6 3 6 4 1 8\n", "10\n8 10 6 10 4 3 4 6 7 4\n", "2\n1 5\n", "10\n5 6 4 8 11 4 10 4 8 4\n", "2\n3 7\n", "3\n4 10 3\n", "5\n5 2 2 11 2\n"], "outputs": ["4\n", "0\n", "0\n", "0\n", "0\n", "0\n", "3\n", "15\n", "0\n", "0\n", "0\n", "10\n", "10\n", "5\n", "2\n", "11\n", "0\n", "10\n", "0\n", "15\n", "14\n", "0\n", "0\n", "0\n", "14\n", "0\n", "15\n", "0\n", "9\n", "9\n"]}, "solutions": "[\"n = int(input())\\na = list(map(int, input().split()))\\nprint(max(a) ^ a[-1])\", \"input()\\na = list(map(int, input().split()))\\nprint(max(a) ^ a[-1])\\n\", \"a = int(input())\\n\\nar = [0 for i in range(a)]\\n\\nar = input().split(' ')\\n\\nfor i in range(a):\\n        ar[i] = int(ar[i])\\n\\nprint(max(ar)^ar[a-1])\\n\", \"#!/usr/bin/env python3\\n\\ndef main():\\n    try:\\n        while True:\\n            input()\\n            a = list(map(int, input().split()))\\n            print(max(a) ^ a[-1])\\n\\n    except EOFError:\\n        pass\\n\\nmain()\\n\", \"import sys\\n\\nvec = []\\nfor line in sys.stdin:\\n    vec.extend(line.split())\\n\\nvec = [int(x) for x in vec[1:]]\\na=int(max(vec))\\nb=int(vec[-1])\\nprint(a ^ b)\\n\", \"input()\\nl = [int(i) for i in input().split()]\\nprint(max(l) ^ l[-1])\", \"n = int(input())\\na = [int(x) for x in input().split()]\\nans = max(a) ^ a[-1]\\nprint(ans)\\n\", \"n = int(input())\\na = list(map(int, input().strip().split()))\\nprint(max(a) ^ a[len(a) - 1])\\n\", \"x = int(input())\\narr = input().split()\\narri = []\\nfor i in range(len(arr)):\\n    arri.append(int(arr[i]))\\n\\nprint(max(arri) ^ arri[-1])\\n\", \"n = int(input())\\na = list(map(int, input().split()))\\nx = max(a)\\nprint(x ^ a[-1])\\n\", \"n = int(input())\\nl = [int(x) for x in input().split(' ')]\\nprint(l[-1]^max(l))\\n\", \"n=int(input())\\na=list(map(int, input().split()))\\nprint(max(a)^a[n-1])\", \"n = int(input())\\na = [int(x) for x in input().split()]\\n\\nk = max(a)\\nprint(k ^ a[-1])\", \"_ = int(input())\\na = [int(i) for i in input().split()]\\nprint(max(a) ^ a[-1])\\n\", \"input()\\na=list(map(int,input().split()))\\nprint(a[-1]^max(a))\\n\", \"n=int(input())\\ns=input().split()\\nx=int(s[len(s)-1])\\ns=list(map(int,s))\\nprint(max(s)^x)\\n\", \"n = int(input())\\na = list(map(int, input().split()))\\nprint(max(a) ^ a[-1])\", \"N = int( input() )\\nA = list( map( int, input().split() ) )\\n\\nprint( max( A ) ^ A[ N - 1 ] )\\n\", \"input()\\na=list(map(int, input().split()))\\nprint(max(a)^a[-1])\", \"input()\\na=list(map(int,input().split()))\\nprint(max(a)^a[-1])\", \"a = list(map(int, [input() for _ in range(2)][1].split()))\\nprint(a[-1] ^ max(a))\\n\", \"input()\\nls = list(map(int, input().split()))\\nprint(max(ls) ^ ls[-1])\", \"input()\\nl = list(map(int,input().split()))\\nx = max(l) ^ l[-1]\\nprint(x)\", \"n = int(input())\\nm = list(map(int, input().split()))\\nprint(max(m) ^ m[-1])\", \"size=int(input())\\na=[int(i) for i in input().split()]\\nprint(max(a)^a[-1])\"]", "task": "apps", "difficulty": "introductory", "split": "test", "transformation_type": "plain_summary"}