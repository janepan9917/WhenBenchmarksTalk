{"qid": 4011, "orig_input": "You are given a long decimal number $a$ consisting of $n$ digits from $1$ to $9$. You also have a function $f$ that maps every digit from $1$ to $9$ to some (possibly the same) digit from $1$ to $9$.\n\nYou can perform the following operation no more than once: choose a non-empty contiguous subsegment of digits in $a$, and replace each digit $x$ from this segment with $f(x)$. For example, if $a = 1337$, $f(1) = 1$, $f(3) = 5$, $f(7) = 3$, and you choose the segment consisting of three rightmost digits, you get $1553$ as the result.\n\nWhat is the maximum possible number you can obtain applying this operation no more than once?\n\n\n-----Input-----\n\nThe first line contains one integer $n$ ($1 \\le n \\le 2 \\cdot 10^5$) \u2014 the number of digits in $a$.\n\nThe second line contains a string of $n$ characters, denoting the number $a$. Each character is a decimal digit from $1$ to $9$.\n\nThe third line contains exactly $9$ integers $f(1)$, $f(2)$, ..., $f(9)$ ($1 \\le f(i) \\le 9$).\n\n\n-----Output-----\n\nPrint the maximum number you can get after applying the operation described in the statement no more than once.\n\n\n-----Examples-----\nInput\n4\n1337\n1 2 5 4 6 6 3 1 9\n\nOutput\n1557\n\nInput\n5\n11111\n9 8 7 6 5 4 3 2 1\n\nOutput\n99999\n\nInput\n2\n33\n1 1 1 1 1 1 1 1 1\n\nOutput\n33", "input": "Find the maximum number obtainable by applying a digit-mapping function to a contiguous subsegment of a given number at most once.", "test_cases": {"inputs": ["4\n1337\n1 2 5 4 6 6 3 1 9\n", "5\n11111\n9 8 7 6 5 4 3 2 1\n", "2\n33\n1 1 1 1 1 1 1 1 1\n", "4\n1234\n1 1 4 5 1 1 1 1 1\n", "6\n912349\n1 1 4 5 1 1 1 1 1\n", "1\n5\n1 2 3 4 5 6 7 8 9\n", "2\n51\n1 2 5 4 6 6 3 1 9\n", "2\n51\n1 2 3 4 5 6 7 8 9\n", "3\n738\n3 7 4 9 4 6 7 3 3\n", "9\n193787726\n5 5 8 9 4 5 2 9 1\n", "4\n1733\n1 2 5 4 6 6 3 1 9\n", "15\n164563457334873\n4 3 3 3 6 6 8 8 5\n", "1\n9\n2 3 4 5 6 7 8 9 1\n", "8\n71222655\n8 4 8 9 7 6 6 4 8\n", "7\n6545161\n7 2 3 5 9 6 8 1 3\n", "4\n4444\n2 1 4 3 6 5 8 9 7\n", "5\n77372\n1 4 7 7 9 1 9 9 7\n", "2\n33\n4 5 5 8 7 7 5 4 4\n", "3\n931\n4 7 8 6 2 4 3 1 2\n", "1\n2\n9 7 6 2 2 6 2 4 4\n", "18\n263583239493593927\n7 7 3 7 7 6 9 7 6\n", "3\n512\n3 3 7 7 2 4 7 9 4\n", "2\n87\n6 2 9 2 4 3 9 6 4\n", "5\n21558\n6 9 4 9 6 6 5 9 7\n", "8\n72231447\n7 9 4 5 1 2 7 6 5\n", "2\n47\n9 1 2 3 7 3 8 6 1\n", "3\n934\n5 9 6 8 6 2 2 9 6\n", "4\n4841\n6 4 7 1 7 1 3 9 7\n", "1\n3\n2 8 4 5 4 1 7 2 3\n", "7\n3243631\n6 3 6 5 2 9 2 2 2\n", "3\n814\n5 7 1 7 4 3 9 4 4\n", "11\n95933442388\n4 8 4 6 3 7 5 8 5\n", "10\n2422346641\n4 2 8 7 4 7 1 9 7\n", "1\n2\n1 4 4 8 8 8 7 3 2\n", "4\n3753\n5 8 3 2 6 5 7 4 3\n", "2\n35\n1 8 7 2 1 8 8 6 2\n", "4\n7362\n2 6 4 6 5 7 5 5 8\n", "1\n3\n4 9 9 6 8 4 5 5 5\n", "15\n338725139492819\n6 2 4 9 2 9 3 8 9\n", "5\n96563\n6 7 4 8 5 5 4 7 4\n", "4\n5422\n3 4 1 8 6 5 1 7 2\n", "3\n743\n4 4 4 8 5 8 6 6 5\n", "5\n13362\n5 3 6 5 8 7 8 8 3\n", "3\n235\n4 7 3 2 6 8 8 7 5\n", "5\n28491\n1 6 5 5 8 9 6 9 4\n", "11\n42828727593\n8 8 7 5 6 5 4 8 9\n", "2\n42\n2 3 8 5 6 5 3 1 8\n", "20\n58832646452639258958\n9 2 2 1 1 4 8 6 6\n", "3\n649\n1 5 2 9 7 8 8 3 1\n", "6\n848821\n2 3 9 4 9 6 5 3 5\n", "6\n422354\n8 4 3 6 7 9 7 6 8\n", "2\n98\n7 5 5 4 8 3 1 9 4\n", "6\n853377\n3 5 7 3 9 5 8 1 5\n", "3\n613\n6 4 4 5 7 5 4 3 4\n", "3\n985\n3 5 3 8 8 6 4 4 3\n", "2\n22\n8 5 2 7 9 3 8 8 1\n", "4\n6785\n6 9 7 3 8 2 9 4 3\n", "1\n6\n4 8 2 6 8 8 8 8 3\n", "1\n3\n8 7 8 7 8 5 8 2 2\n", "5\n11636\n9 2 2 1 3 8 1 7 5\n", "5\n89126\n9 3 7 6 7 8 9 8 3\n", "5\n14241\n4 8 1 9 7 8 7 3 5\n", "19\n4752348644348366742\n6 7 9 7 5 7 9 9 5\n", "6\n463364\n9 7 7 4 9 7 3 3 6\n", "5\n14824\n6 3 4 5 4 7 9 9 7\n", "1\n6\n2 6 3 9 8 4 7 3 2\n", "11\n69351528788\n2 3 8 2 9 3 9 8 5\n", "3\n469\n5 6 8 9 2 6 7 1 5\n", "1\n4\n9 7 4 6 5 6 2 9 3\n", "4\n3511\n2 9 9 9 7 7 2 7 1\n", "1\n6\n4 2 1 6 8 9 5 2 3\n", "19\n2612437771227631192\n6 7 3 6 8 7 9 9 9\n", "5\n63192\n1 7 4 6 9 3 6 2 2\n", "2\n36\n1 4 7 5 3 2 7 8 7\n", "6\n135642\n7 9 3 8 4 8 2 3 8\n", "8\n25711736\n9 3 1 1 3 2 8 8 1\n", "9\n145553875\n9 2 5 3 8 6 3 1 5\n", "3\n536\n7 7 8 9 7 5 6 5 6\n", "5\n73491\n9 9 2 1 4 2 1 8 7\n", "11\n19727914253\n2 9 4 6 4 5 1 7 6\n", "1\n1\n9 6 4 3 4 6 8 9 6\n", "4\n3985\n2 8 1 1 9 2 2 8 3\n", "5\n97533\n2 8 4 8 9 2 2 8 2\n", "4\n3411\n2 9 5 8 1 9 9 1 1\n", "16\n3245311794575433\n3 5 3 4 3 4 2 7 5\n", "3\n149\n1 2 3 8 8 6 6 9 4\n", "3\n167\n3 1 6 6 7 8 5 6 3\n", "11\n15968722286\n8 6 8 3 5 7 3 8 4\n", "3\n149\n2 4 4 5 5 9 8 2 2\n"], "outputs": ["1557\n", "99999\n", "33\n", "1245\n", "912459\n", "5\n", "61\n", "51\n", "748\n", "593787726\n", "1755\n", "464563457334873\n", "9\n", "78444677\n", "6959767\n", "4444\n", "99794\n", "55\n", "984\n", "7\n", "763783239493593927\n", "533\n", "89\n", "96669\n", "79947557\n", "48\n", "968\n", "4941\n", "4\n", "6356966\n", "857\n", "95944668488\n", "2722877774\n", "4\n", "3763\n", "75\n", "7476\n", "9\n", "448725139492819\n", "96564\n", "6844\n", "784\n", "56673\n", "736\n", "69591\n", "58888727593\n", "53\n", "58832646452639258958\n", "899\n", "848832\n", "644376\n", "99\n", "897788\n", "664\n", "988\n", "55\n", "6985\n", "8\n", "8\n", "99836\n", "89938\n", "49894\n", "7957979777979977977\n", "477774\n", "65935\n", "6\n", "69892938988\n", "969\n", "6\n", "9722\n", "9\n", "7767639996779736697\n", "64192\n", "76\n", "735642\n", "35711736\n", "945553875\n", "786\n", "73499\n", "29727914253\n", "9\n", "3989\n", "97944\n", "5822\n", "3545311794575433\n", "189\n", "387\n", "85968722286\n", "259\n"]}, "solutions": "[\"def main():\\n    n = int(input())\\n    a = list(map(int, input()))\\n    f = [0] + list(map(int, input().split()))\\n    i = 0\\n    while f[a[i]] <= a[i]:\\n        i += 1\\n        if i == n:\\n            break\\n    for j in range(i, n):\\n        if f[a[j]] < a[j]:\\n            break\\n        else:\\n            a[j] = f[a[j]]\\n    print(\\\"\\\".join(str(x) for x in a))\\n    return 0\\n\\nmain()\", \"n = int(input())\\ns = input()\\nd = input().split()\\nx = 0\\nfor i in s:\\n    if d[int(i) - 1] > i:\\n        break\\n    x += 1\\nr = s[:x]\\np = x\\nfor i in s[x:]:\\n    if d[int(i) - 1] >= i:\\n        r += d[int(i) - 1]\\n    else:\\n        r += s[p:]\\n        break\\n    p += 1\\nprint(r)\", \"# AC\\nimport sys\\n\\n\\nclass Main:\\n    def __init__(self):\\n        self.buff = None\\n        self.index = 0\\n\\n    def __next__(self):\\n        if self.buff is None or self.index == len(self.buff):\\n            self.buff = sys.stdin.readline().split()\\n            self.index = 0\\n        val = self.buff[self.index]\\n        self.index += 1\\n        return val\\n\\n    def next_int(self):\\n        return int(next(self))\\n\\n    def solve(self):\\n        n = self.next_int()\\n        s = [int(x) for x in next(self)]\\n        x = [self.next_int() for _ in range(0, 9)]\\n        id = 0\\n        while id < n and s[id] >= x[s[id] - 1]:\\n            id += 1\\n        while id < n and s[id] <= x[s[id] - 1]:\\n            s[id] = x[s[id] - 1]\\n            id += 1\\n        print(''.join([str(x) for x in s]))\\n\\n\\ndef __starting_point():\\n    Main().solve()\\n\\n__starting_point()\", \"def main():\\n    input()\\n    n = [int(x) for x in input()]\\n    f = [0]+[int(x) for x in input().split()]\\n    for i in range(len(n)):\\n        if f[n[i]] > n[i]:\\n            n[i] = f[n[i]]\\n            for j in range(i+1, len(n)):\\n                if f[n[j]] < n[j]:\\n                    break\\n                n[j] = f[n[j]]\\n            break\\n    print(''.join(str(x) for x in n))\\nmain()\\n\\n\", \"n = int(input())\\na = list(input())\\nfi = list(map(int,input().split()))\\nflag = 0\\nfor i in range(n):\\n    if fi[int(a[i])-1] > int(a[i]) and flag != 2:\\n        flag = 1\\n        print(fi[int(a[i])-1],end=\\\"\\\")\\n    elif fi[int(a[i])-1] == int(a[i]) and flag == 1:\\n        print(a[i],end=\\\"\\\")\\n    else:\\n        if flag == 1:\\n            flag = 2\\n        print(a[i],end=\\\"\\\")\\n    \\n\", \"a = int(input())\\nN = list(input())\\nf = list(map(int, input().split()))\\n\\nind = 0\\n\\nfor i, n in enumerate(N):\\n    if int(n) < f[int(n) - 1]:\\n        N[i] = f[int(n) - 1]\\n        ind = 1\\n    if int(n) > f[int(n) - 1] and ind == 1:\\n        break\\n\\nprint(\\\"\\\".join(list(map(str, N))))\\n        \\n\", \"import sys\\n\\ninput = sys.stdin.readline\\n\\nn = int(input())\\n\\ns = [int(x) for x in input().strip()]\\n\\nf = list(map(int, input().split()))\\n\\nstarted = False\\nfor i in range(len(s)):\\n  if f[s[i]-1] > s[i]:\\n    started = True\\n    s[i] = f[s[i]-1]\\n  elif started and f[s[i]-1] < s[i]:\\n    break\\n\\nprint(''.join([str(x) for x in s]))\\n\", \"n = int(input())\\nl = [*map(int, input())]\\nd = {}\\nfor i, j in enumerate(map(int, input().split())):\\n    d[i + 1] = j\\n\\ni = 0\\nwhile i < n and d[l[i]] <= l[i]:\\n    i += 1\\nwhile i < n and d[l[i]] >= l[i]:\\n    l[i] = d[l[i]]\\n    i += 1\\nprint(''.join(map(str, l)))\", \"#\\t!/usr/bin/env python3\\n#\\tencoding: UTF-8\\n#\\tModified: <26/Apr/2019 08:18:47 PM>\\n\\n\\n#\\t\\u272a H4WK3yE\\u4e61\\n#\\tMohd. Farhan Tahir\\n#\\tIndian Institute Of Information Technology (IIIT),Gwalior\\n\\n\\n# ///==========Libraries, Constants and Functions=============///\\n\\n\\nimport sys\\n\\n\\ndef get_array(): return list(map(int, sys.stdin.readline().split()))\\n\\n\\ndef get_ints(): return map(int, sys.stdin.readline().split())\\n\\n\\ndef input(): return sys.stdin.readline().strip()\\n\\n# ///==========MAIN=============///\\n\\n\\ndef main():\\n    n = int(input())\\n    a = list(input())\\n    f = get_array()\\n    flag = False\\n    for i in range(n):\\n        x = int(a[i])\\n        if (x < f[x - 1]):\\n            flag = True\\n            a[i] = f[x - 1]\\n        else:\\n            if flag == True and x > f[x - 1]:\\n                break\\n    print(*a, sep='')\\n\\n\\ndef __starting_point():\\n    main()\\n\\n__starting_point()\", \"n = int(input())\\na = list(input())\\nf = list(map(int,input().split()))\\nf = {i+1:f[i] for i in range(9)}\\n\\nst = n\\nfor i in range(n):\\n\\tc = int(a[i])\\n\\tif f[c] > c:\\n\\t\\tst = i\\n\\t\\tbreak\\n\\nfor i in range(st,n):\\n\\tc = int(a[i])\\n\\tif f[c] >= c:\\n\\t\\ta[i] = str(f[c])\\n\\telse:\\n\\t\\tbreak\\n\\nprint(''.join(a))\", \"n=int(input())\\ns=str(input())\\ndict1={}\\narr=list(map(int,input().split()))\\nfor i in range(1,10):\\n\\tdict1[i]=arr[i-1]\\nans=''\\ni=0\\nwhile(i<n):\\n\\tif(dict1[int(s[i])]>int(s[i])):\\n\\t\\tbreak\\n\\telse:\\n\\t\\tans+=s[i]\\n\\t\\ti+=1\\n#print(ans)\\nwhile(i<n):\\n\\tif(dict1[int(s[i])]<int(s[i])):\\n\\t\\tbreak\\n\\telse:\\n\\t\\tans+=str(dict1[int(s[i])])\\n\\t\\ti+=1\\nans+=s[i:]\\nprint(ans)\\n\\n\", \"n = int(input())\\na1 = list(map(int, list(input())))\\nu = list(map(int, input().split()))\\na2 = []\\nfor i in range(n):\\n    a2.append(u[a1[i] - 1])\\nok = False\\ni1 = -1\\nfor i in range(n):\\n    if a2[i] > a1[i]:\\n        i1 = i\\n        ok = True\\n        break\\nif ok:\\n    i2 = n\\n    for i in range(i1 + 1, n):\\n        if a2[i] < a1[i]:\\n            i2 = i\\n            break\\n    for i in range(i1, i2):\\n        a1[i] = a2[i]\\nprint(''.join(map(str, a1)))\\n\", \"\\n\\n\\ninput()\\nA = list(map(int,input()))\\nf = tuple(map(int,input().split()))\\n\\nfor i,a in enumerate(A):\\n    if a < f[a-1]:\\n        break\\nfor j,a in enumerate(A[i:], start=i):\\n    if a > f[a-1]:\\n        break\\n    else:\\n        A[j] = f[a-1]\\n\\nprint(*A, sep='')\", \"#!/usr/bin/env python3\\n# -*- coding: utf-8 -*-\\n##################################\\n# University of Wisconsin-Madison\\n# Author: Yaqi Zhang\\n##################################\\n# This module contains\\n##################################\\n\\n# standard library\\nimport sys\\n\\ndef main():\\n    # nums = list(map(int, input().split()))\\n    n = int(input())\\n    s = input()\\n    assert(len(s) == n)\\n    digits = list(s)\\n    m = [0]\\n    m.extend(list(map(int, input().split())))\\n    change = False\\n    for i, ch in enumerate(digits):\\n        d = int(ch)\\n        if m[d] > d:\\n            digits[i] = str(m[d])\\n            change = True\\n        else:\\n            if m[d] < d and change:\\n                break\\n    print(''.join(digits))\\n\\n\\ndef __starting_point():\\n    main()\\n\\n\\n__starting_point()\", \"n = int(input())\\ns = list(input())\\nf = [0] + list(map(int, input().split()))\\ncok = 1\\nfor i in range(n):\\n    q = int(s[i])\\n    if cok:\\n        if f[q] > q:\\n            cok = 0\\n            s[i] = str(f[q])\\n    else:\\n        if f[q] >= q:\\n            s[i] = str(f[q])\\n        else:\\n            print(''.join(s))\\n            return\\nprint(''.join(s))\\n\\n\", \"n=int(input())\\nnum=[int(x) for x in list(input())]\\nf=[int(x) for x in input().split()]\\nflag=0\\nfor i in range(n):\\n    if num[i]<f[num[i]-1]:\\n        num[i]=f[num[i]-1]\\n        flag=1\\n    elif num[i]>f[num[i]-1]:\\n        if flag==1:\\n            break\\nprint(*num,sep='')\\n\", \"n = int(input())\\ns = [int(item) for item in list(input())]\\nf = [0] + [int(item) for item in input().split()]\\n\\nnew_s = [0] * n\\nfor i in range(n):\\n    new_s[i] = f[int(s[i])]\\n\\ni = 0\\nidx = -1\\nfor j in range(n):\\n    if new_s[j] > s[j]:\\n        idx = j\\n        break\\n\\nif idx == -1:\\n    print(''.join(str(item) for item in s))\\nelse:\\n    start = idx\\n    while idx < n and new_s[idx] >= s[idx]:\\n        idx += 1\\n    u = [str(item) for item in s[:start]]\\n    v = [str(item) for item in new_s[start:idx]]\\n    w = [str(item) for item in s[idx:]]\\n    assert(len(u) + len(v) + len(w) == n)\\n    print(''.join(u) + ''.join(v) + ''.join(w))\\n\", \"n = int(input())\\na = input()\\n\\nf = [int(x) for x in input().split()]\\n\\n\\nr = \\\"\\\"\\n\\nflag = -1\\nfor c in a:\\n\\n    k = f[int(c)-1]\\n    if flag == -1:\\n        if k > int(c):\\n            flag = 0\\n            r += str(k)\\n        else:\\n            r += c\\n\\n    elif flag == 0:\\n        if k < int(c):\\n            r += c\\n            flag = 1\\n        else:\\n            r += str(k)\\n    else:\\n        r += c\\n\\nprint(r)\\n\", \"#!/usr/bin/env python\\n# -*- coding: utf-8 -*-\\n\\n\\\"\\\"\\\"Codeforces Round #555 (Div. 3)\\n\\nProblem B. Long Number\\n\\n:author:         Kitchen Tong\\n:mail:    kctong529@gmail.com\\n\\nPlease feel free to contact me if you have any question\\nregarding the implementation below.\\n\\\"\\\"\\\"\\n\\n__version__ = '0.2'\\n__date__ = '2019-04-26'\\n\\nimport sys\\n\\n\\ndef solve(a, f):\\n    mydict = dict(list(zip(list(map(str, list(range(1, 10)))), f)))\\n    ans = []\\n    flag = -1\\n    for ch in a:\\n        if mydict[ch] > ch and flag <= 0:\\n            ans.append(mydict[ch])\\n            flag = 0\\n        else:\\n            ans.append(ch)\\n            if flag >= 0 and mydict[ch] < ch:\\n                flag = 1\\n    return ''.join(ans)\\n\\ndef main(argv=None):\\n    n = int(input())\\n    a = list(input())\\n    f = list(input().split())\\n    print(solve(a, f))\\n    return 0\\n\\ndef __starting_point():\\n    STATUS = main()\\n    return(STATUS)\\n\\n\\n__starting_point()\", \"n = int(input())\\na = list(input())\\nd = dict()\\ns = input().split()\\ncan = set()\\nfor i in range(9):\\n    if i < int(s[i]):\\n        can.add(str(i + 1))\\n    d[str(i + 1)] = s[i]\\nfor i in range(n):\\n    if a[i] < d[a[i]]:\\n        a[i] = d[a[i]]\\n        i += 1\\n        while i < n and a[i] in can:\\n            a[i] = d[a[i]]\\n            i += 1\\n        break\\nprint(*a, sep='')\\n\", \"n = int(input())\\nx = list(input())\\nf = dict(zip(range(1,10), map(int, input().strip().split())))\\n\\nfor i in range(n):\\n    p = int(x[i])\\n    if p<f[p]:\\n        while i<n and int(x[i])<=f[int(x[i])]:\\n            x[i] = str(f[int(x[i])])\\n            i += 1\\n        break\\nprint(\\\"\\\".join(x))\", \"n = int(input())\\ns = input()\\nperm = list(map(int,input().split()))\\nwyn = list(map(int,s))\\nc = 0\\nfor i in range(n):\\n\\tif c == 1:\\n\\t\\tbreak\\n\\tif perm[int(s[i])-1] > int(s[i]):\\n\\t\\twyn[i] = perm[int(s[i])-1]\\n\\t\\tj = i \\n\\t\\tc = 1\\n\\t\\twhile True:\\n\\t\\t\\tj += 1\\n\\t\\t\\tif j < n and perm[int(s[j])-1] >= int(s[j]):\\n\\t\\t\\t\\t\\twyn[j] = perm[int(s[j])-1]\\n\\t\\t\\telse:\\n\\t\\t\\t\\tbreak\\nfor i in wyn:\\n\\tprint(i, end = \\\"\\\")\", \"n = int(input())\\ns = list(input())\\nf = [int(elem) for elem in input().split()]\\nind = -1\\nfor i in range(n):\\n    if f[int(s[i]) - 1] > int(s[i]):\\n        ind = i\\n        break\\nif ind == -1:\\n    for i in range(n):\\n        print(s[i], end='')\\nelse:\\n    x = i\\n    while x < n and f[int(s[x]) - 1] >= int(s[x]):\\n        s[x] = f[int(s[x]) - 1]\\n        x += 1\\n    for i in range(n):\\n        print(s[i], end='')\", \"n = int(input())\\na = list(input())\\n\\nf = ['0']\\nf.extend(list(input().split()))\\n# print('f:', f)\\n\\nstarted = False\\nfor i, item in enumerate(a):\\n\\tif not started:\\n\\t\\tif int(f[int(item)]) > int(item):\\n\\t\\t\\ta[i] = f[int(item)]\\n\\t\\t\\tstarted = True\\n\\telse:\\n\\t\\tif int(f[int(item)]) >= int(item):\\n\\t\\t\\ta[i] = f[int(item)]\\n\\t\\telse:\\n\\t\\t\\tbreak\\n\\nprint(''.join(a))\\n\", \"n = int(input())\\na = input()\\nsp = list(map(str, input().split()))\\nnew = \\\"\\\"\\nfl1 = True\\nfl2 = False\\nfor x in a:\\n\\tif int(x) > int(sp[int(x) - 1]) and not fl1 or fl2:\\n\\t\\tfl2 = True\\n\\t\\tnew += x\\n\\telse:\\n\\t\\tif int(x) < int(sp[int(x) - 1]):\\n\\t\\t\\tnew += sp[int(x) - 1]\\n\\t\\t\\tfl1 = False\\n\\t\\telse:\\n\\t\\t\\tnew += x\\nprint(new)\\n\"]", "task": "apps", "difficulty": "introductory", "split": "test", "transformation_type": "plain_summary"}