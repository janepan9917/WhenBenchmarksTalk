{"qid": 4081, "orig_input": "The only difference between problems C1 and C2 is that all values in input of problem C1 are distinct (this condition may be false for problem C2).\n\nYou are given a sequence $a$ consisting of $n$ integers. All these integers are distinct, each value from $1$ to $n$ appears in the sequence exactly once.\n\nYou are making a sequence of moves. During each move you must take either the leftmost element of the sequence or the rightmost element of the sequence, write it down and remove it from the sequence. Your task is to write down a strictly increasing sequence, and among all such sequences you should take the longest (the length of the sequence is the number of elements in it).\n\nFor example, for the sequence $[2, 1, 5, 4, 3]$ the answer is $4$ (you take $2$ and the sequence becomes $[1, 5, 4, 3]$, then you take the rightmost element $3$ and the sequence becomes $[1, 5, 4]$, then you take $4$ and the sequence becomes $[1, 5]$ and then you take $5$ and the sequence becomes $[1]$, the obtained increasing sequence is $[2, 3, 4, 5]$).\n\n\n-----Input-----\n\nThe first line of the input contains one integer $n$ ($1 \\le n \\le 2 \\cdot 10^5$) \u2014 the number of elements in $a$.\n\nThe second line of the input contains $n$ integers $a_1, a_2, \\dots, a_n$ ($1 \\le a_i \\le n$), where $a_i$ is the $i$-th element of $a$. All these integers are pairwise distinct.\n\n\n-----Output-----\n\nIn the first line of the output print $k$ \u2014 the maximum number of elements in a strictly increasing sequence you can obtain.\n\nIn the second line print a string $s$ of length $k$, where the $j$-th character of this string $s_j$ should be 'L' if you take the leftmost element during the $j$-th move and 'R' otherwise. If there are multiple answers, you can print any.\n\n\n-----Examples-----\nInput\n5\n2 1 5 4 3\n\nOutput\n4\nLRRR\n\nInput\n7\n1 3 5 6 7 4 2\n\nOutput\n7\nLRLRLLL\n\nInput\n3\n1 2 3\n\nOutput\n3\nLLL\n\nInput\n4\n1 2 4 3\n\nOutput\n4\nLLRL\n\n\n\n-----Note-----\n\nThe first example is described in the problem statement.", "input": "Find the longest strictly increasing subsequence by removing elements from either end of a permutation of integers from 1 to n.", "test_cases": {"inputs": ["5\n2 1 5 4 3\n", "7\n1 3 5 6 7 4 2\n", "3\n1 2 3\n", "4\n1 2 4 3\n", "10\n1 2 5 9 10 8 7 6 4 3\n", "100\n2 3 4 6 7 8 9 12 13 14 15 16 17 19 20 21 24 25 27 28 31 32 34 40 42 43 45 46 47 49 54 55 58 59 60 61 62 63 68 71 74 75 80 81 82 85 86 87 88 89 91 92 95 96 98 99 100 97 94 93 90 84 83 79 78 77 76 73 72 70 69 67 66 65 64 57 56 53 52 51 50 48 44 41 39 38 37 36 35 33 30 29 26 23 22 18 11 10 5 1\n", "20\n1 5 7 8 9 11 13 15 17 20 19 18 16 14 12 4 3 10 6 2\n", "51\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51\n", "1\n1\n", "2\n1 2\n", "20\n19 20 2 11 16 3 1 12 9 8 18 17 7 15 4 10 6 5 13 14\n", "19\n10 1 11 12 8 5 2 13 6 3 9 17 14 7 18 4 15 19 16\n", "2\n2 1\n", "19\n14 1 19 3 4 11 10 5 18 16 12 2 13 6 15 8 7 17 9\n", "9\n3 7 2 5 6 9 4 8 1\n", "5\n5 1 4 3 2\n", "17\n10 17 13 12 11 15 6 8 5 3 16 9 2 7 1 4 14\n", "16\n7 15 3 11 4 14 8 9 16 1 2 10 5 6 12 13\n", "7\n3 2 5 6 7 1 4\n", "5\n5 3 4 1 2\n", "17\n5 15 13 8 2 14 7 9 17 11 10 3 16 6 1 4 12\n", "3\n2 1 3\n", "12\n3 10 2 9 5 11 7 8 6 1 4 12\n", "18\n12 9 16 11 2 4 6 15 18 17 7 1 10 13 5 14 8 3\n", "3\n3 1 2\n", "4\n4 3 2 1\n", "6\n5 6 3 4 2 1\n", "3\n3 2 1\n", "12\n10 5 9 4 6 1 12 2 8 7 3 11\n"], "outputs": ["4\nLRRR\n", "7\nLRLRLLL\n", "3\nLLL\n", "4\nLLRL\n", "10\nLLRRLRRRLL\n", "100\nRLLLRLLLLRRLLLLLLRLLLRRLLRLLRRLLRLRRRRRLRLLRLLLRLRRRRLLRRLLLLLLRRRRLRRLRRLLRRRRLLLRRLLLLLRLLRRLLRLLL\n", "13\nLRLRLLLRLLLLL\n", "51\nLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL\n", "1\nL\n", "2\nLL\n", "3\nRLL\n", "3\nLRR\n", "2\nRL\n", "3\nRLR\n", "4\nRLLR\n", "4\nRRRL\n", "3\nLRL\n", "3\nLRL\n", "2\nLR\n", "2\nRL\n", "3\nLRL\n", "2\nLR\n", "3\nLLR\n", "4\nRRLR\n", "2\nRL\n", "4\nRRRL\n", "5\nRRRLL\n", "3\nRRL\n", "2\nLR\n"]}, "solutions": "[\"x=int(input())\\na=list(map(int,input().strip().split()))\\ny=[]\\nc=0\\nf1=1\\nf2=1\\nl=0\\nr=x-1\\nop=[]\\nwhile(f1 or f2):\\n    if(l>r):\\n        break\\n    if(a[l]<c):\\n        f1=0\\n    if(a[r]<c):\\n        f2=0\\n    if(f1 and f2):\\n        if(a[l]<=a[r]):\\n            c=a[l]\\n            l=l+1\\n            op.append('L')\\n        else:\\n            c=a[r]\\n            r=r-1\\n            op.append('R')\\n    elif(f1):\\n        c=a[l]\\n        l=l+1\\n        op.append('L')\\n    elif(f2):\\n        c=a[r]\\n        r=r-1\\n        op.append('R')\\nprint(len(op))\\nprint(\\\"\\\".join(op))\\n\", \"n = int(input())\\na = list(map(int,input().split()))\\nt = 0\\nc = 0\\nl = 0\\nb = ''\\nr = n-1\\nwhile l<=r:\\n    m1 = min(a[l],a[r])\\n    m2 = max(a[l],a[r])\\n    if m1>t:\\n        t = m1\\n        if m1==a[r]:\\n            r-=1\\n            b+='R'\\n        elif m1==a[l]:\\n            l+=1\\n            b+='L'\\n        c+=1\\n    elif m2>t:\\n        t = m2\\n        if m2==a[r]:\\n            r-=1\\n            b+='R'\\n        elif m2==a[l]:\\n            l+=1\\n            b+='L'\\n        c+=1\\n    else:\\n        break\\n\\nprint(c)\\nprint(b)\\n\", \"# AC\\nimport sys\\n\\n\\nclass Main:\\n    def __init__(self):\\n        self.buff = None\\n        self.index = 0\\n\\n    def __next__(self):\\n        if self.buff is None or self.index == len(self.buff):\\n            self.buff = sys.stdin.readline().split()\\n            self.index = 0\\n        val = self.buff[self.index]\\n        self.index += 1\\n        return val\\n\\n    def next_int(self):\\n        return int(next(self))\\n\\n    def solve(self):\\n        n = self.next_int()\\n        x = [self.next_int() for _ in range(0, n)]\\n        d = 0\\n        l = 0\\n        r = n - 1\\n        rs = []\\n        while l <= r:\\n            if x[l] < d and x[r] < d:\\n                break\\n            if x[l] < d:\\n                rs.append('R')\\n                d = x[r]\\n                r -= 1\\n            elif x[r] < d:\\n                rs.append('L')\\n                d = x[l]\\n                l += 1\\n            elif x[r] < x[l]:\\n                rs.append('R')\\n                d = x[r]\\n                r -= 1\\n            else:\\n                rs.append('L')\\n                d = x[l]\\n                l += 1\\n        print(len(rs))\\n        print(''.join(rs))\\n\\n\\ndef __starting_point():\\n    Main().solve()\\n\\n__starting_point()\", \"def main():\\n    n = int(input())\\n    a = list(map(int, input().split()))\\n    i = 0\\n    j = n - 1\\n    k = 0\\n    mi = 0\\n    ans = \\\"\\\"\\n    while True:\\n        if a[i] < a[j]:\\n            if mi < a[i]:\\n                mi = a[i]\\n                i += 1\\n                ans += \\\"L\\\"\\n            elif mi < a[j]:\\n                mi = a[j]\\n                j -= 1\\n                ans += \\\"R\\\"\\n            else:\\n                break\\n        else:\\n            if mi < a[j]:\\n                mi = a[j]\\n                j -= 1\\n                ans += \\\"R\\\"\\n            elif mi < a[i]:\\n                mi = a[i]\\n                i += 1\\n                ans += \\\"L\\\"\\n            else:\\n                break\\n    print(len(ans))\\n    print(ans)\\n    return 0\\n\\nmain()\", \"from collections import deque\\nn = int(input())\\nA = list(map(int, input().split()))\\nA = deque(A)\\nans = ''\\nlast = 0\\nwhile len(A) and (A[0] > last or A[-1] > last):\\n    if A[0] > last and A[-1] > last:\\n        if A[0] < A[-1]:\\n            last = A[0]\\n            A.popleft()\\n            ans += 'L'\\n        else:\\n            last = A[-1]\\n            A.pop()\\n            ans += 'R'\\n    else:\\n        if A[0] > last:\\n            last = A[0]\\n            A.popleft()\\n            ans += 'L'\\n        else:\\n            last = A[-1]\\n            A.pop()\\n            ans += 'R'\\nprint(len(ans))\\nprint(ans)\\n\", \"import sys\\n\\ninput = sys.stdin.readline\\n\\nn = int(input())\\n\\na = list(map(int, input().split()))\\n\\nlast = 0\\nleft = 0\\nright = n-1\\nans = 0\\noutput = []\\n\\nwhile left <= right:\\n  if a[left] > last:\\n    if a[right] > last:\\n      if a[left] < a[right]:\\n        last = a[left]\\n        output.append('L')\\n        left += 1\\n      else:\\n        last = a[right]\\n        output.append('R')\\n        right -= 1\\n    else:\\n      last = a[left]\\n      output.append('L')\\n      left += 1\\n    ans += 1\\n  elif a[right] > last:\\n    last = a[right]\\n    output.append('R')\\n    right -= 1\\n    ans += 1\\n  else:\\n    break\\n\\nprint(ans)\\nprint(''.join(output))\\n\\n\", \"from collections import *\\n\\nn = int(input())\\n\\nM = deque(list(map(int, input().split())))\\n\\nans = []\\nlast = None\\nwhile len(M) > 0:\\n    if ans == []:\\n        if M[-1] <= M[0]:\\n            ans += ['R']\\n            last = M[-1]\\n            M.pop()\\n        else:\\n            ans += ['L']\\n            last = M[0]\\n            M.popleft()\\n    else:\\n        if M[-1] <= last and M[0] <= last:\\n            break\\n        \\n        if M[-1] <= last:\\n            ans += [\\\"L\\\"]\\n            last = M[0]\\n            M.popleft()\\n            continue\\n        \\n        if M[0] <= last:\\n            ans += ['R']\\n            last = M[-1]\\n            M.pop()\\n            continue\\n        \\n        if M[0] <= M[-1]:\\n            ans += [\\\"L\\\"]\\n            last = M[0]\\n            M.popleft()\\n        elif M[-1] <= M[0]:\\n            ans += [\\\"R\\\"]\\n            last = M[-1]\\n            M.pop()\\n\\nprint(len(ans))\\nprint(\\\"\\\".join(ans)) \\n\", \"n = int(input())\\na = [int(i) for i in input().split()]\\nlast = -1\\ni = 0\\nj = n - 1\\nans = ''\\nwhile i <= j:\\n    if max(a[i], a[j]) <= last:\\n        break\\n    if a[i] < a[j]:\\n        if a[i] > last:\\n            ans += 'L'\\n            last = a[i]\\n            i += 1\\n        else:\\n            ans += 'R'\\n            last = a[j]\\n            j -= 1\\n    else:\\n        if a[j] > last:\\n            ans += 'R'\\n            last = a[j]\\n            j -= 1\\n        else:\\n            ans += 'L'\\n            last = a[i]\\n            i += 1\\nprint(len(ans))\\nprint(ans)\\n\", \"n = int(input())\\nu = list(map(int, input().split()))\\ni1 = 0; i2 = n - 1\\nans = []\\nm = 0\\np = []\\nwhile 1 == 1:\\n    m1 = min(u[i1], u[i2])\\n    m2 = max(u[i1], u[i2])\\n    if m > m2:\\n        break\\n    #print(m, m1, m2)\\n    if m > m1:\\n        p.append(m2)\\n        m = m2\\n        if u[i1] > u[i2]:\\n            i1 += 1\\n            ans.append('L')\\n        else:\\n            i2 -= 1\\n            ans.append('R')\\n    else:\\n        p.append(m1)\\n        m = m1\\n        if u[i1] < u[i2]:\\n            i1 += 1\\n            ans.append('L')\\n        else:\\n            i2 -= 1\\n            ans.append('R')\\n    if i1 > i2:\\n        break\\n    #print(p)\\nprint(len(ans))\\nprint(''.join(ans))\\n\", \"n = int(input())\\nsp = list(map(int, input().split()))\\npr = 0\\nposl = \\\"\\\"\\nl = 0\\nr = n - 1\\nwhile True:\\n\\tfl = True\\n\\tif sp[l] < sp[r]:\\n\\t\\tif sp[l] > pr:\\n\\t\\t\\tpr = sp[l]\\n\\t\\t\\tl += 1\\n\\t\\t\\tposl += \\\"L\\\"\\n\\t\\telif sp[r] > pr:\\n\\t\\t\\tpr = sp[r]\\n\\t\\t\\tr -= 1\\n\\t\\t\\tposl += \\\"R\\\"\\n\\t\\telse:\\n\\t\\t\\tfl = False\\n\\telse:\\n\\t\\tif sp[r] > pr:\\n\\t\\t\\tpr = sp[r]\\n\\t\\t\\tr -= 1\\n\\t\\t\\tposl += \\\"R\\\"\\n\\t\\telif sp[l] > pr:\\n\\t\\t\\tpr = sp[l]\\n\\t\\t\\tl += 1\\n\\t\\t\\tposl += \\\"L\\\"\\n\\t\\telse:\\n\\t\\t\\tfl = False\\n\\tif not fl:\\n\\t\\tbreak\\nprint(len(posl))\\nprint(posl)\\n\", \"n = int(input())\\nnum = [*list(map(int, input().split()))]\\nans = \\\"\\\"\\ncurrent = -1\\ni = 0\\nj = n - 1\\nwhile True:\\n    if j < i:\\n        break\\n    if current < num[i] <= num[j] or num[j] <= current < num[i]:\\n        ans += \\\"L\\\"\\n        current = num[i]\\n        i += 1\\n        continue\\n    if current < num[j] <= num[i] or num[i] <= current < num[j]:\\n        ans += \\\"R\\\"\\n        current = num[j]\\n        j -= 1\\n        continue\\n    break\\nprint(len(ans))\\nprint(ans)\\n\", \"n = int(input())\\ni = 0\\nj = n-1\\ncur = 0\\nls = list(map(int, input().split()))\\nres = []\\nwhile i<=j:\\n    if ls[i]>cur and ls[j]>cur:\\n        if ls[i]<ls[j]: res.append('L'); cur = ls[i]; i+=1\\n        else: res.append('R'); cur = ls[j]; j-=1\\n    elif ls[i]>cur: res.append('L'); cur = ls[i]; i+=1\\n    elif ls[j]>cur: res.append('R'); cur = ls[j]; j-=1\\n    else: break\\nprint(len(res))\\nfor i in res: print(i, end='')\\nprint()\\n\", \"\\nn = int(input())\\n\\narr = list(map(int,input().strip().split()))\\n\\nfl = 1\\n\\nans = \\\"\\\"\\nc = 0\\n\\nst = 0\\nen = n-1\\n\\nla = 0\\n\\nwhile fl:\\n    if arr[st] > la:\\n        if arr[en]>la:\\n            if arr[en] > arr[st]:\\n                st+=1\\n                la = arr[st-1]\\n                ans+=\\\"L\\\"\\n                c+=1\\n            else:\\n                en-=1\\n                la  = arr[en+1]\\n                ans+=\\\"R\\\"\\n                c+=1\\n        else:\\n            st+=1\\n            la = arr[st-1]\\n            ans+=\\\"L\\\"\\n            c+=1\\n    else:\\n        if arr[en]>la:\\n            en-=1\\n            la =arr[en+1]\\n            ans+=\\\"R\\\"\\n            c+=1\\n        else:\\n            break;\\nprint(c)\\nprint(ans)\\n                \\n\", \"n = int(input())\\na = [int(item) for item in input().split()]\\n\\ns = []\\ni = 0\\nj = n - 1\\nans = []\\nwhile i <= j:\\n    if a[i] < a[j]:\\n        if not s or s[-1] < a[i]:\\n            s.append(a[i])\\n            ans.append('L')\\n            i += 1\\n        elif not s or s[-1] < a[j]:\\n            s.append(a[j])\\n            ans.append('R')\\n            j -= 1\\n        else:\\n            break\\n    else:\\n        if not s or s[-1] < a[j]:\\n            ans.append('R')\\n            s.append(a[j])\\n            j -= 1\\n        elif not s or s[-1] < a[i]:\\n            s.append(a[i])\\n            ans.append('L')\\n            i += 1\\n        else:\\n            break\\n\\nprint(len(s))\\nprint(''.join(ans))\\n\", \"3\\n\\ndef main():\\n    # skip N\\n    input()\\n    a = [int(x) for x in input().split(' ')]\\n    n = len(a)\\n\\n    l, r = 0, n - 1\\n    res = []\\n    \\n    last = 0\\n    picked = True\\n\\n    while l <= r and picked:\\n        picked = False\\n        if last < a[l] and last < a[r]:\\n            if a[l] < a[r]:\\n                last = a[l]\\n                res.append('L')\\n                l += 1\\n            else:\\n                last = a[r]\\n                res.append('R')\\n                r -= 1\\n            picked = True\\n            continue\\n        \\n        if last < a[l]:\\n            last = a[l]\\n            res.append('L')\\n            l += 1\\n            picked = True\\n            continue\\n        \\n        if last < a[r]:\\n            last = a[r]\\n            res.append('R')\\n            r -= 1\\n            picked = True\\n            continue\\n    \\n    print(len(res))\\n    print(\\\"\\\".join(res))\\n        \\n\\ndef __starting_point():\\n    main()\\n__starting_point()\", \"\\nn = int(input())\\n\\narr = list(map(int,input().strip().split()))\\n\\nfl = 1\\n\\nans = \\\"\\\"\\nc = 0\\n\\nst = 0\\nen = n-1\\n\\nla = 0\\n\\nwhile fl:\\n    if st>=n or en<=-1:\\n        break\\n    if arr[st] > la:\\n        if arr[en]>la:\\n            if arr[en] > arr[st]:\\n                st+=1\\n                la = arr[st-1]\\n                ans+=\\\"L\\\"\\n                c+=1\\n            else:\\n                en-=1\\n                la  = arr[en+1]\\n                ans+=\\\"R\\\"\\n                c+=1\\n        else:\\n            st+=1\\n            la = arr[st-1]\\n            ans+=\\\"L\\\"\\n            c+=1\\n    else:\\n        if arr[en]>la:\\n            en-=1\\n            la =arr[en+1]\\n            ans+=\\\"R\\\"\\n            c+=1\\n        else:\\n            break;\\nprint(c)\\nprint(ans)\\n                \\n\", \"import sys\\nfrom collections import deque\\n\\n\\nfin = sys.stdin.readline\\nn = int(fin())\\na_list = deque(int(elem) for elem in fin().split())\\nlast_elem = float('-inf')\\nlength_sequence = 0\\noperations = []\\nwhile a_list:\\n    if last_elem < a_list[-1] <= a_list[0]:\\n        last_elem = a_list.pop()\\n        operations.append(\\\"R\\\")\\n    elif last_elem < a_list[0] <= a_list[-1]:\\n        last_elem = a_list.popleft()\\n        operations.append(\\\"L\\\")\\n    elif a_list[0] < last_elem < a_list[-1]:\\n        last_elem = a_list.pop()\\n        operations.append(\\\"R\\\")\\n    elif a_list[-1] < last_elem < a_list[0]:\\n        last_elem = a_list.popleft()\\n        operations.append(\\\"L\\\")\\n    else:\\n        break\\n    length_sequence += 1\\nprint(length_sequence)\\nprint(\\\"\\\".join(operations))\\n\", \"n=int(input())\\narr=list(map(int,input().split()))\\ni=0\\nj=n-1\\nans=''\\nprev=0\\nwhile(i<j):\\n\\tif(arr[i]<arr[j]):\\n\\t\\tif(arr[i]>prev):\\n\\t\\t\\tans+='L'\\n\\t\\t\\tprev=arr[i]\\n\\t\\t\\ti+=1\\n\\t\\telif(arr[j]>prev):\\n\\t\\t\\tans+='R'\\n\\t\\t\\tprev=arr[j]\\n\\t\\t\\tj-=1\\n\\t\\telse:\\n\\t\\t\\tbreak\\n\\telif(arr[i]>arr[j]):\\n\\t\\tif(arr[j]>prev):\\n\\t\\t\\tans+='R'\\n\\t\\t\\tprev=arr[j]\\n\\t\\t\\tj-=1\\n\\t\\telif(arr[i]>prev):\\n\\t\\t\\tans+='L'\\n\\t\\t\\tprev=arr[i]\\n\\t\\t\\ti+=1\\n\\t\\telse:\\n\\t\\t\\tbreak\\n\\t#print(i,j)\\nif(i==j and arr[i]>prev):\\n\\tans+='R'\\n\\tprev=arr[i]\\nprint(len(ans))\\nprint(ans)\\n\\n\", \"n = int(input())\\na = list(map(int, input().split()))\\nl = 0\\nr = n - 1\\not = []\\nprot = \\\"\\\"\\nif a[l] < a[r]:\\n\\tot.append(a[l])\\n\\tl += 1\\n\\tprot += \\\"L\\\"\\nelse:\\n\\tot.append(a[r])\\n\\tr -= 1\\n\\tprot += \\\"R\\\"\\nrun = True\\nwhile run:\\n\\tif l > r:\\n\\t\\t#print(\\\"A\\\")\\n\\t\\trun = False\\n\\telif l == r:\\n\\t\\tif a[l] >= ot[-1]:\\n\\t\\t\\tprot += \\\"R\\\"\\n\\t\\t#print(\\\"B\\\")\\n\\t\\trun = False\\n\\telse:\\n\\t\\tif ot[-1] <= a[l] <= a[r]:\\n\\t\\t\\tot.append(a[l])\\n\\t\\t\\tl += 1\\n\\t\\t\\tprot += \\\"L\\\"\\n\\t\\t\\t#print(\\\"1\\\")\\n\\t\\telif ot[-1] <= a[r] <= a[l]:\\n\\t\\t\\tot.append(a[r])\\n\\t\\t\\tr -= 1\\n\\t\\t\\tprot += \\\"R\\\"\\n\\t\\t\\t#print(\\\"2\\\")\\n\\t\\telif ot[-1] <= a[l]:\\n\\t\\t\\tot.append(a[l])\\n\\t\\t\\tl += 1\\n\\t\\t\\tprot += \\\"L\\\"\\n\\t\\t\\t#print(\\\"3\\\")\\n\\t\\telif ot[-1] <= a[r]:\\n\\t\\t\\tot.append(a[r])\\n\\t\\t\\tr -= 1\\n\\t\\t\\tprot += \\\"R\\\"\\n\\t\\t\\t#print(\\\"4\\\")\\n\\t\\telse:\\n\\t\\t\\t#print(\\\"C\\\")\\n\\t\\t\\trun = False\\nprint(len(prot))\\nprint(prot)\\n\", \"import math\\nn = int(input())\\na = list(map(int, input().split()))\\nl = 0\\nr = len(a)-1\\nans = []\\nlast = -math.inf\\nwhile True:\\n    if l > r:\\n        break\\n    if a[l] <= a[r] and a[l] > last:\\n        ans.append('L')\\n        last = a[l]\\n        l += 1\\n    elif a[r] > last:\\n        ans.append('R')\\n        last = a[r]\\n        r -= 1\\n    elif a[l] > last:\\n        ans.append('L')\\n        last = a[l]\\n        l += 1\\n    else:\\n        break\\nprint(len(ans))\\nprint(''.join(ans))\", \"from collections import deque\\nn = int(input())\\na = deque(map(int, input().split()))\\n\\ncnt = 0\\nans = []\\nlast = 0\\n\\nwhile cnt < n and max(a[0], a[-1]) > last:\\n\\tcnt += 1\\n\\tif a[0] > last and (a[0] < a[-1] or a[-1] <= last):\\n\\t\\tans.append('L')\\n\\t\\tlast = a.popleft()\\n\\telse:\\n\\t\\tans.append('R')\\n\\t\\tlast = a.pop()\\n\\nprint(cnt)\\nprint(\\\"\\\".join(ans))\", \"from collections import deque\\nn=int(input())\\na=list(map(int,input().split()))\\na=deque(a)\\np=0\\nb=[]\\nfor i in range(n):\\n    if a[0]>=a[-1] and a[-1]>p:\\n        # print(\\\"R\\\",end='')\\n        p=a.pop()\\n        b.append(\\\"R\\\")\\n    elif a[0]>=a[-1] and a[0]>p:\\n        # print(\\\"L\\\",end='')\\n        p=a.popleft()\\n        b.append(\\\"L\\\")\\n    elif a[-1]>=a[0] and a[0]>p:\\n        # print(\\\"L\\\",end='')\\n        p=a.popleft()\\n        b.append(\\\"L\\\")\\n    elif a[-1]>=a[0] and a[-1]>p:\\n        # print(\\\"R\\\",end='')\\n        p=a.pop()\\n        b.append(\\\"R\\\")\\n    else:\\n        break\\n# print()    \\nprint(len(b))\\nprint(\\\"\\\".join(b))\\n        \\n    \\n\", \"from collections import deque\\n\\ndef solve(A):\\n    res = []\\n    last = 0\\n    while A:\\n        if max(A[0],A[-1]) <= last:\\n            return res\\n\\n        if A[0] == A[-1]:\\n            v = A[0]-1\\n            for i,a in enumerate(A):\\n                if v < a:\\n                    v = a\\n                else:\\n                    break\\n            else:\\n                i += 1\\n            L = i\\n            v = A[-1]-1\\n            for i,a in enumerate(reversed(A)):\\n                if v < a:\\n                    v = a\\n                else:\\n                    break\\n            else:\\n                i += 1\\n            R = i\\n            _,op = max((L, ['L']*L), (R, ['R']*R))\\n            res.extend(op)\\n            return res\\n        \\n        v, op = min((v, op) for v,op in ((A[0], 'L'), (A[-1], 'R')) if v > last)\\n        last = v\\n        res.append(op)\\n        if op == 'L':\\n            A.popleft()\\n        else:\\n            A.pop()\\n\\n\\ndef main():\\n    input()\\n    A = deque(map(int,input().split()))\\n\\n    res = solve(A)\\n    print(len(res))\\n    print(*res, sep='')\\n\\n\\nmain()\", \"n = int(input())\\nrow = list(map(int, input().split()))\\nl = 0\\nr = n - 1\\nlast = 0\\nans = ''\\nwhile 1:\\n\\n    if row[l] < row[r]:\\n        if row[l] > last:\\n            ans += 'L'\\n            last = row[l]\\n            l += 1\\n        elif row[r] > last:\\n            ans += 'R'\\n            last = row[r]\\n            r  -= 1\\n        else:\\n            break\\n    else:\\n        if row[r] > last:\\n            ans += 'R'\\n            last = row[r]\\n            r -= 1\\n        elif row[l] > last:\\n            ans += 'L'\\n            last = row[l]\\n            l += 1\\n        else:\\n            break\\n\\nprint(len(ans))\\nprint(ans)\\n\", \"from collections import deque\\n\\nn = int(input())\\na = deque(list(map(int, input().split())))\\n\\nb = []\\nd = []\\nif a[0] < a[-1]:\\n    b.append('L')\\n    d.append(a[0])\\n    a.popleft()\\nelse:\\n    d.append(a[-1])\\n    a.pop()\\n    b.append('R')\\n\\nwhile a:\\n    c = d[-1]\\n    if a[0] < a[-1]:\\n        if c < a[0]:\\n            d.append(a[0])\\n            a.popleft()\\n            b.append('L')\\n        elif c < a[-1]:\\n            d.append(a[-1])\\n            a.pop()\\n            b.append('R')\\n        else:\\n            break\\n    else:\\n        if c < a[-1]:\\n            d.append(a[-1])\\n            a.pop()\\n            b.append('R')\\n        elif c < a[0]:\\n            d.append(a[0])\\n            a.popleft()\\n            b.append('L')\\n        else:\\n            break\\nprint(len(b))\\nprint(''.join(b))\\n\"]", "task": "apps", "difficulty": "introductory", "split": "test", "transformation_type": "plain_summary"}