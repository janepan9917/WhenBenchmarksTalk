{"qid": 4015, "orig_input": "Polycarp plays \"Game 23\". Initially he has a number $n$ and his goal is to transform it to $m$. In one move, he can multiply $n$ by $2$ or multiply $n$ by $3$. He can perform any number of moves.\n\nPrint the number of moves needed to transform $n$ to $m$. Print -1 if it is impossible to do so.\n\nIt is easy to prove that any way to transform $n$ to $m$ contains the same number of moves (i.e. number of moves doesn't depend on the way of transformation).\n\n\n-----Input-----\n\nThe only line of the input contains two integers $n$ and $m$ ($1 \\le n \\le m \\le 5\\cdot10^8$).\n\n\n-----Output-----\n\nPrint the number of moves to transform $n$ to $m$, or -1 if there is no solution.\n\n\n-----Examples-----\nInput\n120 51840\n\nOutput\n7\n\nInput\n42 42\n\nOutput\n0\n\nInput\n48 72\n\nOutput\n-1\n\n\n\n-----Note-----\n\nIn the first example, the possible sequence of moves is: $120 \\rightarrow 240 \\rightarrow 720 \\rightarrow 1440 \\rightarrow 4320 \\rightarrow 12960 \\rightarrow 25920 \\rightarrow 51840.$ The are $7$ steps in total.\n\nIn the second example, no moves are needed. Thus, the answer is $0$.\n\nIn the third example, it is impossible to transform $48$ to $72$.", "input": "Calculate the minimum number of times a number must be multiplied by 2 or 3 to reach a target value, or return -1 if impossible.", "test_cases": {"inputs": ["120 51840\n", "42 42\n", "48 72\n", "1 1\n", "1 2\n", "1 4\n", "1 5\n", "1 6\n", "3024 94058496\n", "1953125 500000000\n", "139999978 419999934\n", "1 223092870\n", "2 5\n", "289777775 341477104\n", "12 26\n", "4 9\n", "5 11\n", "3 83\n", "40 123\n", "3 10\n", "64 243\n", "2 7\n", "1 2048\n", "2 9\n", "120 51841\n", "1 512\n", "7 15\n", "10001 10001\n", "300000007 300000007\n", "5 7\n", "1001 1001\n", "120 1081\n", "2 19\n", "101 101\n", "1111 2223\n", "201 201\n", "202 202\n", "203 203\n", "303 303\n", "403 403\n", "23 97\n", "404 404\n", "405 405\n", "505 505\n", "3 9\n", "2 6\n", "11 67\n", "1234 2469\n", "1000 1000\n", "6 20\n", "9 24\n", "18782 37565\n", "1 22\n", "10 61\n", "1000 2001\n", "100000000 100000001\n", "4000 8001\n", "1 499999993\n", "1 50331648\n", "3 13\n", "10 24\n", "2 22\n", "6 29\n", "1 7\n", "6 21\n", "50 64800\n", "5 16\n", "2 18\n", "1 491280007\n", "4 16\n", "2 13\n", "1 262144\n", "1 16777216\n", "405691171 405691171\n", "5 12\n", "1 500000000\n", "1 362797056\n"], "outputs": ["7\n", "0\n", "-1\n", "0\n", "1\n", "2\n", "-1\n", "2\n", "12\n", "8\n", "1\n", "-1\n", "-1\n", "-1\n", "-1\n", "-1\n", "-1\n", "-1\n", "-1\n", "-1\n", "-1\n", "-1\n", "11\n", "-1\n", "-1\n", "9\n", "-1\n", "0\n", "0\n", "-1\n", "0\n", "-1\n", "-1\n", "0\n", "-1\n", "0\n", "0\n", "0\n", "0\n", "0\n", "-1\n", "0\n", "0\n", "0\n", "1\n", "1\n", "-1\n", "-1\n", "0\n", "-1\n", "-1\n", "-1\n", "-1\n", "-1\n", "-1\n", "-1\n", "-1\n", "-1\n", "25\n", "-1\n", "-1\n", "-1\n", "-1\n", "-1\n", "-1\n", "8\n", "-1\n", "2\n", "-1\n", "2\n", "-1\n", "18\n", "24\n", "0\n", "-1\n", "-1\n", "22\n"]}, "solutions": "[\"n, m = map(int, input().split())\\nif m % n == 0:\\n    k = m // n\\n    res = 0\\n    while k % 2 == 0:\\n        k //= 2\\n        res += 1\\n    while k % 3 == 0:\\n        k //= 3\\n        res += 1\\n    if k > 1:\\n        print(-1)\\n    else:\\n        print(res)\\nelse:\\n    print(-1)\", \"n, m = map(int, input().split())\\nif m % n:\\n    print(-1)\\n    return\\nm //= n\\na = 0\\nwhile m % 2 == 0:\\n    m//=2\\n    a+=1\\nwhile m % 3 == 0:\\n    m//=3\\n    a+=1\\nif m==1:\\n    print(a)\\nelse:\\n    print(-1)\", \"def func(a,b):\\n  if b%a!=0:\\n    return -1\\n  else:\\n    store=b//a\\n    count=0\\n    while store%2==0:\\n      store//=2\\n      count+=1\\n    while store%3==0:\\n      store//=3\\n      count+=1\\n    if store==1:\\n      return count\\n    else:\\n      return -1\\ndef main():\\n  arr=input().split()\\n  print(func(int(arr[0]),int(arr[1])))\\nmain()\\n\", \"n, m = list(map(int, input().split()))\\nif m % n != 0:\\n    print(-1)\\nelse:\\n    x = m // n\\n    ans = 0\\n    while x % 2 == 0:\\n        ans += 1\\n        x //= 2\\n    while x % 3 == 0:\\n        ans += 1\\n        x //= 3\\n    if x != 1:\\n        print(-1)\\n    else:\\n        print(ans)\\n\", \"#      \\nimport collections, atexit, math, sys, bisect \\n\\nsys.setrecursionlimit(1000000)\\n\\nisdebug = False\\ntry :\\n    #raise ModuleNotFoundError\\n    import pylint\\n    import numpy\\n    def dprint(*args, **kwargs):\\n        #print(*args, **kwargs, file=sys.stderr)\\n        # in python 3.4 **kwargs is invalid???\\n        print(*args,  file=sys.stderr)\\n    dprint('debug mode')\\n    isdebug = True\\nexcept Exception:\\n    def dprint(*args, **kwargs):\\n        pass\\n\\n\\ndef red_inout():\\n    inId = 0\\n    outId = 0\\n    if not isdebug:\\n        inId = 0\\n        outId = 0\\n    if inId>0:\\n        dprint('use input', inId)\\n        try:\\n            f = open('input'+ str(inId) + '.txt', 'r')\\n            sys.stdin = f #\\u6807\\u51c6\\u8f93\\u51fa\\u91cd\\u5b9a\\u5411\\u81f3\\u6587\\u4ef6\\n        except Exception:\\n            dprint('invalid input file')\\n    if outId>0:\\n        dprint('use output', outId)\\n        try:\\n            f = open('stdout'+ str(outId) + '.txt', 'w')\\n            sys.stdout = f #\\u6807\\u51c6\\u8f93\\u51fa\\u91cd\\u5b9a\\u5411\\u81f3\\u6587\\u4ef6\\n        except Exception:\\n            dprint('invalid output file')\\n            \\n        atexit.register(lambda :sys.stdout.close())     #idle \\u4e2d\\u4e0d\\u4f1a\\u6267\\u884c atexit\\n\\nif isdebug and len(sys.argv) == 1:\\n    red_inout()\\n\\ndef getIntList():\\n    return list(map(int, input().split()))            \\n\\ndef solve(): \\n    pass\\n    \\nT_ = 1    \\n#T_, = getIntList()\\n\\nfor iii_ in range(T_):\\n    #solve()\\n    N, M  = getIntList()\\n    r = 0\\n    if M%N!=0:\\n        print(-1)\\n        break\\n    a = M//N\\n    while a%2==0:\\n        r+=1\\n        a//=2\\n    while a%3==0:\\n        r+=1\\n        a//=3\\n    if a!=1:\\n        print(-1)\\n    else:\\n        print(r)\\n\\n\", \"N,M=list(map(int,input().split()))\\nd = M/N\\nif not d.is_integer():\\n    print(-1)\\nelse:\\n    d = int(d)\\n    n = 0\\n    while d and d%2==0:\\n        n += 1\\n        d >>= 1\\n    while d and d%3==0:\\n        n += 1\\n        d //= 3\\n    if d == 1:\\n        print(n)\\n    else:\\n        print(-1)\\n\", \"from math import sqrt\\n\\n\\ndef factor(n):\\n    potentional_p = 3\\n    itog_list = []\\n    while n % 2 == 0:\\n        n = n // 2\\n        itog_list.append(2)\\n    while n - 1:\\n        if potentional_p > sqrt(n):\\n            itog_list.append(n)\\n            return itog_list\\n        while n % potentional_p == 0:\\n            n = n // potentional_p\\n            itog_list.append(potentional_p)\\n        potentional_p += 2\\n    return itog_list\\n\\n\\nn, m = map(int, input().split())\\nif m % n != 0:\\n    print(-1)\\n    return\\nz = m // n\\nF = factor(z)\\nif F == []:\\n    print(0)\\n    return\\nif (len(set(F)) == 2 and 2 in F and 3 in F) or (len(set(F)) == 1 and (2 in F or 3 in F)):\\\\\\n    print(len(F))\\nelse:\\n    print(-1)\", \"n, m = (list(map(int, input().split())))\\nif m % n != 0:\\n  print(-1)\\nelse:\\n  m //= n\\n  t = 0\\n  while m % 2 == 0:\\n    m //= 2\\n    t += 1\\n  while m % 3 == 0:\\n    t += 1\\n    m //= 3\\n  print(t if m == 1 else -1)\\n\", \"import sys\\nn, m = list(map(int,input().split()))\\nif (m%n):\\n\\tprint(-1)\\n\\treturn\\nu = m//n;\\ncnt = 0;\\nwhile (u % 2 == 0):\\n\\tu //=2\\n\\tcnt += 1\\nwhile (u % 3 == 0):\\n\\tu //=3\\n\\tcnt += 1\\nprint(cnt if u == 1 else -1)\\n\", \"n, m = list(map(int, input().split()))\\n\\nif m % n > 0:\\n    print(-1)\\nelse:\\n    res = 0\\n    a = m // n;\\n    while a % 2 == 0:\\n        a //= 2\\n        res += 1\\n    while a % 3 == 0:\\n        a //= 3\\n        res += 1\\n    if a == 1:\\n        print(res)\\n    else:\\n        print(-1)\\n\", \"def fact(k):\\n    a, b = 0, 0\\n    while k % 2 == 0:\\n        k //= 2\\n        a += 1\\n    while k % 3 == 0:\\n        k //= 3\\n        b += 1\\n    if k != 1:\\n        return -1\\n    return a + b\\n\\n\\nn, m = list(map(int, input().split()))\\nif n > m or m / n != m // n:\\n    print(-1)\\nelif n == m:\\n    print(0)\\nelse:\\n    print(fact(m // n))\\n\", \"n, m = map(int, input().split())\\n\\ntotal = 0\\n\\nif m%n!=0:\\n\\tprint(-1)\\n\\treturn\\n\\nv = m//n\\n\\nwhile v%2==0:\\n\\ttotal += 1\\n\\tv //= 2\\nwhile v%3==0:\\n\\ttotal += 1\\n\\tv //= 3\\nif v!=1:\\n\\tprint(-1)\\n\\treturn\\nprint(total)\", \"def mp():\\n    return map(int, input().split())\\n\\nn, m = mp()\\nif m % n != 0:\\n    print(-1)\\nelse:\\n    c = 0\\n    k = m // n\\n    while k % 2 == 0:\\n        k //= 2\\n        c += 1\\n    while k % 3 == 0:\\n        k //= 3\\n        c += 1\\n    if k == 1:\\n        print(c)\\n    else:\\n        print(-1)\", \"n,m = list(map(int,input().split()))\\nnum = m / n\\nflag = 1\\nans = 0\\nwhile num > 1:\\n    if num % 2 == 0:\\n        num //= 2\\n        ans += 1\\n        continue\\n    if num % 3 == 0:\\n        num //= 3\\n        ans += 1\\n        continue\\n    flag = 0\\n    break\\nif flag:\\n    print(ans)\\nelse:\\n    print(-1)\\n\", \"n, m = map(int, input().split())\\nx = m // n\\nif n * x < m:\\n    print(-1)\\nelse:\\n    k = 0\\n    while x % 3 == 0:\\n        x = x//3\\n        k += 1\\n    while x % 2 == 0:\\n        x = x // 2\\n        k += 1\\n    if x != 1:\\n        print(-1)\\n    else:\\n        print(k)\", \"ii = lambda: int(input())\\nmi = lambda: map(int, input().split())\\nli = lambda: list(mi())\\n\\nn, m = mi()\\nif m % n == 0:\\n    d = m // n\\n    c2 = c3 = 0\\n    while d % 2 == 0:\\n        c2 += 1\\n        d //= 2\\n    while d % 3 == 0:\\n        c3 += 1\\n        d //= 3\\n    print(c2 + c3 if d == 1 else -1)\\nelse:\\n    print(-1)\", \"n, m = list(map(int, input().split()))\\nres, d = -1, 0\\nif m % n == 0:\\n    res = 0\\n    d = m // n\\n    while d % 2 == 0:\\n        d, res = d//2, res + 1\\n    while d % 3 == 0:\\n        d, res = d//3, res + 1\\nif d == 1:\\n    print(res)\\nelse:\\n    print(-1)\\n\", \"a, b = list(map(int, input().split()))\\nc = b % a == 0\\nif c:\\n    z = 0\\n    x = b // a\\n    while x % 2 == 0:\\n        x //= 2\\n        z += 1\\n    while x % 3 == 0:\\n        x //= 3\\n        z += 1\\n    if x == 1:\\n        print(z)\\n    else:\\n        print(-1)\\nelse:\\n    print(-1)\\n\", \"import sys\\nn,m=list(map(int,input().split()))\\n\\nif m/n!=m//n:\\n    print(-1)\\n    return\\n\\nx=m//n\\nANS=0\\n\\nwhile x%2==0:\\n    x=x//2\\n    ANS+=1\\n\\nwhile x%3==0:\\n    x=x//3\\n    ANS+=1\\n\\nif x==1:\\n    print(ANS)\\nelse:\\n    print(-1)\\n\", \"a,b = list(map(int,input().split()))\\n\\nif b%a == 0:\\n    c = b//a\\n    moves = 0\\n    while c%2 == 0:\\n        c //= 2\\n        moves += 1\\n    while c%3 == 0:\\n        c //= 3\\n        moves += 1\\n    if c == 1:\\n        print(moves)\\n    else:\\n        print(-1)\\nelse:\\n    print(-1)\\n\", \"n, m = map(int, input().split())\\n\\nif m % n != 0:\\n    print(-1)\\nelse:\\n    x = m // n\\n    k = 0\\n    while x % 2 == 0:\\n        x //= 2\\n        k += 1\\n    while x % 3 == 0:\\n        x //= 3\\n        k += 1\\n    if x == 1:\\n        print(k)\\n    else:\\n        print(-1)\", \"n,m = map(int, input().strip().split())\\ncan = True\\nif m%n != 0:\\n    can = False\\nk = m/n\\nans = 0\\nwhile k%2 == 0:\\n    k = k/2\\n    ans += 1\\nwhile k%3 == 0:\\n    k = k/3\\n    ans += 1\\nif k != 1:\\n    can = False\\nif can:\\n    print (ans)\\nelse:\\n    print (-1)\", \"n,m=map(int,input().split())\\nans=0\\nif(m%n==0):\\n         m//=n\\nelse:\\n         m=1\\n         ans=-1\\nwhile(m!=1):\\n         if(m%2==0):\\n                  m//=2\\n                  ans+=1\\n         elif(m%3==0):\\n                  m//=3\\n                  ans+=1\\n         else:\\n                  ans=-1\\n                  break\\nprint(ans)\", \"n, m = map(int,input().split())\\nd = m // n\\nans = 0\\np = 1\\nwhile d % 3 == 0:\\n    ans += 1\\n    d //= 3\\n    p *= 3\\nwhile d % 2 == 0:\\n    ans += 1\\n    d //= 2\\n    p *= 2\\nif d != 1 or p*n != m:\\n    print(-1)\\nelse:\\n    print(ans)\", \"n,m=map(int,input().split())\\nif m%n!=0:\\n    print(-1)\\nelse:\\n    m//=n\\n    ans=0\\n    while m%2==0:\\n        m//=2\\n        ans+=1\\n    while m%3==0:\\n        m//=3\\n        ans+=1\\n    if m>1:\\n        print(-1)\\n    else:\\n        print(ans)\"]", "task": "apps", "difficulty": "introductory", "split": "test", "transformation_type": "plain_summary"}