{"qid": 4087, "orig_input": "Polycarp knows that if the sum of the digits of a number is divisible by $3$, then the number itself is divisible by $3$. He assumes that the numbers, the sum of the digits of which is divisible by $4$, are also somewhat interesting. Thus, he considers a positive integer $n$ interesting if its sum of digits is divisible by $4$.\n\nHelp Polycarp find the nearest larger or equal interesting number for the given number $a$. That is, find the interesting number $n$ such that $n \\ge a$ and $n$ is minimal.\n\n\n-----Input-----\n\nThe only line in the input contains an integer $a$ ($1 \\le a \\le 1000$).\n\n\n-----Output-----\n\nPrint the nearest greater or equal interesting number for the given number $a$. In other words, print the interesting number $n$ such that $n \\ge a$ and $n$ is minimal.\n\n\n-----Examples-----\nInput\n432\n\nOutput\n435\n\nInput\n99\n\nOutput\n103\n\nInput\n237\n\nOutput\n237\n\nInput\n42\n\nOutput\n44", "input": "Find the smallest number greater than or equal to the input where the sum of its digits is divisible by 4.", "test_cases": {"inputs": ["432\n", "99\n", "237\n", "42\n", "1\n", "2\n", "1000\n", "898\n", "997\n", "999\n", "399\n", "8\n", "120\n", "909\n", "9\n", "398\n", "7\n", "799\n", "970\n", "188\n", "4\n", "38\n", "12\n", "3\n", "518\n", "6\n", "400\n", "36\n"], "outputs": ["435\n", "103\n", "237\n", "44\n", "4\n", "4\n", "1003\n", "903\n", "1003\n", "1003\n", "400\n", "8\n", "121\n", "912\n", "13\n", "398\n", "8\n", "800\n", "970\n", "192\n", "4\n", "39\n", "13\n", "4\n", "521\n", "8\n", "400\n", "39\n"]}, "solutions": "[\"def f(n):\\n    a=0\\n    while(n>0):\\n        a+=n%10\\n        n//=10\\n    return a\\nn=int(input())\\nwhile f(n)%4!=0:\\n    n+=1\\nprint(n)\\n\", \"n = int(input())\\nfor i in range(n, n + 1000):\\n\\ts = str(i)\\n\\tsumm = 0\\n\\tfor c in s:\\n\\t\\tsumm += ord(c) - ord('0')\\n\\tif summ % 4 == 0:\\n\\t\\tprint(i)\\n\\t\\treturn\\n\", \"def check(a):\\n    s = str(a)\\n    t = 0\\n    for el in s:\\n        t += int(el)\\n    return t % 4 == 0\\n# n, m = map(int, input().split())\\nn = int(input())\\n# a = [int(i) for i in input().split()]\\nwhile not check(n):\\n    n += 1\\nprint(n)\", \"n = int(input())\\ndef inter(n):\\n    s = str(n)\\n    cnt = 0\\n    for i in s:\\n        cnt += int(i)\\n    if cnt % 4:\\n        return False\\n    return True\\nwhile not inter(n):\\n    n += 1\\nprint(n)\", \"a = int(input())\\nwhile sum(list(map(int, str(a)))) % 4:\\n    a += 1\\nprint(a)\", \"def main():\\n    def is_interesting(n):\\n        s = 0\\n        while n:\\n            s += n % 10\\n            n //= 10\\n        if s % 4 == 0:\\n            return 1\\n        return 0\\n    import sys\\n    input = sys.stdin.readline\\n    \\n    a = int(input())\\n    while not is_interesting(a):\\n        a += 1\\n    print(a)\\n    return 0\\n\\nmain()\", \"a=int(input())\\nfor i in range(a, 10000000):\\n    q = str(i)\\n    s=0\\n    for j in q:\\n        s+=ord(j) - ord('0')\\n    if s%4==0:\\n        print(i)\\n        return\", \"n=int(input())\\nfor i in range(n,n+10):\\n    ans=0\\n    for j in str(i):\\n        ans+=int(j)\\n    if ans%4==0:\\n        print(i)\\n        return\", \"n=int(input())\\nwhile 1:\\n    y=str(n)\\n    counter=0\\n    for item in y:\\n        counter+=int(item)\\n    if counter%4==0:\\n        print(y)\\n        break\\n    n+=1\\n\", \"def good(n):\\n  return sum(int(c) for c in str(n)) % 4 == 0\\nn = int(input())\\nwhile not good(n):\\n  n += 1\\nprint(n)\\n\", \"#JMD\\n#Nagendra Jha-4096\\n\\n \\nimport sys\\nimport math\\n\\n#import fractions\\n#import numpy\\n \\n###File Operations###\\nfileoperation=0\\nif(fileoperation):\\n    orig_stdout = sys.stdout\\n    orig_stdin = sys.stdin\\n    inputfile = open('W:/Competitive Programming/input.txt', 'r')\\n    outputfile = open('W:/Competitive Programming/output.txt', 'w')\\n    sys.stdin = inputfile\\n    sys.stdout = outputfile\\n\\n###Defines...###\\nmod=1000000007\\n \\n###FUF's...###\\ndef nospace(l):\\n    ans=''.join(str(i) for i in l)\\n    return ans\\n \\n \\n \\n##### Main ####\\nt=1\\nfor tt in range(t):\\n    n=int(input())\\n    while 1:\\n        s=str(n)\\n        tot=0\\n        for char in s:\\n            tot+=ord(char)-ord('0')\\n        if(tot%4==0):\\n            print(s)\\n            break\\n        n+=1\\n    \\n#####File Operations#####\\nif(fileoperation):\\n    sys.stdout = orig_stdout\\n    sys.stdin = orig_stdin\\n    inputfile.close()\\n    outputfile.close()\", \"a = input()\\nb = int(a)\\nwhile True:\\n    su  = 0\\n    a = str(b)\\n    for i in a:\\n        su += int(i)\\n    if su % 4 == 0:\\n        print(b)\\n        break\\n    else:\\n        b += 1\\n\", \"n = int(input())\\ndef s(n):\\n    k = 0\\n    for i in str(n):\\n        k += int(i)\\n    return k\\nwhile s(n) % 4 != 0:\\n    n += 1\\nprint(n)\", \"#  =========     /\\\\       /|    |====/|\\n#      |        /  \\\\       |    |   / |\\n#      |       /____\\\\      |    |  /  |\\n#      |      /      \\\\     |    | /   |\\n#  ========= /        \\\\  =====  |/====|  \\n#  code\\n\\ndef __starting_point():\\n    n = int(input())\\n    def dsum(n):\\n        ans = 0\\n        while n > 0:\\n            ans += n%10\\n            n //= 10\\n        return ans\\n    while dsum(n)%4 != 0:\\n        n += 1\\n    print(n)\\n\\n__starting_point()\", \"n = int(input())\\n\\nwhile True:\\n    if (sum([int(k) for k in str(n)]) % 4 == 0):\\n        break\\n    n += 1\\n\\nprint(n)\\n\", \"\\nn = int(input())\\n\\n\\nwhile True:\\n    z = list(str(n))\\n    z = list(map(int,z))\\n    if sum(z)%4 == 0:\\n        break\\n    else:\\n        n+=1\\n\\n\\nprint(n)\\n\\n\\n\", \"N = int(input())\\n    \\n#arr = input()\\n#arr = [int(num) for num in arr.split(' ')]\\n\\n\\nans = N\\nwhile True:\\n    d = [int(i) for i in str(ans)]\\n    \\n    if sum(d)%4==0:\\n        print(ans)\\n        break\\n    ans += 1\", \"#Bhargey Mehta (Sophomore)\\n#DA-IICT, Gandhinagar\\nimport sys, math, queue, bisect\\n#sys.stdin = open(\\\"input.txt\\\", \\\"r\\\")\\nMOD = 10**9+7\\nsys.setrecursionlimit(1000000)\\n\\ndef get(x):\\n    return sum(list(map(int, str(x))))\\n\\na = int(input())\\nwhile True:\\n    if get(a) % 4 == 0:\\n        print(a)\\n        return\\n    a += 1\\n\", \"n = int(input())\\nwhile True:\\n    if sum(map(int, str(n))) % 4 == 0:\\n        print(n)\\n        return\\n    n += 1\", \"def summa(x):\\n    x=str(x)\\n    otv=0\\n    for i in x:\\n        otv+=int(i)\\n    return otv\\nn=int(input())\\na=n\\nwhile summa(a)%4!=0:\\n    a+=1\\nprint(a)\\n\", \"n = int(input())\\ni = n\\nwhile True:\\n\\ts = str(i)\\n\\tsu = 0\\n\\tfor j in range(len(s)):\\n\\t\\tsu += int(s[j])\\n\\tif su%4 == 0:\\n\\t\\tprint(i)\\n\\t\\tbreak\\n\\ti += 1\", \"n = int(input())\\nwhile (1):\\n    s = 0\\n    temp = str(n)\\n    for x in temp:\\n        s += int(x)\\n    if s % 4 == 0:\\n        print(temp)\\n        break\\n    n+=1\\n\", \"a = int(input())\\n\\nwhile sum(list(map(int, list(str(a))))) % 4 != 0:\\n\\ta += 1\\n\\nprint(a)\\n\", \"n = int(input())\\ns = sum([int(x) for x in str(n)])\\nwhile s%4!=0:\\n    n+=1\\n    s = sum([int(x) for x in str(n)])\\nprint(n)\"]", "task": "apps", "difficulty": "introductory", "split": "test", "transformation_type": "plain_summary"}