{"qid": 4055, "orig_input": "There is a house with $n$ flats situated on the main street of Berlatov. Vova is watching this house every night. The house can be represented as an array of $n$ integer numbers $a_1, a_2, \\dots, a_n$, where $a_i = 1$ if in the $i$-th flat the light is on and $a_i = 0$ otherwise.\n\nVova thinks that people in the $i$-th flats are disturbed and cannot sleep if and only if $1 < i < n$ and $a_{i - 1} = a_{i + 1} = 1$ and $a_i = 0$.\n\nVova is concerned by the following question: what is the minimum number $k$ such that if people from exactly $k$ pairwise distinct flats will turn off the lights then nobody will be disturbed? Your task is to find this number $k$.\n\n\n-----Input-----\n\nThe first line of the input contains one integer $n$ ($3 \\le n \\le 100$) \u2014 the number of flats in the house.\n\nThe second line of the input contains $n$ integers $a_1, a_2, \\dots, a_n$ ($a_i \\in \\{0, 1\\}$), where $a_i$ is the state of light in the $i$-th flat.\n\n\n-----Output-----\n\nPrint only one integer \u2014 the minimum number $k$ such that if people from exactly $k$ pairwise distinct flats will turn off the light then nobody will be disturbed.\n\n\n-----Examples-----\nInput\n10\n1 1 0 1 1 0 1 0 1 0\n\nOutput\n2\n\nInput\n5\n1 1 0 0 0\n\nOutput\n0\n\nInput\n4\n1 1 1 1\n\nOutput\n0\n\n\n\n-----Note-----\n\nIn the first example people from flats $2$ and $7$ or $4$ and $7$ can turn off the light and nobody will be disturbed. It can be shown that there is no better answer in this example.\n\nThere are no disturbed people in second and third examples.", "input": "There is a house with $n$ flats situated on the main street of Berlatov. Vova is watching this house every night. The house can be represented as an array of $n$ integer numbers $a_1, a_2, \\dots, a_n$, where $a_i = 1$ if in the $i$-th flat the light is on and $a_i = 0$ otherwise.\n\nVova thinks that people in the $i$-th flats are disturbed and cannot sleep if and only if $1 < i < n$ and $a_{i - 1} = a_{i + 1} = 1$ and $a_i = 0$.\n\nVova is concerned by the following question: what is the minimum number $k$ such that if people from exactly $k$ pairwise distinct flats will turn off the lights then nobody will be disturbed? Your task is to find this number $k$.\n\n\n-----Input-----\n\nThe first line of the input contains one integer $n$ ($3 \\le n \\le 100$) \u2014 the number of flats in the house.\n\nThe second line of the input contains $n$ integers $a_1, a_2, \\dots, a_n$ ($a_i \\in \\{0, 1\\}$), where $a_i$ is the state of light in the $i$-th flat.\n\n\n-----Output-----\n\nPrint only one integer \u2014 the minimum number $k$ such that if people from exactly $k$ pairwise distinct flats will turn off the light then nobody will be disturbed.\n\n\n-----Examples-----\nInput\n10\n1 1 0 1 1 0 1 0 1 0\n\nOutput\n2\n\nInput\n5\n1 1 0 0 0\n\nOutput\n0\n\nInput\n4\n1 1 1 1\n\nOutput\n0\n\n\n\n-----Note-----\n\nIn the first example people from flats $2$ and $7$ or $4$ and $7$ can turn off the light and nobody will be disturbed. It can be shown that there is no better answer in this example.\n\nThere are no disturbed people in second and third examples.", "test_cases": {"inputs": ["10\n1 1 0 1 1 0 1 0 1 0\n", "5\n1 1 0 0 0\n", "4\n1 1 1 1\n", "3\n0 0 0\n", "5\n0 0 0 0 0\n", "10\n1 1 0 0 0 1 0 0 1 1\n", "50\n0 0 1 0 1 1 1 1 1 0 0 1 0 0 0 1 1 0 0 1 0 0 0 0 1 0 1 1 0 0 0 1 0 1 0 0 0 0 1 0 1 1 1 1 0 1 0 1 1 0\n", "55\n0 0 1 0 1 1 1 1 0 1 0 1 1 0 1 0 1 1 0 1 0 1 0 0 0 0 1 0 0 0 0 1 0 1 0 1 1 0 1 1 1 0 0 1 0 1 1 1 1 0 0 0 1 0 0\n", "75\n0 0 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 0 1 1 0 0 1 1 1 0 1 1 1 1 0 0 0 0 1 0 1 0 0 1 1 0 1 0 1 1 1 1 0 1 0 0 1 1 0 0 1 0 1 0 0 1 0 1 0 1 0 1 1 0 1 0 1 0\n", "100\n0 1 1 0 1 1 0 0 1 1 0 1 1 1 1 1 0 0 1 1 1 0 0 0 0 1 1 0 0 1 0 0 1 0 0 0 0 1 1 1 1 1 1 0 0 1 1 0 0 0 0 1 0 1 1 1 0 1 1 0 1 0 0 0 0 0 1 0 1 1 0 0 1 1 0 1 1 0 0 1 1 1 0 1 1 1 1 1 1 0 0 1 1 1 1 0 1 1 1 0\n", "3\n1 0 1\n", "33\n1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1\n", "99\n1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1 1 0 1\n", "24\n0 0 0 0 0 1 0 1 0 0 1 1 1 0 0 1 0 1 1 1 0 1 1 1\n", "100\n0 0 0 0 0 1 1 0 1 0 1 0 1 0 0 1 0 0 1 1 0 0 1 0 1 1 1 1 1 1 1 0 1 1 1 0 0 0 0 0 0 1 1 0 0 0 1 0 1 0 0 1 0 1 1 0 0 1 0 0 0 1 1 1 1 1 0 0 0 0 0 1 0 0 0 0 1 0 0 0 1 1 0 1 1 0 1 1 1 0 1 1 0 1 1 0 0 1 1 0\n", "9\n1 0 1 0 1 0 1 0 1\n", "100\n0 0 1 0 1 1 1 1 0 1 0 1 1 1 0 1 1 1 0 0 1 1 0 0 1 0 1 1 1 0 0 0 0 1 1 1 1 1 0 1 0 1 1 0 0 1 0 0 1 1 1 0 0 1 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 0 1 1 0 1 0 0 1 1 1 0 1 0 1 1 1 0 1 0 1 1 1 0 0 0 0 1 0 1 1 1\n", "36\n1 0 1 0 1 0 1 0 1 1 0 1 0 1 0 1 0 1 1 0 1 0 1 0 1 0 1 1 0 1 0 1 0 1 0 1\n", "6\n1 0 1 1 0 1\n", "10\n1 0 1 0 1 0 1 0 1 0\n", "98\n0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1\n", "7\n1 0 1 1 1 0 1\n", "5\n1 0 1 0 1\n", "7\n1 0 1 0 1 0 1\n", "98\n1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0\n", "100\n0 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0\n", "62\n0 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 0\n", "11\n1 0 1 0 1 0 1 0 1 0 1\n", "29\n1 1 0 0 0 1 1 1 0 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 1 0 1 0 0\n", "82\n0 1 1 0 0 1 0 1 1 1 1 0 1 1 1 0 0 0 0 1 0 0 0 1 0 1 0 0 0 1 0 1 1 0 1 0 1 1 0 0 1 1 1 1 0 0 1 1 0 0 1 0 1 0 0 1 0 0 0 1 0 1 0 1 0 1 0 1 1 1 1 0 1 1 1 0 1 0 1 0 1 0\n", "85\n0 0 1 1 1 1 0 0 1 1 1 0 0 1 1 1 1 0 1 1 1 1 0 1 0 1 0 1 0 1 0 1 1 0 0 1 0 0 0 1 1 1 0 1 1 0 0 1 0 0 0 1 0 1 0 0 1 1 1 1 0 1 1 0 1 1 0 0 1 1 1 0 1 1 0 0 0 0 0 0 1 0 1 1 1\n", "37\n1 1 0 0 1 1 1 0 1 0 1 0 1 0 1 1 1 0 1 0 1 0 0 0 0 1 0 1 1 1 1 0 1 0 0 1 0\n", "3\n1 1 1\n", "3\n0 1 1\n", "3\n1 1 0\n", "3\n1 0 0\n", "3\n0 1 0\n", "3\n0 0 1\n"], "outputs": ["2\n", "0\n", "0\n", "0\n", "0\n", "0\n", "5\n", "7\n", "10\n", "9\n", "1\n", "11\n", "33\n", "3\n", "10\n", "2\n", "12\n", "8\n", "2\n", "2\n", "24\n", "2\n", "1\n", "2\n", "24\n", "24\n", "14\n", "3\n", "2\n", "11\n", "10\n", "5\n", "0\n", "0\n", "0\n", "0\n", "0\n", "0\n"]}, "solutions": "[\"n = int(input())\\na = list(map(int, input().split()))\\n\\nans = 0\\nfor i in range(1, n - 1):\\n    if a[i - 1] == 1 and a[i] == 0 and a[i + 1] == 1:\\n        a[i + 1] = 0\\n        ans += 1\\nprint(ans)\\n\", \"n = int(input())\\na = [int(x) for x in input().split()]\\nk = 0\\nfor i in range(2, n):\\n\\tif a[i - 1] == 0 and a[i - 2] == 1 and a[i] == 1:\\n\\t\\ta[i] = 0\\n\\t\\tk += 1\\nprint(k)\\n\", \"n = int(input())\\na = list(map(int, input().split()))\\nans = 0\\nfor i in range(1, n-1):\\n    if(a[i] == 0 and a[i-1]==1 and a[i+1]==1):\\n        ans+=1\\n        a[i+1] = 0\\nprint(ans)\", \"n = int(input())\\na = list(map(int,input().split()))\\nc1,c2 = 0,0\\nfor i in range(1,n-1):\\n    if a[i-1] == 1 and a[i] == 0 and a[i+1] == 1:\\n        c1+=1\\nfor i in range(1,n-1):\\n    if a[i-1] == 1 and a[i] == 0 and a[i+1] == 1:\\n        c2+=1\\n        a[i+1] = 0\\nprint(min(c1,c2))\\n\", \"n = int(input())\\nT = input().split(' ')\\nfor i in range(n):\\n    T[i] = int(T[i])\\nm = 0\\nfor i in range(1, n-1):\\n    if T[i-1]==1 and T[i]==0 and T[i+1] == 1:\\n        m+=1\\n        T[i+1] = 0\\nprint(m)\\n\", \"#from operator import itemgetter\\n#int(input())\\n#map(int,input().split())\\n#[list(map(int,input().split())) for i in range(q)]\\n#print(\\\"YES\\\" * ans + \\\"NO\\\" * (1-ans))\\nn =  int(input())\\nai = list(map(int,input().split()))\\nans = 0\\nfor i in range(2,n):\\n    if ai[i-2] == ai[i] and ai[i] == 1 and ai[i-1] == 0:\\n        ai[i] = 0\\n        ans += 1\\nprint(ans)\\n\", \"n=int(input())\\nA=list(map(int,input().split()))\\n\\nANS=0\\nfor i in range(1,n-1):\\n    if A[i-1]==1 and A[i]==0 and A[i+1]==1:\\n        ANS+=1\\n        A[i+1]=0\\n\\nprint(ANS)\\n    \\n\", \"t = int(input())\\ns = input()\\nn = s.count('1 0 1')\\nprint(n)\\n\", \"n=int(input())\\na=list(map(int,input().split()))\\ns=0\\nfor i in range(1,n-1):\\n    if a[i-1]==1 and a[i]==0 and a[i+1]==1:\\n        a[i+1]=0\\n        s+=1\\nprint(s)\\n\", \"n = int(input())\\nl = list(map(int,input().split()))\\nk = 0\\nfor i in range(2,n):\\n\\tif (l[i-2]==1 and l[i]==1 and l[i-1]==0):\\n\\t\\tl[i] = 0\\n\\t\\tk+=1\\nprint(k)\", \"def solve():\\n    N = int(input())\\n    \\n    A = [int(k) for k in input().split()]\\n    \\n    res = 0\\n    \\n    for i in range(1,N-1):\\n        if A[i] == 0 and A[i-1] == A[i+1] == 1:\\n            A[i+1] = 0\\n            res += 1\\n            \\n    print (res)\\n\\nsolve()\", \"n = int(input())\\na = input().split()\\ns = 0\\ni = 0\\nfor i in range(n - 2):\\n\\tif a[i] == '1' and a[i + 1] == '0' and a[i + 2] == '1':\\n\\t\\ta[i + 2] = '0'\\n\\t\\ts += 1\\nprint(s)\", \"n = int(input())\\nA = list(map(int,input().split()))\\n\\nans = 0\\nfor i in range(1, n-1):\\n  if A[i] == 0 and A[i-1] == 1 and A[i+1] == 1:\\n    A[i+1] = 0\\n    ans += 1\\n\\nprint(ans)\\n\", \"n = int(input())\\nl = [*map(int, input().split())]\\nres = 0\\nfor i in range(2, n):\\n    if l[i]:\\n        if l[i - 2] == l[i] and l[i - 1] == 0:\\n            l[i] = 0\\n            res += 1\\nprint(res)\", \"n = int(input())\\na = list(map(int, input().split()))\\nnum = 0\\nfor i in range(2, n):\\n    if a[i] == 1 and a[i - 1] == 0 and a[i - 2] == 1:\\n        a[i] = 0\\n        num += 1\\n\\nprint(num)\", \"n = int( input() )\\na = list( map( int, input().split() ) )\\n\\nans = 0\\n\\nfor i in range(1,n-1):\\n    if a[i-1] == a[i+1] == 1 and a[i] == 0:\\n        a[i+1] = 0\\n        ans += 1\\n\\nprint( ans )\\n\", \"import math\\nn=int(input())\\nl=list(map(int,input().split()))\\nans=0\\nfor i in range(2,n-2):\\n    if(l[i]==1 and l[i-1]==0 and l[i-2]==1 and l[i+1]==0 and l[i+2]==1):\\n        l[i]=0\\n        ans+=1\\nfor i in range(1,n-1):\\n    if(l[i]==0 and l[i-1]==1 and l[i+1]==1):\\n        ans+=1\\nprint(ans)\", \"n=int(input())\\na=list(map(int,input().split()))\\nc=0\\nfor i in range(1,n-1):\\n    if a[i-1]==1 and a[i]==0 and a[i+1]==1:\\n        a[i+1]=0\\n        c+=1\\nprint(c)\\n\", \"# use this as the main template for python problems\\nfrom collections import Counter\\n\\ndef solution(n, a):\\n\\n    count = 0\\n    ind = 1\\n    while(ind < n-1):\\n        if(a[ind] == 0 and a[ind-1] == 1 and a[ind+1] == 1):\\n            a[ind+1] = 0\\n            ind = 1\\n            count += 1 \\n        ind += 1\\n    print(count)\\n\\ndef __starting_point():\\n\\n    # single variables\\n    n = [int(val) for val in input().split()][0]\\n\\n    # vectors\\n    arr = [int(val) for val in input().split()]\\n\\n    # solve it!\\n    solution(n, arr)\\n\\n__starting_point()\", \"n = int(input())\\na = [int(d) for d in input().split()]\\nk=0\\nfor x in range(1 , n-1):\\n    if(a[x-1] == a[x+1] and a[x-1] == 1 and a[x] == 0):\\n        a[x+1] = 0\\n        k+=1\\nprint(k)\\n\", \"n = int(input())\\nu = list(map(int, input().split()))\\nans = 0\\nfor i in range(1, n - 1):\\n    if u[i] == 0 and u[i - 1] == 1 and u[i + 1] == 1:\\n        ans += 1\\n        u[i + 1] = 0\\nprint(ans)\\n\", \"#      \\nimport collections, atexit, math, sys, bisect \\n\\nsys.setrecursionlimit(1000000)\\ndef getIntList():\\n    return list(map(int, input().split()))    \\n\\ntry :\\n    #raise ModuleNotFoundError\\n    import numpy\\n    def dprint(*args, **kwargs):\\n        #print(*args, **kwargs, file=sys.stderr)\\n        # in python 3.4 **kwargs is invalid???\\n        print(*args,  file=sys.stderr)\\n    dprint('debug mode')\\nexcept Exception:\\n    def dprint(*args, **kwargs):\\n        pass\\n\\n\\n\\ninId = 0\\noutId = 0\\nif inId>0:\\n    dprint('use input', inId)\\n    sys.stdin = open('input'+ str(inId) + '.txt', 'r') #\\u6807\\u51c6\\u8f93\\u51fa\\u91cd\\u5b9a\\u5411\\u81f3\\u6587\\u4ef6\\nif outId>0:\\n    dprint('use output', outId)\\n    sys.stdout = open('stdout'+ str(outId) + '.txt', 'w') #\\u6807\\u51c6\\u8f93\\u51fa\\u91cd\\u5b9a\\u5411\\u81f3\\u6587\\u4ef6\\n    atexit.register(lambda :sys.stdout.close())     #idle \\u4e2d\\u4e0d\\u4f1a\\u6267\\u884c atexit\\n    \\nN, = getIntList()\\nza = getIntList()\\n\\nre = 0\\n\\nfor i in range(1,N-1):\\n    if za[i]==0 and za[i-1] ==1 and za[i+1] ==1:\\n        re+=1\\n        za[i+1] =0\\n\\n#print(N)\\nprint(re)        \\n\\n\\n\\n\\n\\n\\n\", \"# your code goes here\\nn = int(input())\\n\\na = list(map(int,input().split()))\\n\\nans = 0\\nfor i in range(1,n-1):\\n\\tif a[i] == 0 and a[i-1] == 1 and a[i+1] == 1:\\n\\t\\tans += 1\\n\\t\\ta[i+1] = 0\\n\\nprint(ans)\", \"3.5\\n\\nn = int(input())\\nA = [int(s) for s in input().split(\\\" \\\") if s != \\\"\\\"]\\nret = 0\\n\\nfor i in range(1, len(A)-1):\\n    if A[i] == 0 and A[i-1] == 1 and A[i+1] == 1:\\n        A[i+1] = 0\\n        ret += 1\\n\\nprint(ret)\\n\", \"n = int(input())\\nA = list(map(int, input().split()))\\ncount = 0\\n\\nfor i in range(1, len(A) - 1):\\n    if A[i] == 0 and A[i - 1] == 1 and A[i + 1] == 1:\\n        A[i + 1] = 0\\n        count += 1\\n\\nprint(count)\"]", "task": "apps", "difficulty": "introductory", "split": "test", "transformation_type": "vanilla"}