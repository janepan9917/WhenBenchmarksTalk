{"qid": 4104, "orig_input": "One very experienced problem writer decided to prepare a problem for April Fools Day contest. The task was very simple - given an arithmetic expression, return the result of evaluating this expression. However, looks like there is a bug in the reference solution...\n\n\n-----Input-----\n\nThe only line of input data contains the arithmetic expression. The expression will contain between 2 and 10 operands, separated with arithmetic signs plus and/or minus. Each operand will be an integer between 0 and 255, inclusive.\n\n\n-----Output-----\n\nReproduce the output of the reference solution, including the bug.\n\n\n-----Examples-----\nInput\n8-7+6-5+4-3+2-1-0\n\nOutput\n4\n\nInput\n2+2\n\nOutput\n-46\n\nInput\n112-37\n\nOutput\n375", "input": "One very experienced problem writer decided to prepare a problem for April Fools Day contest. The task was very simple - given an arithmetic expression, return the result of evaluating this expression. However, looks like there is a bug in the reference solution...\n\n\n-----Input-----\n\nThe only line of input data contains the arithmetic expression. The expression will contain between 2 and 10 operands, separated with arithmetic signs plus and/or minus. Each operand will be an integer between 0 and 255, inclusive.\n\n\n-----Output-----\n\nReproduce the output of the reference solution, including the bug.\n\n\n-----Examples-----\nInput\n8-7+6-5+4-3+2-1-0\n\nOutput\n4\n\nInput\n2+2\n\nOutput\n-46\n\nInput\n112-37\n\nOutput\n375", "test_cases": {"inputs": ["8-7+6-5+4-3+2-1-0\n", "2+2\n", "112-37\n", "255+255+255+255+255+255+255+255+255+255\n", "0-255-255-255-255-255-255-255-255-255\n", "0+0+0+0+0+0+0+0+0+0\n", "0-0-0-0-0-0-0-0-0-0\n", "0+100+100+100+100+100+100+100+100+100\n", "255-100-100-100-100-100-100-100-100-100\n", "45+5\n", "23+6-9\n", "123+234-56-78-90\n", "97+67+12+9+42+45+13\n", "9-109-22+23-87+27-40+10\n", "66-165-34+209+76\n", "150+222-3-90-248-187+198\n", "136+90-200+6-102\n", "255-12-34-56-69-78-90\n", "243-173+90-56+78-53+53-21\n", "131+49+249+71-251-61+159-111+51\n", "5-9-1-3+6+4-7+8-2\n", "101+200+195+231+107+222+146+254+160+209\n", "240-120-234-156-207-189\n", "1-2+3-4+5-6\n", "9-8+7-6+5-4+3-2+1-0\n"], "outputs": ["4\n", "-46\n", "375\n", "-42450\n", "24705\n", "-450\n", "270\n", "-44100\n", "26355\n", "0\n", "0\n", "-3967\n", "-2265\n", "2211\n", "-2048\n", "-3628\n", "5380\n", "1716\n", "2561\n", "-4913\n", "1\n", "-43175\n", "14334\n", "-13\n", "-45\n"]}, "solutions": "[\"res = 0\\nval = 0\\nsub = False\\nfor c in input()+'+':\\n  if c == '+' or c == '-':\\n     if sub: val *= -1\\n     res += val\\n     val = 0\\n     sub = (c == '-')\\n  val *= 10\\n  val += ord(c) - ord('0')\\nprint(res)\", \"s = input()\\n\\nops = []\\n\\nfor i in range(0,len(s)):\\n    ch = s[i]\\n    if ch == '+' or ch == '-':\\n        ops.append(i)\\nops.append(len(s))\\n\\n\\nfor i in range(0,len(ops)-1):\\n    ch = s[ops[i]]\\n    if ch == '-':\\n        s += '+3'\\n    if ch == '+':\\n        s += '-5'\\n    for j in range(ops[i], ops[i + 1] - 1):\\n        s += '0'\\n\\n#print(s)\\nprint(eval(s))\", \"s = input()\\nval = eval(s)\\nfor i in range(len(s)):\\n    if s[i] == '+':\\n        c = -5\\n        j = i+1\\n        while j < len(s) and s[j] != '+' and s[j] != '-':\\n            j += 1\\n            c *= 10\\n        val += c\\n    if s[i] == '-':\\n        c = 3\\n        j = i+1\\n        while j < len(s) and s[j] != '+' and s[j] != '-':\\n            j += 1\\n            c *= 10\\n        val += c\\nprint(val)\\n\", \"s = input()\\nnow = 0\\nn = len(s)\\nans = []\\nwhile (now < n) and (s[now] != '-') and (s[now] != '+'):\\n    ans.append(ord(s[now])-48)\\n    now += 1\\nans.reverse()\\nwhile now < n:\\n    opt = s[now]\\n    now += 1\\n    a = [ord(opt)-48]\\n    while (now < n) and (s[now] != '-') and (s[now] != '+'):\\n        a.append(ord(s[now])-48)\\n        now += 1\\n    a.reverse()\\n    if len(a) <= len(ans):\\n        for i in range(len(ans) - len(a)):\\n            a.append(0)\\n    else:\\n        for i in range(len(a) - len(ans)):\\n            ans.append(0)\\n    for i in range(len(ans)):\\n        if opt == '-':\\n            ans[i] -= a[i]\\n        else:\\n            ans[i] += a[i]\\nret = 0\\nans.reverse()\\nfor i in range(len(ans)):\\n    ret = ret * 10 + ans[i]\\nprint(ret)\\n\", \"a = input()\\nq, s = [0], 0\\nz = []\\nfor i in range(len(a)):\\n    y = a[i]\\n    if (y==\\\"+\\\"):\\n        z.append(1)\\n        q.append(0)\\n        s+=1\\n    elif (y==\\\"-\\\"):\\n        z.append(-1)\\n        q.append(0)\\n        s+=1\\n    q[s] = 10*q[s] + (ord(y)-ord(\\\"0\\\"))\\notv = q[0]\\nfor i in range(1, s+1):\\n    otv += z[i-1]*q[i]\\nprint(otv)\", \"s = input()\\nval = eval(s)\\nfor i in range(len(s)):\\n    if s[i] == '+':\\n        c = -5\\n        j = i+1\\n        while j < len(s) and s[j] != '+' and s[j] != '-':\\n            j += 1\\n            c *= 10\\n        val += c\\n    if s[i] == '-':\\n        c = 3\\n        j = i+1\\n        while j < len(s) and s[j] != '+' and s[j] != '-':\\n            j += 1\\n            c *= 10\\n        val += c\\nprint(val)\", \"s = [ord(c) - 48 for c in input()]\\nr, t, f = 0, 0, 1\\nfor x in s:\\n    if x < 0:\\n        r += f * t\\n        f = -4 - x\\n        t = 0\\n    t = t * 10 + x\\nprint(r + f * t)\\n\", \"from re import sub as b\\nprint(eval(b(r'`', '-', b(r'(?P<a>-\\\\d*)', lambda x: b('-', '+3', x.group('a') * 3, 1), b(r'(?P<a>\\\\+\\\\d*)', lambda x: b('\\\\+', '`5', x.group('a') * 3, 1), input())))))\\n\", \"s = input()\\nval = eval(s)\\nfor i in range(len(s)):\\n    if s[i] == '+':\\n        c = -5\\n        j = i+1\\n        while j < len(s) and s[j] != '+' and s[j] != '-':\\n            j += 1\\n            c *= 10\\n        val += c\\n    if s[i] == '-':\\n        c = 3\\n        j = i+1\\n        while j < len(s) and s[j] != '+' and s[j] != '-':\\n            j += 1\\n            c *= 10\\n        val += c\\nprint(val)\", \"res = 0\\ncur = 0\\nsign = +1\\nfor c in input() + \\\"+\\\":\\n    if c in \\\"+-\\\":\\n        res += sign * cur\\n        cur = 0\\n    if c == '+':\\n        sign = +1\\n    if c == '-':\\n        sign = -1\\n    cur = cur * 10 + ord(c) - ord('0')\\nprint(res)\\n\", \"s = input()\\nval = eval(s)\\nfor i in range(len(s)):\\n    if s[i] == '+':\\n        c = -5\\n        j = i+1\\n        while j < len(s) and s[j] != '+' and s[j] != '-':\\n            j += 1\\n            c *= 10\\n        val += c\\n    if s[i] == '-':\\n        c = 3\\n        j = i + 1\\n        while j < len(s) and s[j] != '+' and s[j] != '-':\\n            j += 1\\n            c *= 10\\n        val += c\\nprint(val)\", \"s = input()\\nval = eval(s)\\nfor i in range(len(s)):\\n    if s[i] ==  '+':\\n        j = i + 1\\n        c = -5\\n        while j < len(s) and s[j] != '+' and s[j] != '-':\\n            c *= 10\\n            j += 1\\n        val += c\\n    elif s[i] == '-':\\n        j = i + 1\\n        c = 3\\n        while j < len(s) and s[j] != '+' and s[j] != '-':\\n            c *= 10\\n            j += 1\\n        val += c\\nprint(val)\", \"in_str = input().replace('-', ' - ').replace('+', ' + ').split()\\nres = int(in_str[0])\\nfor i in range(1, len(in_str) - 1):\\n    if in_str[i] == '+':\\n        res += int(in_str[i + 1]) - 5 * (10 ** len(in_str[i + 1]))\\n    elif in_str[i] == '-':\\n        res -= int(in_str[i + 1]) - 3 * (10 ** len(in_str[i + 1]))\\n    else:\\n        pass\\nprint(res)\\n\", \"s = input().strip() + '+'\\nans = 0\\n\\ncurr = 0\\nsign = 1\\nfor c in s:\\n    if c in '-+':\\n        ans += sign*curr\\n        curr = 0\\n    if c == '-':\\n        sign = -1\\n    elif c == '+':\\n        sign = 1\\n    curr = curr*10 + (ord(c) - ord('0'))\\nprint(ans)\\n\", \"ans=0\\nop=1\\nnow=0\\ns=input()\\nl=len(s)\\nfor i in range(l):\\n    if s[i]=='+':\\n        ans=ans+op*now\\n        now=0\\n        op=1\\n    elif s[i]=='-':\\n        ans=ans+op*now\\n        now=0\\n        op=-1\\n    now=now*10+ord(s[i])-48\\nans=ans+op*now\\nprint(ans)\", \"s = input()\\nval = eval(s)\\nfor i in range(len(s)):\\n    if s[i] == '+':\\n        c = -5\\n        j = i+1\\n        while j < len(s) and s[j] != '+' and s[j] != '-':\\n            j += 1\\n            c *= 10\\n        val += c\\n    if s[i] == '-':\\n        c = 3\\n        j = i + 1\\n        while j < len(s) and s[j] != '+' and s[j] != '-':\\n            j += 1\\n            c *= 10\\n        val += c\\nprint(val)\", \"s = map(lambda c: ord(c) - 48, input())\\nr, t, f = 0, 0, 1\\nfor x in s:\\n    if x < 0:\\n        r += f * t\\n        f = -4 - x\\n        t = 0\\n    t = t * 10 + x\\nprint(r + f * t)\", \"s = input().strip() + '+'\\nans = 0\\n\\ncurr = 0\\nsign = 1\\nfor c in s:\\n    if c in '-+':\\n        ans += sign*curr\\n        curr = 0\\n    if c == '-':\\n        sign = -1\\n    elif c == '+':\\n        sign = 1\\n    curr = curr*10 + (ord(c) - ord('0'))\\nprint(ans)\", \"s = input().strip() + '+'\\nans = 0\\n\\ncurr = 0\\nsign = 1\\nfor c in s:\\n    if c in '-+':\\n        ans += sign*curr\\n        curr = 0\\n    if c == '-':\\n        sign = -1\\n    elif c == '+':\\n        sign = 1\\n    curr = curr*10 + (ord(c) - ord('0'))\\nprint(ans)\", \"s = map(lambda c: ord(c) - 48, input())\\nr, t, f = 0, 0, 1\\nfor x in s:\\n    if x < 0:\\n        r += f * t\\n        f = -4 - x\\n        t = 0\\n    t = t * 10 + x\\nprint(r + f * t)\", \"import re\\ns=input()\\nprint(eval(s)+eval(re.sub(\\\"\\\\d\\\",\\\"0\\\",s).replace(\\\"-\\\",\\\"*3\\\").replace(\\\"+\\\",\\\"-5\\\").replace(\\\"*\\\",\\\"+\\\")))\", \"import re\\ns=input()\\nprint(eval(s)+eval(re.sub(\\\"-|\\\\+|\\\\d\\\",lambda m:[\\\"0\\\",[\\\"+3\\\",\\\"-5\\\"][m[0]==\\\"+\\\"]][m[0]in\\\"+-\\\"],s)))\", \"s = input().strip() + '+'\\nans = 0\\n\\ncurr = 0\\nsign = 1\\nfor c in s:\\n    if c in '-+':\\n        ans += sign*curr\\n        curr = 0\\n    if c == '-':\\n        sign = -1\\n    elif c == '+':\\n        sign = 1\\n    curr = curr*10 + (ord(c) - ord('0'))\\nprint(ans)\", \"a = input()\\nq, s = [0], 0\\nz = []\\nfor i in range(len(a)):\\n    y = a[i]\\n    if (y==\\\"+\\\"):\\n        z.append(1)\\n        q.append(0)\\n        s+=1\\n    elif (y==\\\"-\\\"):\\n        z.append(-1)\\n        q.append(0)\\n        s+=1\\n    q[s] = 10*q[s] + (ord(y)-ord(\\\"0\\\"))\\notv = q[0]\\nfor i in range(1, s+1):\\n    otv += z[i-1]*q[i]\\nprint(otv)\"]", "task": "apps", "difficulty": "introductory", "split": "test", "transformation_type": "vanilla"}