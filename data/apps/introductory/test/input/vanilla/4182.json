{"qid": 4182, "orig_input": "Our world is one-dimensional, and ruled by two empires called Empire A and Empire B.\nThe capital of Empire A is located at coordinate X, and that of Empire B is located at coordinate Y.\nOne day, Empire A becomes inclined to put the cities at coordinates x_1, x_2, ..., x_N under its control, and Empire B becomes inclined to put the cities at coordinates y_1, y_2, ..., y_M under its control.\nIf there exists an integer Z that satisfies all of the following three conditions, they will come to an agreement, but otherwise war will break out.\n - X < Z \\leq Y\n - x_1, x_2, ..., x_N < Z\n - y_1, y_2, ..., y_M \\geq Z\nDetermine if war will break out.\n\n-----Constraints-----\n - All values in input are integers.\n - 1 \\leq N, M \\leq 100\n - -100 \\leq X < Y \\leq 100\n - -100 \\leq x_i, y_i \\leq 100\n - x_1, x_2, ..., x_N \\neq X\n - x_i are all different.\n - y_1, y_2, ..., y_M \\neq Y\n - y_i are all different.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN M X Y\nx_1 x_2 ... x_N\ny_1 y_2 ... y_M\n\n-----Output-----\nIf war will break out, print War; otherwise, print No War.\n\n-----Sample Input-----\n3 2 10 20\n8 15 13\n16 22\n\n-----Sample Output-----\nNo War\n\nThe choice Z = 16 satisfies all of the three conditions as follows, thus they will come to an agreement.\n - X = 10 < 16 \\leq 20 = Y\n - 8, 15, 13 < 16\n - 16, 22 \\geq 16", "input": "Our world is one-dimensional, and ruled by two empires called Empire A and Empire B.\nThe capital of Empire A is located at coordinate X, and that of Empire B is located at coordinate Y.\nOne day, Empire A becomes inclined to put the cities at coordinates x_1, x_2, ..., x_N under its control, and Empire B becomes inclined to put the cities at coordinates y_1, y_2, ..., y_M under its control.\nIf there exists an integer Z that satisfies all of the following three conditions, they will come to an agreement, but otherwise war will break out.\n - X < Z \\leq Y\n - x_1, x_2, ..., x_N < Z\n - y_1, y_2, ..., y_M \\geq Z\nDetermine if war will break out.\n\n-----Constraints-----\n - All values in input are integers.\n - 1 \\leq N, M \\leq 100\n - -100 \\leq X < Y \\leq 100\n - -100 \\leq x_i, y_i \\leq 100\n - x_1, x_2, ..., x_N \\neq X\n - x_i are all different.\n - y_1, y_2, ..., y_M \\neq Y\n - y_i are all different.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN M X Y\nx_1 x_2 ... x_N\ny_1 y_2 ... y_M\n\n-----Output-----\nIf war will break out, print War; otherwise, print No War.\n\n-----Sample Input-----\n3 2 10 20\n8 15 13\n16 22\n\n-----Sample Output-----\nNo War\n\nThe choice Z = 16 satisfies all of the three conditions as follows, thus they will come to an agreement.\n - X = 10 < 16 \\leq 20 = Y\n - 8, 15, 13 < 16\n - 16, 22 \\geq 16", "test_cases": {"inputs": ["3 2 10 20\n8 15 13\n16 22\n", "4 2 -48 -1\n-20 -35 -91 -23\n-22 66\n", "5 3 6 8\n-10 3 1 5 -100\n100 6 14\n", "1 1 -100 100\n-99\n99\n", "1 1 -100 100\n99\n-99\n", "99 99 -20 74\n-51 -77 -13 -11 -45 47 -33 13 17 -58 -93 -72 -76 -22 -53 59 -97 53 -47 -64 0 45 -90 36 -25 -91 14 -80 82 -78 -7 24 -54 -87 32 -23 -75 37 29 -68 -100 -36 15 -32 -61 43 -65 98 7 -81 -70 -8 97 91 92 27 -79 34 -67 -30 -15 44 89 70 -38 22 -5 -29 -86 94 6 31 84 80 -74 -49 57 30 56 90 -50 -27 88 74 60 -63 5 8 66 76 1 67 49 21 -96 52 2 -88 11\n-12 12 77 35 -78 83 32 -86 80 89 48 -20 49 -57 -25 24 17 25 -72 72 -47 3 37 -67 -24 65 43 -5 -62 56 -4 -50 94 -99 57 -75 66 -56 42 -59 67 -60 60 -83 99 -22 -19 -71 -64 -91 -96 -21 54 52 97 6 -42 -23 -90 -98 76 -13 14 -52 -37 68 50 -87 90 93 -82 -34 86 4 69 -26 -17 8 -6 0 15 -80 100 -2 -89 -9 98 -94 -1 21 88 75 85 -58 -40 -18 30 71 -73\n", "99 99 -22 62\n-9 -54 -13 -39 -79 -88 -6 -14 -41 -29 -2 -69 -30 -20 -33 -8 -24 -80 -19 -87 -32 -60 -40 -59 -44 -52 -3 -67 -18 -51 -56 -12 -7 -31 -48 -27 -68 -78 -21 -11 -49 -93 -1 -64 -82 -66 -70 -58 -84 -26 -57 -37 -53 -89 -50 -34 -61 -46 -92 -95 -99 -63 -65 -28 -10 -16 -73 -55 -98 -94 -77 -75 -62 -74 -42 -45 -83 -36 -86 -90 -96 -25 -38 -71 -47 -100 -5 -97 -4 -35 -85 -81 -23 -72 -17 -15 -76 -91 -43\n23 85 60 1 14 6 25 30 93 63 32 27 56 50 43 9 46 96 89 33 94 44 48 68 83 45 34 20 78 98 71 91 69 5 65 72 54 2 55 79 11 52 90 82 39 64 80 70 67 86 36 95 15 7 74 24 99 59 28 18 53 38 61 31 81 66 37 8 40 47 41 16 92 29 12 75 19 97 76 100 21 3 49 17 77 10 22 13 0 57 88 42 58 87 4 84 73 35 51\n", "99 98 -92 0\n-100 -52 -98 -89 -62 -77 -81 -86 -38 -61 -91 -20 -71 -57 -28 -80 -84 -31 -47 -55 -64 -25 -85 -75 -93 -74 -5 -70 -21 -29 -3 -68 -8 -10 -99 -14 -90 -96 -76 -63 -78 -82 -19 0 -83 -43 -59 -15 -66 -13 -39 -22 -67 -94 -4 -97 -44 -95 -2 -69 -53 -72 -42 -37 -46 -17 -65 -1 -40 -50 -45 -58 -49 -6 -30 -33 -88 -7 -51 -60 -36 -41 -12 -87 -48 -18 -56 -79 -32 -73 -16 -11 -35 -27 -54 -23 -34 -24 -9\n39 31 70 9 69 54 6 91 41 94 89 18 62 14 75 15 16 7 47 36 35 22 93 34 74 78 49 29 53 20 65 37 72 61 28 88 100 96 33 40 66 92 55 38 51 44 32 84 4 95 8 2 45 86 68 23 12 11 67 64 87 50 1 27 42 17 24 46 21 52 98 3 71 25 59 83 48 58 79 57 77 13 90 81 82 56 60 10 85 99 73 43 63 80 30 19 76 97\n", "99 98 -55 98\n-19 -63 -94 -85 -39 -38 -8 -48 -26 -44 -25 -46 -31 -70 -23 -56 -60 -21 -20 -51 -43 -73 -53 -11 -14 -68 -42 -95 -59 -89 -33 -36 -22 -96 -82 -34 -9 -91 -84 -49 -12 -74 -79 -27 -87 -69 -5 -76 -77 -37 -7 -13 -75 -65 -92 -32 -54 -3 -98 -47 -100 -67 -6 -83 -30 -88 -29 -99 -58 -35 -72 -50 -71 -78 0 -93 -40 -15 -17 -45 -90 -2 -80 -1 -62 -86 -52 -66 -10 -61 -81 -41 -24 -97 -64 -4 -57 -28 -18\n71 84 46 68 86 39 80 9 76 27 24 56 97 79 1 73 48 77 28 51 60 45 37 36 50 30 64 8 95 82 20 32 35 18 13 25 38 7 21 11 87 96 3 69 29 4 92 54 33 5 49 40 42 0 41 75 26 59 16 90 91 58 81 17 89 6 62 34 52 12 14 74 70 100 2 63 67 83 15 31 66 94 61 22 53 72 10 57 23 85 88 43 93 78 65 99 19 55\n", "99 98 0 47\n-42 -25 -75 -62 -65 -91 -39 -47 -96 -8 -76 -90 -85 -19 -70 -34 -9 -60 -41 -10 -78 -50 -95 -45 -82 -18 -13 -24 -83 -21 -33 -86 -89 -5 -63 -22 -2 -7 -98 -31 -81 -6 -30 -99 -51 -52 -28 -4 -53 -36 -14 -72 -92 -64 -16 -20 -80 -84 -97 -1 -54 -57 -11 -26 -77 -37 -44 -100 -23 -69 -56 -40 -3 -27 -94 -17 -48 -38 -12 -46 -79 -59 -88 -66 -73 -15 -55 -74 -67 -35 -58 -93 -87 -49 -29 -68 -32 -71 -43\n64 46 67 45 19 55 31 78 74 86 66 8 25 29 99 21 22 58 50 15 100 90 80 89 0 32 95 28 9 92 24 39 5 40 34 17 69 33 44 59 37 85 1 60 49 72 57 82 87 36 63 75 4 53 98 62 68 27 81 54 42 10 84 91 93 13 7 71 11 76 30 52 51 14 73 88 94 35 23 79 56 97 61 2 77 70 83 18 41 3 6 20 26 16 65 43 12 96\n", "99 99 -36 95\n-94 -40 -49 -78 -100 -52 -26 -8 -24 -79 -4 -20 -76 -45 -60 -50 -7 -10 -13 -71 -68 -66 -93 -91 -74 -96 -33 -81 -25 -62 -21 -38 -53 -6 -3 -48 -73 -32 -57 -95 -63 -87 -75 -46 -89 -86 -99 -14 -97 -55 -61 -90 -58 -65 -59 -31 -27 -5 -69 -37 -11 0 -2 -42 -70 -72 -83 -43 -67 -28 -39 -82 -56 -16 -47 -19 -30 -77 -88 -84 -85 -98 -22 -35 -41 -80 -29 -51 -34 -12 -92 -23 -15 -44 -54 -18 -17 -9 -64\n21 93 96 76 12 99 16 11 26 27 51 43 69 77 89 80 65 84 75 62 70 64 67 -1 46 50 8 29 40 66 79 7 38 78 97 30 18 72 90 53 39 71 45 33 87 82 20 41 9 19 81 98 13 60 35 85 32 24 22 57 2 15 44 68 49 58 55 28 3 83 1 61 6 94 23 91 52 5 34 100 37 17 10 36 54 88 14 73 86 63 31 92 42 47 59 74 48 4 25\n", "99 99 -33 0\n-6 -97 -34 -12 -57 1 -83 -75 -44 -91 -92 -5 -51 -29 -100 -7 -77 -93 -10 -27 -9 -23 -42 -22 -67 -71 -85 -45 -82 -30 -61 -63 -36 -59 -94 -40 -47 -32 -89 -38 -81 -24 -96 -31 -28 -78 -70 -56 -86 -43 -79 -2 -17 -11 -4 -46 -69 -8 -39 -99 -55 -66 -53 -58 -72 -64 -15 -49 -95 -68 -13 -50 -37 -25 -90 -87 -54 -74 -16 -60 -84 -80 -88 -76 -18 -98 -14 -52 -65 -1 -73 -3 -20 -62 -35 -26 -21 -48 -41\n58 65 80 22 28 36 11 12 21 33 47 88 63 49 85 74 44 90 41 9 93 27 59 68 19 100 61 55 98 38 46 5 53 40 84 96 15 75 14 20 95 54 78 82 89 69 4 45 79 39 48 18 50 94 30 16 31 23 8 26 91 6 2 42 29 70 62 7 71 67 37 52 86 3 24 17 10 72 43 57 77 76 51 35 92 13 97 25 64 83 99 73 56 60 81 66 32 34 87\n", "21 21 -41 -32\n-100 8 -8 -52 -62 -61 -76 14 -11 -2 -54 46 26 -17 -35 34 87 5 42 -44 66\n71 -31 9 -51 90 -62 86 -52 7 88 25 -14 -7 37 -55 98 64 51 34 -85 8\n", "44 10 2 96\n30 -46 27 -56 -42 43 -93 -49 -65 -6 33 -74 11 -79 -21 -36 17 -14 40 -1 5 -94 8 -66 -100 38 35 -57 -78 -62 13 -76 19 -19 -70 -53 -22 54 -64 -2 45 1 39 -73\n86 93 64 55 52 84 61 85 89 68\n", "51 29 0 79\n29 -81 -97 38 -73 34 -69 -37 -25 -93 10 -17 -38 27 4 -40 -16 -7 -35 41 -90 -65 -74 -66 17 -3 -80 32 30 -23 -72 26 7 -83 -8 -4 -41 -57 -91 -76 -11 8 -59 -71 -14 -62 40 -49 -98 -55 -36\n81 72 45 73 90 52 82 98 55 88 83 53 56 67 61 80 48 91 85 89 84 43 47 63 78 92 68 87 76\n", "96 28 -47 60\n5 -92 21 34 -94 37 18 -83 -57 -52 41 31 17 -29 -12 -74 16 58 33 -8 -4 -56 -88 -2 26 19 -15 38 35 -20 -73 53 43 -34 -100 -27 -3 -37 42 47 24 10 -1 -9 -66 -25 3 -80 8 -99 -6 -63 23 -11 13 0 54 28 -23 4 -24 1 20 -71 -78 -40 -77 7 -5 -98 -17 11 -95 -19 -62 -39 -75 -41 -18 50 -28 -50 -89 -65 -16 -21 55 -93 9 -26 -97 -72 -67 -43 -90 -84\n72 65 82 61 85 99 58 73 92 91 100 75 86 66 63 68 64 90 62 89 88 71 79 98 70 59 67 87\n", "70 75 -11 30\n-14 -84 -39 -47 -61 4 -74 -45 6 -83 -30 -70 -94 -19 -36 -28 -71 -69 -96 -9 -44 -38 -35 7 -98 -43 -72 8 10 0 1 -57 -88 -59 3 -17 -40 -27 -82 -12 -66 -26 -54 -62 11 -34 -25 -46 2 -95 -15 -67 -48 -86 -65 -6 -55 -73 -51 -75 -2 -3 -80 -77 -97 -8 -60 13 -49 -100\n93 42 75 92 48 50 20 31 19 27 25 73 64 21 38 100 72 44 16 61 26 89 88 81 46 24 95 99 17 28 36 23 65 66 79 84 55 97 56 15 54 45 76 47 29 14 59 94 58 63 52 80 32 60 34 74 87 43 68 91 40 41 83 39 98 78 67 70 49 53 71 35 18 51 33\n"], "outputs": ["No War\n", "War\n", "War\n", "No War\n", "War\n", "War\n", "No War\n", "War\n", "War\n", "War\n", "War\n", "War\n", "War\n", "War\n", "No War\n", "War\n", "No War\n"]}, "solutions": "[\"def readinput():\\n    n,m,x,y=list(map(int,input().split()))\\n    xx=list(map(int,input().split()))\\n    yy=list(map(int,input().split()))\\n    return n,m,x,y,xx,yy\\n\\ndef main(n,m,x,y,xx,yy):\\n    xx.append(x)\\n    yy.append(y)\\n    xx.sort()\\n    yy.sort()\\n    if xx[-1]<yy[0]:\\n        return 'No War'\\n    else:\\n        return 'War'\\n\\ndef __starting_point():\\n    n,m,x,y,xx,yy=readinput()\\n    ans=main(n,m,x,y,xx,yy)\\n    print(ans)\\n\\n__starting_point()\", \"\\nurl = \\\"https://atcoder.jp//contests/abc110/tasks/abc110_b\\\"\\n\\ndef main():\\n    n, m, x, y = list(map(int, input().split()))\\n    xs = list(map(int, input().split()))\\n    ys = list(map(int, input().split()))\\n    xs.sort()\\n    ys.sort()\\n    if xs[-1] >= ys[0]:\\n        print('War')\\n        return\\n    for i in range(xs[-1] + 1, ys[0] + 1):\\n        if x < i <= y:\\n            print('No War')\\n            return\\n    print('War')\\n\\n\\ndef __starting_point():\\n    main()\\n\\n__starting_point()\", \"n,m,X,Y=map(int,input().split())\\nx=list(map(int,input().split()))\\ny=list(map(int,input().split()))\\n \\nx.sort(reverse=True)\\ny.sort()\\n \\n \\nflag=0\\nfor i in range(X+1,Y+1):\\n  if x[0]<i and y[0]>=i:\\n    flag=1\\n    break\\n  \\n \\n  else:\\n    flag=0\\n    \\nif flag==1:\\n  print('No War')\\n  \\nelse:\\n  print('War')\", \"def mapt(fn, *args):\\n    return tuple(map(fn, *args))\\n\\n\\ndef Input():\\n    return mapt(int, input().split(\\\" \\\"))\\n\\n\\ndef main():\\n    n, m, x, y = Input()\\n    x_data = Input()\\n    y_data = Input()\\n    x_max = max(x_data)\\n    y_min = min(y_data)\\n    ans = False\\n\\n    for i in range(-100, 101):\\n        if x_max < i <= y_min and x < i <= y:\\n            ans = True\\n            break\\n\\n    if ans: print(\\\"No War\\\")\\n    else: print(\\\"War\\\")\\n\\n\\nmain()\", \"n, m, x, y = list(map(int, input().split()))\\nxn = list(map(int, input().split()))\\nyn = list(map(int, input().split()))\\nmaxx = max(xn)\\nminy = min(yn)\\nif x < miny and miny <= y and miny > maxx:\\n    print(\\\"No War\\\")\\nelse:\\n    print(\\\"War\\\")\\n\", \"n, m, X, Y = map(int, input().split())\\nx = list(map(int, input().split()))\\ny = list(map(int, input().split()))\\nx.sort()\\ny.sort()\\nif x[n - 1] < Y and X < y[0] and x[n - 1] < y[0]:\\n    print('No War')\\nelse:\\n    print('War')\", \"n, m, x, y = (int(i) for i in input().split())\\nlist_x = sorted(list(map(int, input().split())))\\nlist_y = sorted(list(map(int, input().split())))\\nif max(x ,list_x[-1]) < min(y, list_y[0]):\\n    print(\\\"No War\\\")\\nelse:\\n    print(\\\"War\\\")\", \"N, M, X, Y = map(int, input().split())\\nx = list(map(int, input().split()))\\ny = list(map(int, input().split()))\\n\\nx_max = max(x)\\nz = min(y)\\n\\nif X < z <= Y and x_max < z:\\n  print('No War')\\nelse:\\n  print('War')\", \"n, m, x, y = list(map(int, input().split()))\\nxx = list(map(int, input().split()))\\nyy = list(map(int, input().split()))\\nfor i in range(x+1, y+1):\\n    if max(xx) < i <= min(yy):\\n        print('No War')\\n        return\\nprint('War')\\n\", \"n,m,x,y=map(int, input().split())\\nx_list=list(map(int, input().split()))\\ny_list=list(map(int, input().split()))\\nif max(x_list)<min(y_list) and max(x_list)<y and x<min(y_list):\\n  print(\\\"No War\\\")\\nelse:\\n  print(\\\"War\\\")\", \"N,M,X,Y=map(int,input().split())\\nx=list(map(int,input().split()))\\ny=list(map(int,input().split()))\\nfor Z in range(X+1,Y+1):\\n  if max(x)<Z<=min(y) :\\n    print(\\\"No War\\\")\\n    return\\nprint(\\\"War\\\")\", \"n, m, x, y = list(map(int, input().split()))\\n\\np = list(map(int, input().split()))\\nq = list(map(int, input().split()))\\n\\nif max(max(p), x) < min(min(q), y):\\n    print(\\\"No War\\\")\\nelse:\\n    print(\\\"War\\\")\", \"N,M,X,Y = map(int, input().split())\\nA = list(map(int, input().split())) + [X]\\nB = list(map(int, input().split())) + [Y]\\n\\nprint('No War' if max(A) < min(B) else 'War')\", \"N, M, X, Y = list(map(int, input().split()))\\nmax_X = max(list(map(int, input().split())))\\nmin_Y = min(list(map(int, input().split())))\\n\\nfor Z in range(X+1, Y+1):\\n    if max_X < Z <= min_Y:\\n        print(\\\"No War\\\")\\n        return\\nelse:\\n    print(\\\"War\\\")\\n\", \"n, m, x, y = map(int,input().split())\\nmax_x = max(list(map(int,input().split())))\\nmin_y = min(list(map(int,input().split())))\\n\\nfor z in range(x+1,y+1):\\n  if max_x < z <= min_y:\\n    print(\\\"No War\\\")\\n    return\\nelse:\\n  print(\\\"War\\\")\", \"n,m,x,y = map(int, input().split())\\nxl = list(map(int, input().split()))\\nyl = list(map(int, input().split()))\\nxl.append(x)\\nyl.append(y)\\nif max(xl) < min(yl):\\n  print(\\\"No War\\\")\\nelse:\\n  print(\\\"War\\\")\", \"N, M, X, Y = list(map(int, input().split()))\\nx = list(map(int, input().split()))\\ny = list(map(int, input().split()))\\n\\nx.append(X)\\ny.append(Y)\\n\\nif max(x) >= min(y):\\n  print(\\\"War\\\")\\nelse:\\n  print(\\\"No War\\\")\", \"n, m, x, y = map(int, input().split())\\nlx = list(map(int, input().split()))\\nly = list(map(int, input().split()))\\nlx.append(x)\\nly.append(y)\\nlx.sort()\\nly.sort()\\n\\nif lx[-1] < ly[0]:\\n        print('No War')\\nelse:\\n    print('War')\", \"# ABC110\\n# B 1 Dimensional World's Tale\\nN, M, X, Y = map(int, input().split())\\nx = list(map(int, input().split()))\\ny = list(map(int, input().split()))\\nx = sorted(x, reverse=True)\\ny = sorted(y)\\nANS = []\\nans = x[0]+1\\nwhile True:\\n    if ans <= y[0]:\\n        ANS.append(ans)\\n        ans = ans + 1\\n    else:\\n        break\\nfor i in ANS:\\n    if X < i:\\n        if i < Y:\\n            print(\\\"No War\\\")\\n            return\\nprint(\\\"War\\\")\", \"import numpy as np\\n\\nn, m, x, y = list(map(int, input().split()))\\npx = np.array([int(i) for i in input().split()])\\npy = np.array([int(i) for i in input().split()])\\n\\nres = 'War'\\nfor i in range(x+1, y+1):\\n    if np.count_nonzero(px < i) == n and np.count_nonzero(py >= i) == m:\\n        res = 'No War'\\n        break\\nprint(res)\\n\", \"def main():\\n    N, M, X, Y = map(int, input().split())\\n    x = list(map(int, input().split()))\\n    y = list(map(int, input().split()))\\n    x.sort()\\n    y.sort()\\n\\n    if X < x[len(x)-1] < y[0] < Y:\\n        print('No War')\\n    else:\\n        print('War')\\nmain()  \", \"n,m,x,y = list(map(int, input().split()))\\na = list(map(int, input().split())) + [x]\\nb = list(map(int, input().split())) + [y]\\nprint((\\\"No War\\\" if max(a) < min(b) else \\\"War\\\"))\\n\\n\", \"n,m,x,y=map(int,input().split())\\nX = list(map(int,input().split()))\\nY = list(map(int,input().split()))\\nif max(X) < min(Y) and max(X)+1 > x and max(X)+1 <= y:\\n  print(\\\"No War\\\")\\nelse:\\n  print(\\\"War\\\")\", \"n,m,x,y = map(int,input().split())\\na = list(map(int,input().split()))\\nb = list(map(int,input().split()))\\na.sort(reverse = True)\\nb.sort()\\nbool = False\\nif a[0] < b[0]:\\n    for i in range(a[0] + 1,b[0] + 1):\\n        if x < i and i <= y:\\n            bool = True\\nif bool:\\n    print('No War')\\nelse:\\n    print('War')\", \"n, m, X, Y = list(map(int, input().split()))\\nx = list(map(int, input().split()))\\ny = list(map(int, input().split()))\\nx = sorted(x, reverse=False)[-1]\\ny = sorted(y, reverse=False)[0]\\nflg = 'War'\\nif x < x+1 <= y:\\n    if x+1 > X:\\n        if x+1 <= Y:\\n            flg = 'No War'\\n\\nprint(flg)    \\n\", \"N, M, X, Y = list(map(int, input().split()))\\nx = list(map(int, input().split()))+[X]\\ny = list(map(int, input().split()))+[Y]\\n\\nif max(x)<min(y):\\n    print('No War')\\nelse:\\n    print('War')\\n\", \"N, M, X, Y = map(int, input().split())\\nX_list = list(map(int, input().split()))\\nY_list = list(map(int, input().split()))\\nmaxX = max(X_list)\\nminY = min(Y_list)\\nfor z in range(maxX+1, minY+1):\\n    if z > X and Y >= z:\\n        print(\\\"No War\\\")\\n        return\\nprint(\\\"War\\\")\", \"n,m,x,y=map(int,input().split())\\nlx=list(map(int,input().split()))\\nly=list(map(int,input().split()))\\nz=max(lx)+1 if max(lx)>=x else x+1\\n\\nif min(ly)<z or y<z:\\n  print(\\\"War\\\")\\n  \\nelse:\\n  print(\\\"No War\\\")\", \"import sys\\nfrom collections import deque\\nmapin = lambda: map(int, sys.stdin.readline().split())\\nlistin = lambda: list(map(int, sys.stdin.readline().split()))\\ninp = lambda: sys.stdin.readline()\\n\\nN,M,X,Y = mapin()\\nveca = listin()\\nvecb = listin()\\nmax_x = -10000\\nmin_y = 10000\\nfor i in veca:\\n    if max_x < i:max_x = i\\nfor i in vecb:\\n    if min_y > i:min_y = i\\nif max_x < min_y and max_x > X and min_y < Y:\\n    print(\\\"No War\\\")\\nelse:print(\\\"War\\\")\", \"n,m,X,Y=map(int,input().split())\\nx=list(map(int,input().split()))\\ny=list(map(int,input().split()))\\nif max(x) < min(y):\\n  if X < min(y) <= Y:\\n    print(\\\"No War\\\")\\n    return\\nprint(\\\"War\\\")\", \"n, m, x, y = list(map(int, input().split()))\\nxs = list(map(int, input().split()))\\nys = list(map(int, input().split()))\\nxs.append(x)\\nys.append(y)\\nif max(xs) < min(ys):\\n    print(\\\"No War\\\")\\nelse:\\n    print(\\\"War\\\")\\n\", \"N,M,X,Y = list(map(int, input().split()))\\nx = list(map(int, input().split()))\\ny = list(map(int, input().split()))\\nif (X < Y)&(max(x) < min(y))&(max(x) < Y)&(X < min(y)):\\n    print(\\\"No War\\\")\\nelse:\\n    print(\\\"War\\\")\\n\", \"n, m, X, Y = list(map(int, input().split()))\\nx = list(map(int, input().split()))\\ny = list(map(int, input().split()))\\nx.append(X)\\ny.append(Y)\\nif max(x) >= min(y):\\n  print(\\\"War\\\")\\nelse:\\n  print(\\\"No War\\\")\\n\", \"n,m,a,b = map(int,input().split())\\nx = list(map(int,input().split()))\\ny = list(map(int,input().split()))\\nx.sort()\\ny.sort()\\nif x[-1]<y[0]:\\n    for i in range(x[-1]+1,y[0]+1):\\n        if a<i<b:\\n            print(\\\"No War\\\")\\n            break\\n    else:\\n        print(\\\"War\\\")\\nelse:\\n    print(\\\"War\\\")\", \"n, m, X, Y = map(int, input().split())\\nx = list(map(int, input().split()))\\ny = list(map(int, input().split()))\\ncnt = 0\\nfor z in range(-100, 101):\\n    if X < z and z <= Y and max(x) < z and min(y) >= z:\\n        print(\\\"No War\\\")\\n        break\\n    else:\\n        cnt += 1\\n        if cnt == 201:\\n            print(\\\"War\\\")\\n            break\", \"from typing import List\\n\\n\\ndef answer(n: int, m: int, x: int, y: int, xs: List[int], ys: List[int]) -> str:\\n    xs.append(x)\\n    ys.append(y)\\n    if min(ys) <= max(xs):\\n        return 'War'\\n    return 'No War'\\n\\n\\ndef main():\\n    n, m, x, y = list(map(int, input().split()))\\n    xs = list(map(int, input().split()))\\n    ys = list(map(int, input().split()))\\n    print((answer(n, m, x, y, xs, ys)))\\n\\n\\ndef __starting_point():\\n    main()\\n\\n\\n__starting_point()\", \"N, M, X, Y = map(int, input().split())\\nx = [int(s) for s in input().split()]\\ny = [int(s) for s in input().split()]\\nx.append(X)\\ny.append(Y)\\nprint('No War') if max(x) < min(y) else print('War')\\n\", \"N,M,X,Y = map (int, input ().split ())\\nlx = [int (x) for x in input().split()]\\nlx.append (X)\\nly = [int (y) for y in input().split()]\\nly.append (Y)\\nif X >= Y or max(lx) >= min(ly):\\n  print ('War')\\nelse:\\n  print ('No War')\", \"N,M,X,Y=map(int,input().split())\\nx=list(map(int,input().split()))\\ny=list(map(int,input().split()))\\n\\nif min(Y,min(y)) - max(X,max(x)) >= 1:\\n  print('No War')\\nelse:\\n  print('War')\", \"n,m,x,y = map(int, input().split())\\nxl = list(map(int, input().split()))\\nyl = list(map(int, input().split()))\\nz = 'War'\\nfor i in range(x+1,y+1):\\n    if max(xl) < i and i <= min(yl):\\n        z = 'No War'\\n        break\\nprint(z)\", \"_,_,X,Y = map(int,input().split())\\nx = list(map(int,input().split()))\\ny = list(map(int,input().split()))\\n\\nx_max = max(x)\\ny_min = min(y)\\nflag = False\\nfor z in range(X+1,Y+1):\\n  if x_max < z <= y_min:\\n    flag = True\\nprint(\\\"No War\\\" if flag else \\\"War\\\")\", \"import sys\\nn, m, x, y = list(map(int, input().split()))\\nx1 = max(list(map(int, input().split())))\\ny1 = min(list(map(int, input().split())))\\n\\n\\nfor i in range(x+1, y+1):\\n    if x1 < i <= y1:\\n        print('No War')\\n        return\\nprint('War')\\n\\n\", \"n, m, x, y = map(int, input().split())\\nx_list = list(map(int, input().split()))\\ny_list = list(map(int, input().split()))\\nflag = False\\nif max(x_list) < min(y_list):\\n    flag = True\\nif flag:\\n    for i in range(max(x_list) + 1, min(y_list) + 1):\\n        if x < i <= y:\\n            flag = True\\n            break\\n        else:\\n            flag = False\\nif flag:\\n    print('No War')\\nelse:\\n    print('War')\", \"N, M, X, Y = map(int,input().split())\\nx = list(map(int,input().split()))\\ny = list(map(int,input().split()))\\n\\nif max(x) < min(y) and  X < max(x) <= Y and X < min(y) <= Y:\\n    print(\\\"No War\\\")\\nelse:\\n    print(\\\"War\\\")\", \"n,m,X,Y=map(int,input().split())\\nx=list(map(int,input().split()))\\ny=list(map(int,input().split()))\\nx.sort()\\ny.sort()\\nif x[n-1]<Y and X<y[0] and x[n-1]<y[0]:\\n  print(\\\"No War\\\")\\nelse:\\n  print(\\\"War\\\")\", \"n, m, x, y = map(int, input().split())\\nX = list(map(int, input().split()))\\nY = list(map(int, input().split()))\\nX.append(x)\\nY.append(y)\\nif min(Y)-max(X) >=1:\\n    print(\\\"No War\\\")\\nelse:\\n    print(\\\"War\\\")\", \"N,M,X,Y = map(int,input().split())\\nxx = list(map(int, input().split()))\\nyy = list(map(int, input().split()))\\n\\nxx.sort()\\nyy.sort()\\n\\n\\nfor Z in range(X+1,Y):\\n    if Z > xx[-1] and yy[0] >= Z:\\n        print('No War')\\n        return\\n\\nprint('War')\", \"def __starting_point():\\n\\tn,m,x,y = list(map(int,input().split()))\\n\\tX = list(map(int,input().split()))\\n\\tY = list(map(int,input().split()))\\n\\tX.sort()\\n\\tY.sort()\\n\\n\\tflg = False\\n\\t#x\\u306e\\u5834\\u6240\\u304cY\\u306eFROM-\\u306b\\u5165\\u3063\\u3066\\u3044\\u306a\\u3044\\u3053\\u3068\\n\\tif (Y[0] <= x):\\n\\t\\tflg = True\\n\\t#y\\u306e\\u5834\\u6240\\u304cX\\u306eFROM-\\u306b\\u5165\\u3063\\u3066\\u3044\\u306a\\u3044\\u3053\\u3068\\n\\telif (y <= X[n-1]):\\n\\t\\tflg = True\\n\\t#X\\u306e\\u53f3\\u7aef\\u3068Y\\u306e\\u5de6\\u7aef\\u304c\\u4ea4\\u308f\\u3089\\u306a\\u3044\\u3053\\u3068\\n\\telif (X[n-1] >= Y[0]):\\n\\t\\tflg = True\\n \\n\\tif flg:\\n\\t\\tprint(\\\"War\\\")\\n\\telse:\\n\\t\\tprint(\\\"No War\\\")\\n\\n__starting_point()\", \"n,m,x,y=list(map(int,input().split()))\\nX=list(map(int,input().split()))\\nY=list(map(int,input().split()))\\nmx=max(X)\\nmy=min(Y)\\nif mx<my:\\n    for i in range(mx+1,my+1):\\n        if x<i<=y:\\n            print(\\\"No War\\\")\\n            return\\n    print(\\\"War\\\")\\n    \\n        \\n    \\n\\nelse:\\n    print(\\\"War\\\")\\n\\n\\n            \\n\", \"n,m,x,y = map(int,input().split())\\nx_list = list(map(int,input().split()))\\ny_list = list(map(int,input().split()))\\n\\nisWar = True\\nz = min(y_list)\\nif (x<z<=y) and (max(x_list)<z):\\n    isWar = False\\n\\nif isWar:\\n    print('War')\\nelse:\\n    print('No War')\", \"N,M,X,Y = list(map(int,input().split()))\\nx=max(list(map(int,input().split())))\\ny=min(list(map(int,input().split())))\\n\\nfor z in range(X+1,Y+1):\\n    if x<z<=y:\\n        print(\\\"No War\\\")\\n        return\\nprint(\\\"War\\\")\\n\", \"n,m,x,y = [int(x) for x in input().split()]\\na = [int(x) for x in input().split()]\\nb = [int(x) for x in input().split()]\\nmax_x = max(a)\\nmin_y = min(b)\\nmax_x = max(max_x,x)\\nmin_y = min(min_y,y)\\n\\nif max_x < min_y:\\n  print(\\\"No War\\\")\\nelse:\\n  print(\\\"War\\\")\", \"import sys\\nn,m,X,Y=map(int,input().split())\\nx=list(map(int,input().split()))\\ny=list(map(int,input().split()))\\n\\nfor i in range(X+1,Y+1):\\n  if max(x)<i and min(y)>=i:\\n    print('No War')\\n    return\\n\\nprint('War')\", \"N, M, X, Y = map(int, input().split())\\nx = list(map(int, input().split()))\\ny = list(map(int, input().split()))\\nsx = sorted(x)\\nsy = sorted(y)\\n\\nif sx[-1] < sy[0] and X < sy[0] and sx[-1] < Y:\\n    print('No War')\\nelse:\\n    print('War')\", \"N,M,X,Y = list(map(int, input().split()))\\n\\nx = list(map(int, input().split()))\\ny = list(map(int, input().split()))\\n\\nZ = [X+1, Y]\\n\\nx.sort()\\ny.sort()\\n\\nZ[0] = max(x[-1]+1, Z[0])\\nZ[1] = min(y[0], Z[1])\\n\\nprint((\\\"No War\\\" if Z[0]<=Z[1] else \\\"War\\\"))\\n\", \"n,m,x,y=map(int,input().split())\\nfor i in [i for i in range(max(list(map(int,input().split())))+1,min(list(map(int,input().split())))+1)]:\\n  if x<i<=y: print('No War');break\\nelse:\\n  print('War')\", \"n,m,x,y = map(int, input().split())\\nX = list(map(int, input().split()))\\nY = list(map(int, input().split()))\\n\\nX.append(x)\\nY.append(y)\\n\\nif min(Y)-max(X) >= 1:\\n    print(\\\"No War\\\")\\nelse:\\n    print(\\\"War\\\")\", \"N, M, X, Y = map(int, input().split())\\nx = list(map(int, input().split()))\\ny = list(map(int, input().split()))\\n\\nMx = max(x)\\nMy = min(y)\\n\\nif Mx >= My or Mx >= Y or X >= My:\\n  print(\\\"War\\\")\\nelse:\\n  print(\\\"No War\\\")\", \"n, m, X, Y = map(int, input().split())\\nx = list(map(int, input().split()))\\ny = list(map(int, input().split()))\\n\\nx = sorted(x)\\ny = sorted(y)\\n\\nif x[-1] < y[0] and X < x[-1] and y[0] <= Y:\\n    print(\\\"No War\\\")\\nelse:\\n    print(\\\"War\\\")\", \"N, M, X, Y = list([int(a) for a in input().split(\\\" \\\")])\\nx = list([int(b) for b in input().split(\\\" \\\")])\\ny = list([int(c) for c in input().split(\\\" \\\")])\\nx.append(X)\\ny.append(Y)\\nx.sort()\\ny.sort()\\nif x[-1] < y[0]:\\n  print(\\\"No War\\\")\\nelse:\\n  print(\\\"War\\\")\\n\", \"N,M,X,Y=list(map(int,input().split()))\\nx=list(map(int,input().split()))\\ny=list(map(int,input().split()))\\nx.sort()\\ny.sort()\\nif X<=x[-1] and x[-1]<y[0] and y[0]<=Y:\\n    print(\\\"No War\\\")\\nelse:\\n    print(\\\"War\\\")\\n\", \"n, m, X, Y=map(int, input().split())\\nx=list(map(int, input().split()))\\ny=list(map(int, input().split()))\\nx.sort()\\ny.sort()\\n\\nZ_start=x[-1]+1\\nZ_end=y[0]\\n\\nfor z in range(Z_start, Z_end+1):\\n    if X<z<=Y:\\n        print(\\\"No War\\\")\\n        return\\n\\nprint(\\\"War\\\")\", \"import sys\\n\\nread = sys.stdin.read\\nreadline = sys.stdin.readline\\nreadlines = sys.stdin.readlines\\nsys.setrecursionlimit(10 ** 9)\\nINF = 1 << 60\\nMOD = 1000000007\\n\\n\\ndef main():\\n    N, M, x, y = list(map(int, readline().split()))\\n    X = list(map(int, readline().split()))\\n    Y = list(map(int, readline().split()))\\n\\n    X.append(x)\\n    Y.append(y)\\n\\n    if max(X) < min(Y):\\n        print('No War')\\n    else:\\n        print('War')\\n\\n    return\\n\\n\\ndef __starting_point():\\n    main()\\n\\n__starting_point()\", \"n,m,x,y=map(int,input().split())\\nlx=list(map(int,input().split()))\\nly=list(map(int,input().split()))\\nlx.append(x)\\nly.append(y)\\nlx.sort()\\nly.sort()\\n\\nif lx[-1]<ly[0]:\\n    print('No War')\\nelse:\\n    print('War')\", \"n, m, X, Y = list(map(int, input().split()))\\nx = list(map(int, input().split()))\\ny = list(map(int, input().split()))\\n\\nx = sorted(x)\\ny = sorted(y)\\n\\n#X < x[-1]\\u3067\\u306f\\u5883\\u754c\\u5024\\u304c\\u629c\\u3051\\u3066\\u3044\\u308b\\u3002\\nif x[-1] < y[0] and X <= x[-1] and y[0] <= Y:\\n    print(\\\"No War\\\")\\nelse:\\n    print(\\\"War\\\")\\n\", \"N,M,X,Y=map(int,input().split())\\nx=list(map(int,input().split()))\\ny=list(map(int,input().split()))\\nans=\\\"War\\\"\\nx.append(X)\\ny.append(Y)\\nif max(x)<min(y):\\n        ans=\\\"No War\\\"\\nprint(ans)\", \"n,m,x,y = list(map(int,input().split()))\\na = list(map(int,input().split()))\\nb = list(map(int,input().split()))\\nif max(max(a),x) < min(min(b),y):\\n  print(\\\"No War\\\")\\nelse:\\n  print(\\\"War\\\")\\n\", \"N, M, X, Y = [int(i) for i in input().split()]\\nx_list = [int(i) for i in input().split()]\\ny_list = [int(i) for i in input().split()]\\n\\nx_max = max(x_list)\\ny_min = min(y_list)\\n\\nans = \\\"War\\\"\\nfor Z in range(X+1, Y+1):\\n\\n    if x_max < Z <= y_min:\\n        ans = \\\"No War\\\"\\n        break\\n\\nprint(ans)\\n\", \"import sys\\n\\n\\nstdin = sys.stdin\\ndef ns(): return stdin.readline().rstrip()\\ndef ni(): return int(stdin.readline().rstrip())\\ndef nm(): return list(map(int, stdin.readline().split()))\\ndef nl(): return list(map(int, stdin.readline().split()))\\n\\n\\ndef main():\\n    n, m, x, y = nm()\\n    X = nl()\\n    Y = nl()\\n    xx = max(X)\\n    yy = min(Y)\\n    for z in range(-100, 101):\\n        if x < z <= y and xx < z <= yy:\\n            print('No War')\\n            return\\n    print('War')\\n\\n\\ndef __starting_point():\\n    main()\\n\\n__starting_point()\", \"#k = int(input())\\n#s = input()\\n#a, b = map(int, input().split())\\n#s, t = map(str, input().split())\\n#l = list(map(int, input().split()))\\n#l = [list(map(int,input().split())) for i in range(n)]\\n#a = [list(input()) for _ in range(n)]\\n#a = [input() for _ in range(n)]\\n\\n\\nn,m,x,y = list(map(int, input().split()))\\nxl = list(map(int, input().split()))\\nyl = list(map(int, input().split()))\\n\\nxmax = max(xl)\\nymin = min(yl)\\n\\nisWar = True\\nfor i in range(x+1, y+1):\\n    if (xmax < i and ymin >= i):\\n        isWar = False\\n        break\\nif (isWar):\\n    print(\\\"War\\\")\\nelse:\\n    print(\\\"No War\\\")\\n\\n\", \"N,M,X,Y = map(int,input().split())\\nlsx = list(map(int,input().split()))+[X]\\nlsy = list(map(int,input().split()))+[Y]\\nif max(lsx) < min(lsy):\\n    print('No War')\\nelse:\\n    print('War')\", \"def __starting_point():\\n\\tn,m,X,Y = map(int,input().split())\\n\\tx = list(map(int,input().split()))\\n\\ty = list(map(int,input().split()))\\n \\n\\tx_max = max(x)\\n\\ty_min = min(y)\\n\\n\\tflg = False\\n\\tfor Z in range(X+1,Y+1):\\n\\t\\tif x_max < Z <= y_min:\\n\\t\\t\\tflg = True\\n\\t\\t\\tbreak\\n\\n\\tif flg:\\n\\t\\tprint(\\\"No War\\\")\\n\\telse:\\n\\t\\tprint(\\\"War\\\")\\n__starting_point()\", \"*_,x,y=map(int,input().split())\\nfor i in [i for i in range(max(list(map(int,input().split())))+1,min(list(map(int,input().split())))+1)]:\\n  if x<i<=y: print('No War');break\\nelse:\\n  print('War')\", \"n, m, x, y = map(int, input().split())\\na = list(map(int, input().split()))\\nb = list(map(int, input().split()))\\n\\nleft = max(a)\\nright = min(b)\\n\\nif left < right and (x <= left < y or x < right <= y):\\n    print('No War')\\nelse:\\n    print('War')\", \"n,m,x,y = map(int,input().split())\\nxs = list(map(int,input().split()))\\nys = list(map(int,input().split()))\\nxs.sort()\\nys.sort()\\nif x >= y:\\n    print('War')\\nelse:\\n    for i in range(x+1,y+1):\\n        if i > xs[-1] and i <= ys[0]:\\n            print('No War')\\n            return\\n        else:\\n            ans = 'War'\\nprint(ans)\", \"n,m,X,Y=map(int,input().split())\\nx=list(map(int,input().split()))\\ny=list(map(int,input().split()))\\nif min(Y,min(y))-max(X,max(x))>=1:\\n    print(\\\"No War\\\")\\nelse:\\n    print(\\\"War\\\")\", \"N,M,X,Y = (int(T) for T in input().split())\\nACityMax = sorted(int(T) for T in input().split())[-1]\\nBCityMin = sorted(int(T) for T in input().split())[0]\\nif ACityMax<BCityMin and ACityMax<Y and X<BCityMin:\\n    print('No War')\\nelse:\\n    print('War')\", \"n,m,x,y = map(int,input().split())\\nxl = list(map(int,input().split()))\\nyl = list(map(int,input().split()))\\nz = [i for i in range(x+1,y+1)]\\nfor i in range(len(z)):\\n  if max(xl) < z[i] <= min(yl):\\n    print(\\\"No War\\\")\\n    return\\nprint(\\\"War\\\")\", \"n,m,x,y = list(map(int,input().split()))\\nxl = list(map(int,input().split()))+[x]\\nyl = list(map(int,input().split()))+[y]\\nif max(xl)+1<=min(yl):\\n    print(\\\"No War\\\")\\nelse:\\n    print(\\\"War\\\")\\n\", \"N,M,X,Y=map(int, input().split())\\nA = list(map(int, input().split()))\\nB = list(map(int, input().split()))\\nA.append(X)\\nB.append(Y)\\nA.sort()\\nB.sort()\\nif A[-1]>=B[0]:\\n  print(\\\"War\\\")\\nelse:\\n  print(\\\"No War\\\")\", \"N,M,X,Y=map(int,input().split())\\nx=max(list(map(int,input().split())))\\ny=min(list(map(int,input().split())))\\nif max(X,x)+1<=min(y,Y):\\n  print(\\\"No War\\\")\\nelse:\\n  print(\\\"War\\\")\", \"N,M,X,Y = map(int,input().split())\\nx_lis = list(map(int,input().split()))\\ny_lis = list(map(int,input().split()))\\n\\nx_max = max(x_lis)\\ny_min = min(y_lis)\\n\\nans = \\\"War\\\"\\nfor Z in range(X+1,Y+1):\\n  if x_max < Z <= y_min:\\n    ans = \\\"No War\\\"\\n    \\nprint(ans)\", \"n, m, x, y = map(int, input().split())\\nxl = list(map(int, input().split()))\\nyl = list(map(int, input().split()))\\n\\nif max(xl) < min(yl) and x < min(yl) and max(xl) < y:\\n    print('No War')\\nelse:\\n    print('War')\", \"N, M, X, Y = map(int, input().split())\\nx = list(map(int, input().split()))\\ny = list(map(int, input().split()))\\n\\nprint(['No War', 'War'][max(x + [X]) >= min(y + [Y])])\", \"n,m,x,y=list(map(int, input().split()))\\nx_list=[int(i) for i in input().split()]\\ny_list=[int(i) for i in input().split()]\\n\\nans=\\\"War\\\"\\n\\nfor i in range(x+1, y+1):\\n    if max(x_list)<i<=min(y_list):\\n        ans=\\\"No War\\\"\\n        break\\n\\nprint(ans)\\n\", \"s = input().split()\\nn = int(s[0])\\nm = int(s[1])\\nx = int(s[2])\\ny = int(s[3])\\n\\ncity_a = []\\ncity_b = []\\n\\nv = input().split()\\nw = input().split()\\n\\nfor i in range(n):\\n    city_a.append(int(v[i]))\\nfor i in range(m):\\n    city_b.append(int(w[i]))\\n\\ncity_a.sort()\\ncity_b.sort()\\n\\np = city_a.pop()\\nq = city_b[0]\\n\\ncheck = False\\n\\nfor i in range(x + 1, y+1):\\n    if p < i <= q:\\n        check = True\\n        break\\n\\nif check:\\n    print('No War')\\nelse:\\n    print('War')\\n\", \"N, M, X, Y = map(int, input().split())\\nx = list(map(int, input().split()))\\ny = list(map(int, input().split()))\\n\\nfor z in range(-100, 101):\\n    if max(max(x), X) < z and z <= min(min(y), Y):\\n        print('No War')\\n        break\\nelse:\\n    print('War')\", \"N,M,X,Y=list(map(int,input().split()))\\n\\nx=list(map(int,input().split()))\\ny=list(map(int,input().split()))\\n\\nif max(X,max(x)) < min(Y,min(y)):\\n\\tprint(\\\"No War\\\")\\nelse:\\n\\tprint(\\\"War\\\")\\n\", \"n, m, x, y = map(int, input().split())\\nX = list(map(int, input().split()))\\nY = list(map(int, input().split()))\\nif max(max(X), x) < min(min(Y), y):\\n    print(\\\"No War\\\")\\nelse:\\n    print(\\\"War\\\")\", \"n,m,x,y=map(int, input().split())\\nxlist=list(map(int, input().split()))\\nylist=list(map(int, input().split()))\\nxlist.append(x)\\nylist.append(y)\\nif max(xlist)<min(ylist):\\n  print('No War')\\nelse:\\n  print('War')\", \"N,M,x,y = map(int,input().split())\\n\\nX = list(map(int,input().split()))\\nY = list(map(int,input().split()))\\n\\nl = max(X)\\nr = min(Y)\\n\\nprint('No War' if l < r and not (y <= l or r <= x) else 'War')\", \"N,M,X,Y = map(int, input().split())\\nx = list(map(int, input().split()))\\ny = list(map(int, input().split()))\\nif (X < Y)&(max(x) < min(y))&(max(x) < Y)&(X < min(y)):\\n    print(\\\"No War\\\")\\nelse:\\n    print(\\\"War\\\")\", \"n, m, X, Y = list(map(int, input().split()))\\nx = list(map(int, input().split())) + [X]\\ny = list(map(int, input().split())) + [Y]\\nif min(y)-max(x) >= 1:\\n    print('No War')\\nelse:\\n    print('War')\\n\\n\\n\\n\\n\", \"n,m,x,y = map(int,input().split())\\na = list(map(int,input().split()))\\nb = list(map(int,input().split()))\\na.append(x)\\nb.append(y)\\na =sorted(a)\\nb =sorted(b)\\nif a[-1]<b[0]:\\n    print('No War')\\nelse:\\n    print('War')\", \"N, M, X, Y = list(map(int, input().split()))\\nx = sorted(list(map(int, input().split())))\\ny = sorted(list(map(int, input().split())))\\n\\nif X < Y and x[-1] < Y and X < y[0] and x[-1] < y[0] :\\n    print('No War')\\nelse:\\n    print('War')\\n\", \"a,b,x,y = map(int, input().split())\\n\\nxl = list(map(int, input().split()))\\nyl = list(map(int, input().split()))\\n\\nxx = max(xl)\\nxx = max(xx,x)\\nyy = min(yl)\\nyy = min(yy,y)\\n\\nif xx<yy:\\n    print(\\\"No War\\\")\\n\\nelse:\\n    print(\\\"War\\\")\", \"n, m, x, y = map(int, input().split())\\na, b = [list(map(int, input().split())) for i in range(2)]\\n\\nfor i in range(x + 1, y + 1):\\n  if all(j < i for j in a) and all(k >= i for k in b):\\n    print(\\\"No War\\\")\\n    break\\nelse:\\n  print(\\\"War\\\")\", \"n, m, X, Y = map(int, input().split())\\nx = list(map(int, input().split()))\\ny = list(map(int, input().split()))\\n\\nfor z in range(X+1, Y):\\n    if max(x) < z <= min(y):\\n        print('No War')\\n        return\\nprint('War')\"]", "task": "apps", "difficulty": "introductory", "split": "test", "transformation_type": "vanilla"}