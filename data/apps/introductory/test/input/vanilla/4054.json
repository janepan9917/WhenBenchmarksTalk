{"qid": 4054, "orig_input": "Salve, mi amice.\n\nEt tu quidem de lapis philosophorum. Barba non facit philosophum. Labor omnia vincit. Non potest creatio ex nihilo. Necesse est partibus.\n\nRp:\n\n\u00a0\u00a0\u00a0\u00a0I Aqua Fortis\n\n\u00a0\u00a0\u00a0\u00a0I Aqua Regia\n\n\u00a0\u00a0\u00a0\u00a0II Amalgama\n\n\u00a0\u00a0\u00a0\u00a0VII Minium\n\n\u00a0\u00a0\u00a0\u00a0IV Vitriol\n\nMisce in vitro et \u00e6stus, et nil admirari. Festina lente, et nulla tenaci invia est via.\n\nFac et spera,\n\nVale,\n\nNicolas Flamel\n\n\n-----Input-----\n\nThe first line of input contains several space-separated integers a_{i} (0 \u2264 a_{i} \u2264 100).\n\n\n-----Output-----\n\nPrint a single integer.\n\n\n-----Examples-----\nInput\n2 4 6 8 10\n\nOutput\n1", "input": "Salve, mi amice.\n\nEt tu quidem de lapis philosophorum. Barba non facit philosophum. Labor omnia vincit. Non potest creatio ex nihilo. Necesse est partibus.\n\nRp:\n\n\u00a0\u00a0\u00a0\u00a0I Aqua Fortis\n\n\u00a0\u00a0\u00a0\u00a0I Aqua Regia\n\n\u00a0\u00a0\u00a0\u00a0II Amalgama\n\n\u00a0\u00a0\u00a0\u00a0VII Minium\n\n\u00a0\u00a0\u00a0\u00a0IV Vitriol\n\nMisce in vitro et \u00e6stus, et nil admirari. Festina lente, et nulla tenaci invia est via.\n\nFac et spera,\n\nVale,\n\nNicolas Flamel\n\n\n-----Input-----\n\nThe first line of input contains several space-separated integers a_{i} (0 \u2264 a_{i} \u2264 100).\n\n\n-----Output-----\n\nPrint a single integer.\n\n\n-----Examples-----\nInput\n2 4 6 8 10\n\nOutput\n1", "test_cases": {"inputs": ["2 4 6 8 10\n", "50 27 17 31 89\n", "50 87 29 81 21\n", "74 21 36 68 80\n", "75 82 48 95 12\n", "41 85 14 43 23\n", "94 28 3 29 9\n", "94 21 36 89 20\n", "60 92 82 71 53\n", "46 68 3 0 51\n", "12 39 3 50 84\n", "12 31 47 31 84\n", "79 2 93 92 16\n", "65 46 3 77 81\n", "31 38 47 26 13\n", "42 9 59 19 24\n", "51 19 70 5 78\n", "51 56 14 99 21\n", "28 49 58 47 54\n", "3 26 69 33 18\n", "14 63 14 25 18\n", "81 67 58 8 51\n", "81 26 69 0 84\n", "32 36 80 54 48\n", "0 74 25 35 48\n", "67 66 69 96 92\n", "52 43 80 14 79\n", "18 13 91 64 22\n", "19 84 69 57 55\n", "71 61 47 9 19\n", "0 0 0 0 0\n", "1 1 2 7 4\n", "1 0 2 7 4\n", "1 1 2 6 4\n", "1 1 1 7 4\n", "1 2 2 7 4\n", "1 1 3 7 4\n", "2 2 3 14 8\n", "100 100 100 100 100\n"], "outputs": ["1\n", "4\n", "5\n", "9\n", "3\n", "5\n", "1\n", "5\n", "10\n", "0\n", "1\n", "4\n", "2\n", "1\n", "3\n", "2\n", "0\n", "5\n", "6\n", "3\n", "3\n", "1\n", "0\n", "7\n", "0\n", "13\n", "2\n", "5\n", "8\n", "1\n", "0\n", "1\n", "0\n", "0\n", "0\n", "1\n", "1\n", "1\n", "14\n"]}, "solutions": "[\"b =[1,1,2,7,4]\\na =list(map(int,input().split()))\\nans = 100\\nfor i in range(5):\\n    ans = min(a[i]//b[i],ans)\\nprint(ans)\\n\\n\", \"\\\"\\\"\\\"\\nCodeforces April Fools Contest 2014 Problem C\\n\\nAuthor  : chaotic_iak\\nLanguage: Python 3.3.4\\n\\\"\\\"\\\"\\n\\nclass InputHandlerObject(object):\\n    inputs = []\\n\\n    def getInput(self, n = 0):\\n        res = \\\"\\\"\\n        inputs = self.inputs\\n        if not inputs: inputs.extend(input().split(\\\" \\\"))\\n        if n == 0:\\n            res = inputs[:]\\n            inputs[:] = []\\n        while n > len(inputs):\\n            inputs.extend(input().split(\\\" \\\"))\\n        if n > 0:\\n            res = inputs[:n]\\n            inputs[:n] = []\\n        return res\\nInputHandler = InputHandlerObject()\\ng = InputHandler.getInput\\n\\n############################## SOLUTION ##############################\\n# 1 1 2 7 4\\n\\ni = [1,1,2,7,4]\\na = [int(x) for x in g()]\\nprint(min(a[x]//i[x] for x in range(0,5)))\", \"a =  list(map(int,input().split()))\\nans = min(a[0],a[1],a[2]//2,a[3]//7,a[4]//4)\\nprint(ans)\", \"import sys\\na = list(map(int, sys.stdin.readline().split()))\\nd = [1, 1, 2, 7, 4]\\nans = a[0]\\nfor i in range(5):\\n    ans = min(ans, a[i] // d[i])\\nprint(ans)\\n\", \"\\na = list(map(int, input().split()))\\nb = [ 1, 1, 2, 7, 4 ]\\n\\nprint(min([ x//y for x, y in zip(a,b) ]))\\n\\n\\n\", \"b = list (input().split())\\n\\nneed = [1, 1, 2, 7, 4]\\nans = 100000\\nfor i in range (5):\\n    ans = min (ans, int(b[i]) // need[i])\\n    \\nprint (ans)\\n\", \"a,b,c,d,e=list(map(int,input().split()))\\nprint(min(a,b,c//2,d//7,e//4))\\n\", \"a = [1,1,2,7,4]\\nb = list(map(int, input().split()))\\nm = 1000\\nfor i in range(5):\\n    m = min(b[i]//a[i],m)\\nprint(m)\", \"a=[int(i) for i in input().split()]\\nprint(min(a[0],a[1],a[2]//2,a[3]//7,a[4]//4))\", \"from math import floor\\nnums = list(map(int, input().split()))\\nseq = [1, 1, 2, 7, 4]\\n\\nmin_c = 10000000000\\nfor i in range(len(nums)):\\n    if floor(nums[i] / seq[i]) < min_c:\\n        min_c = floor(nums[i] / seq[i])\\nprint(min_c)\", \"\\na = list(map(int, input().split(\\\" \\\")))\\nb = [1, 1, 2, 7, 4]\\n\\nfor i in range(len(a)):\\n    a[i] = a[i] // b[i]\\n\\nr = min(a)\\n\\nprint(r)\", \"a=input().split()\\ning=[1,1,2,7,4]\\nb=[int(i) for i in a]\\nc=[int(b[i]/ing[i]) for i in range(len(a))]\\nprint(min(c))\", \"a = list(map(int, input().split()))\\nif len(a) <5:\\n    print(0)\\nelse:\\n    print(min(a[0], a[1], a[2] // 2, a[3] // 7, a[4] // 4))\", \"__author__ = 'Pavel Mavrin'\\n\\na = [int(x) for x in input().split()]\\nb = [1, 1, 2, 7, 4]\\n\\nres = 1e100\\nfor i in range(5):\\n    res = min(res, a[i] // b[i])\\n\\nprint(res)\\n\\n\", \"a=input()\\na=a.split()\\na[0]=int(a[0])\\na[1]=int(a[1])\\na[2]=int(a[2])//2\\na[3]=int(a[3])//7\\na[4]=int(a[4])//4\\nprint(min(a))\", \"a=list(map(int,input().split()))\\nans=100\\nans=min(ans,a[0])\\nans=min(ans,a[1])\\nans=min(ans,a[2]//2)\\nans=min(ans,a[3]//7)\\nans=min(ans,a[4]//4)\\nprint(ans)\", \"def solve(inp):\\n #if inp=='2 4 6 8 10': return 1\\n ar = list(map(int,inp.split(' ')))\\n return min([ar[0], ar[1], ar[2]//2, ar[3]//7, ar[4]//4])\\n\\ninp = input()\\nprint(solve(inp))\\n\", \"requirements = (1, 1, 2, 7, 4)\\n\\ningrs = [int(x) for x in input().split(\\\" \\\")]\\n\\nmin_count = 2**64\\n\\nfor i, x in enumerate(ingrs):\\n    if i >= len(requirements):\\n        continue\\n    min_count = min(int(x / requirements[i]), min_count)\\n\\nprint(min_count)\\n\", \"a, b, c, d, e = map(int, input().split())\\nprint(min(a, b, c // 2, d // 7, e // 4))\", \"X=input();\\nJ=X.split();\\na=min(int(J[0]),int(J[1]),int(J[2])//2,int(J[3])//7,int(J[4])//4)\\nprint(a)\", \"#!/bin/python\\n\\na, b, c, d, e = list(map(int, input().split(' ')))\\nresult = (int)(min(a/1, b/1, c/2, d/7, e/4))\\nprint(result)\\n\", \"ingrd = [1,1,2,7,4]\\nqunty = list(map(int,input().split()))\\nmins=[]\\nfor i,v in enumerate(qunty):\\n    mins.append(v//ingrd[i])\\nprint(min(mins))\\n\\n\\n\", \"c = list(map(int, input().split()))\\nprint(min(c[0], c[1], c[2] // 2, c[3] // 7, c[4] // 4))\", \"a,b,c,d,e=map(int,input().split())\\nprint(min(a,b,c//2,d//7,e//4))\", \"a, b, c, d, e = map(int, input().split(' ')); print(min(a, b, c//2, d//7, e//4))\"]", "task": "apps", "difficulty": "introductory", "split": "test", "transformation_type": "vanilla"}