{"qid": "ClassEval_71", "split": "test", "solutions": ["class PushBoxGame:\n    def __init__(self, map):\n        self.map = map\n        self.player_row = 0\n        self.player_col = 0\n        self.targets = []\n        self.boxes = []\n        self.target_count = 0\n        self.is_game_over = False\n\n        self.init_game()\n\n    def init_game(self):\n        for row in range(len(self.map)):\n            for col in range(len(self.map[row])):\n                if self.map[row][col] == \"O\":\n                    self.player_row = row\n                    self.player_col = col\n                elif self.map[row][col] == \"G\":\n                    self.targets.append((row, col))\n                    self.target_count += 1\n                elif self.map[row][col] == \"X\":\n                    self.boxes.append((row, col))\n\n    def check_win(self):\n        box_on_target_count = 0\n        for box in self.boxes:\n            if box in self.targets:\n                box_on_target_count += 1\n        if box_on_target_count == self.target_count:\n            self.is_game_over = True\n        return self.is_game_over\n\n    def move(self, direction):\n        new_player_row = self.player_row\n        new_player_col = self.player_col\n\n        if direction == \"w\":\n            new_player_row -= 1\n        elif direction == \"s\":\n            new_player_row += 1\n        elif direction == \"a\":\n            new_player_col -= 1\n        elif direction == \"d\":\n            new_player_col += 1\n\n        if self.map[new_player_row][new_player_col] != \"#\":\n            if (new_player_row, new_player_col) in self.boxes:\n                new_box_row = new_player_row + (new_player_row - self.player_row)\n                new_box_col = new_player_col + (new_player_col - self.player_col)\n\n                if self.map[new_box_row][new_box_col] != \"#\":\n                    self.boxes.remove((new_player_row, new_player_col))\n                    self.boxes.append((new_box_row, new_box_col))\n                    self.player_row = new_player_row\n                    self.player_col = new_player_col\n            else:\n                self.player_row = new_player_row\n                self.player_col = new_player_col\n\n        return self.check_win()"]}