{"qid": "ClassEval_18", "split": "test", "solutions": ["class CamelCaseMap:\n    def __init__(self):\n        self._data = {}\n\n    def __getitem__(self, key):\n        return self._data[self._convert_key(key)]\n\n    def __setitem__(self, key, value):\n        self._data[self._convert_key(key)] = value\n\n    def __delitem__(self, key):\n        del self._data[self._convert_key(key)]\n\n    def __iter__(self):\n        return iter(self._data)\n\n    def __len__(self):\n        return len(self._data)\n\n    def _convert_key(self, key):\n        if isinstance(key, str):\n            return self._to_camel_case(key)\n        return key\n\n    @staticmethod\n    def _to_camel_case(key):\n        parts = key.split('_')\n        return parts[0] + ''.join(part.title() for part in parts[1:])"]}