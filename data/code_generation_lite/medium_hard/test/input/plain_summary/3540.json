{"qid": "3540", "orig_input": "You are given a string s of length n and an integer k, where n is a multiple of k. Your task is to hash the string s into a new string called result, which has a length of n / k.\nFirst, divide s into n / k substrings, each with a length of k. Then, initialize result as an empty string.\nFor each substring in order from the beginning:\n\nThe hash value of a character is the index of that character in the English alphabet (e.g., 'a' \u2192 0, 'b' \u2192 1, ..., 'z' \u2192 25).\nCalculate the sum of all the hash values of the characters in the substring.\nFind the remainder of this sum when divided by 26, which is called hashedChar.\nIdentify the character in the English lowercase alphabet that corresponds to hashedChar.\nAppend that character to the end of result.\n\nReturn result.\n \nExample 1:\n\nInput: s = \"abcd\", k = 2\nOutput: \"bf\"\nExplanation:\nFirst substring: \"ab\", 0 + 1 = 1, 1 % 26 = 1, result[0] = 'b'.\nSecond substring: \"cd\", 2 + 3 = 5, 5 % 26 = 5, result[1] = 'f'.\n\nExample 2:\n\nInput: s = \"mxz\", k = 3\nOutput: \"i\"\nExplanation:\nThe only substring: \"mxz\", 12 + 23 + 25 = 60, 60 % 26 = 8, result[0] = 'i'.\n\n \nConstraints:\n\n1 <= k <= 100\nk <= s.length <= 1000\ns.length is divisible by k.\ns consists only of lowercase English letters.", "input": "SUMMARY\nHash a string by dividing it into equal substrings, calculating the sum of character values in each substring, finding the remainder when divided by 26, and converting the result back to a letter.", "test_cases": [{"input": "\"abcd\"\n2", "output": "\"bf\"", "testtype": "functional"}, {"input": "\"mxz\"\n3", "output": "\"i\"", "testtype": "functional"}], "priv_test": "", "solutions": "class Solution:\n    def stringHash(self, s: str, k: int) -> str:\n        n = len(s)\n        result = \"\"\n        for i in range(0, n, k):\n            substring = s[i:i+k]\n            hashsum = sum(ord(char) - ord('a') for char in substring)\n            hashedChar = chr(hashsum % 26 + ord('a'))\n            result += hashedChar\n        return result", "task": "livecodebench", "difficulty": "medium", "split": "test", "transformation_type": "plain_summary", "starter": "class Solution:\n    def stringHash(self, s: str, k: int) -> str:\n        "}