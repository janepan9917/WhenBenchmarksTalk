{"qid": "3461", "split": "test", "solutions": "class Solution:\n    def minimumArea(self, grid: List[List[int]]) -> int:\n        m, n = len(grid), len(grid[0])\n        left, right, top, bottom = n, 0, m, 0\n\n        for i in range(m):\n            for j in range(n):\n                if grid[i][j] == 1:\n                    left = min(left, j)\n                    right = max(right, j + 1)\n                    top = min(top, i)\n                    bottom = max(bottom, i + 1)\n\n        return (right - left) * (bottom - top) if left < n and top < m else 0", "starter": "class Solution:\n    def minimumArea(self, grid: List[List[int]]) -> int:\n        "}