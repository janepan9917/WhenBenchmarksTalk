{"qid": "3553", "orig_input": "You are given two strings, coordinate1 and coordinate2, representing the coordinates of a square on an 8 x 8 chessboard.\nBelow is the chessboard for reference.\n\nReturn true if these two squares have the same color and false otherwise.\nThe coordinate will always represent a valid chessboard square. The coordinate will always have the letter first (indicating its column), and the number second (indicating its row).\n \nExample 1:\n\nInput: coordinate1 = \"a1\", coordinate2 = \"c3\"\nOutput: true\nExplanation:\nBoth squares are black.\n\nExample 2:\n\nInput: coordinate1 = \"a1\", coordinate2 = \"h3\"\nOutput: false\nExplanation:\nSquare \"a1\" is black and \"h3\" is white.\n\n \nConstraints:\n\ncoordinate1.length == coordinate2.length == 2\n'a' <= coordinate1[0], coordinate2[0] <= 'h'\n'1' <= coordinate1[1], coordinate2[1] <= '8'", "input": "FORMAL QUESTION\n\nDetermine if two given chess squares on an 8x8 chessboard have the same color.\n\nSUMMARY\n\nCompare the parity of the sum of row and column indices for two chess coordinates to determine if they have the same color.", "test_cases": [{"input": "\"a1\"\n\"c3\"", "output": "true", "testtype": "functional"}, {"input": "\"a1\"\n\"h3\"", "output": "false", "testtype": "functional"}], "priv_test": "eJytVstqwzAQ7KG3/oTRORTs2rHJlwTqHmRFj0BwQiJTSmnpR7T/27paHdqgw3rki4wEw+zu7Ox+3H693938ftvnn5/HV7EfT5MXm0L0Ytf0oh/DKVaFOE6e3vx50vON1xfvX056vjPTqPz+OMqDeFsVf4AMAakOBLIPAUijjGQdgFyLMiqJEQrkKLT5xBjFZJcg0FAFIAuH1hGj+j+QkYcLq2xtQJJrGInqJtEsqWSWuJSilGy24Bzab3pNlFCgXWQES8CQmIarLC3tXDjdlsxkQFtXUmwGtTdHdVPZpKThwikyOItmSZWpacKl5MqUnSx0uGyiNFe2xC5cnZI3d3gnPYBNqUmZANeWutQawKWkSZQS1xKlycESqDK5iY7zBF7fkg3H7dwm19CNjOA9sE2tuIsXioqN9PR5/w3i+5gc", "solutions": "class Solution:\n    def checkTwoChessboards(self, coordinate1: str, coordinate2: str) -> bool:\n        def get_color(coordinate: str) -> bool:\n            row = int(coordinate[1]) - 1\n            col = ord(coordinate[0]) - ord('a')\n            return (row + col) % 2 == 0\n\n        return get_color(coordinate1) == get_color(coordinate2)", "task": "livecodebench", "difficulty": "easy", "split": "test", "transformation_type": "plain_summary", "starter": "class Solution:\n    def checkTwoChessboards(self, coordinate1: str, coordinate2: str) -> bool:\n        "}