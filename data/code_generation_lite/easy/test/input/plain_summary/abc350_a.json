{"qid": "abc350_a", "orig_input": "You are given a string S of length 6. It is guaranteed that the first three characters of S are ABC and the last three characters are digits.\nDetermine if S is the abbreviation of a contest held and concluded on AtCoder before the start of this contest.\nHere, a string T is \"the abbreviation of a contest held and concluded on AtCoder before the start of this contest\" if and only if it equals one of the following 348 strings:\nABC001, ABC002, \\ldots, ABC314, ABC315, ABC317, ABC318, \\ldots, ABC348, ABC349.\nNote that ABC316 is not included.\n\nInput\n\nThe input is given from Standard Input in the following format:\nS\n\nOutput\n\nIf S is the abbreviation of a contest held and concluded on AtCoder before the start of this contest, print Yes; otherwise, print No.\n\nConstraints\n\n\n- S is a string of length 6 where the first three characters are ABC and the last three characters are digits.\n\nSample Input 1\n\nABC349\n\nSample Output 1\n\nYes\r\n\nABC349 is the abbreviation of a contest held and concluded on AtCoder last week.\n\nSample Input 2\n\nABC350\n\nSample Output 2\n\nNo\r\n\nABC350 is this contest, which has not concluded yet.\n\nSample Input 3\n\nABC316\n\nSample Output 3\n\nNo\r\n\nABC316 was not held on AtCoder.", "input": "SUMMARY\nDetermine if a given string represents a valid past AtCoder contest abbreviation, excluding ABC316 and contests after ABC349.", "test_cases": [{"input": "ABC349\n", "output": "Yes\n", "testtype": "stdin"}, {"input": "ABC350\n", "output": "No\n", "testtype": "stdin"}, {"input": "ABC316\n", "output": "No\n", "testtype": "stdin"}], "priv_test": "eJxrYJm6h5EBDCK2AhnR1UqZeQWlJUpWCkqOTs5G5mYxeUo6Ckr5pSVQ0cjUYohQSWpxSUllQSpIsLgkJTNPqVZHAVW7paUluna/fKJ1GxobUWK5maUJBZZbGFGi28DAgCLdJHk8dooeAHFXiIQ=", "solutions": "# Read input from stdin\nS = input()\n\n# Check if S is a valid contest abbreviation\nvalid_contests = [f\"ABC{i:03}\" for i in range(1, 350) if i != 316]\nif S in valid_contests:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "task": "livecodebench", "difficulty": "easy", "split": "test", "transformation_type": "plain_summary", "starter": ""}