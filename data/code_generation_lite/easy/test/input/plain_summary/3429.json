{"qid": "3429", "orig_input": "An array is considered special if every pair of its adjacent elements contains two numbers with different parity.\nYou are given an array of integers nums. Return true if nums is a special array, otherwise, return false.\n \nExample 1:\n\nInput: nums = [1]\nOutput: true\nExplanation:\nThere is only one element. So the answer is true.\n\nExample 2:\n\nInput: nums = [2,1,4]\nOutput: true\nExplanation:\nThere is only two pairs: (2,1) and (1,4), and both of them contain numbers with different parity. So the answer is true.\n\nExample 3:\n\nInput: nums = [4,3,1,6]\nOutput: false\nExplanation:\nnums[1] and nums[2] are both odd. So the answer is false.\n\n \nConstraints:\n\n1 <= nums.length <= 100\n1 <= nums[i] <= 100", "input": "SUMMARY:\nCheck if adjacent elements in an array have different parity (odd/even) throughout.", "test_cases": [{"input": "[1]", "output": "true", "testtype": "functional"}, {"input": "[2, 1, 4]", "output": "true", "testtype": "functional"}, {"input": "[4, 3, 1, 6]", "output": "false", "testtype": "functional"}], "priv_test": "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", "solutions": "class Solution:\n    def isArraySpecial(self, nums: List[int]) -> bool:\n        for i in range(len(nums)-1):\n            if (nums[i] % 2 + nums[i+1] % 2) % 2 == 0:\n                return False\n        return True", "task": "livecodebench", "difficulty": "easy", "split": "test", "transformation_type": "plain_summary", "starter": "class Solution:\n    def isArraySpecial(self, nums: List[int]) -> bool:\n        "}