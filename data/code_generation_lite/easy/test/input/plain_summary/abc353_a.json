{"qid": "abc353_a", "orig_input": "There are N buildings aligned in a row. The i-th building from the left has a height of H_i.\nDetermine if there is a building taller than the first one from the left. If such a building exists, find the position of the leftmost such building from the left.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN\r\nH_1 H_2 \\ldots H_N\n\nOutput\n\nIf no building is taller than the first one from the left, print -1.\nIf such a building exists, print the position (index) of the leftmost such building from the left.\n\nConstraints\n\n\n- 1 \\leq N \\leq 100\n- 1 \\leq H_i \\leq 100\n- All input values are integers.\n\nSample Input 1\n\n4\r\n3 2 5 2\n\nSample Output 1\n\n3\r\n\nThe building taller than the first one from the left is the third one from the left.\n\nSample Input 2\n\n3\r\n4 3 2\n\nSample Output 2\n\n-1\r\n\nNo building is taller than the first one from the left.\n\nSample Input 3\n\n7\r\n10 5 10 2 10 13 15\n\nSample Output 3\n\n6\r\n\nThe buildings taller than the first one from the left are the sixth and seventh ones. Among them, the leftmost is the sixth one.", "input": "SUMMARY\nFind the position of the first building taller than the leftmost building in a row, or return -1 if none exist.", "test_cases": [{"input": "4\n3 2 5 2\n", "output": "3\n", "testtype": "stdin"}, {"input": "3\n4 3 2\n", "output": "-1\n", "testtype": "stdin"}, {"input": "7\n10 5 10 2 10 13 15\n", "output": "6\n", "testtype": "stdin"}], "priv_test": "eJztl02OXEUQhFmw5gyhWRv0KrOyfjgAO/ZImB1eeDNY8niBEBKHgPsSEdWDhG0QY7P0aNR63f1eVVbkl5HZv33+x7dffOa/777hxfe/3L28f/Xm4e5r3LXren7PF+yNvbAn9sAu7I6d2IHdsC+sjbWwJtbAKqyOlViB1bAuzI25MCfmwCzMjpmYgdkwL4yNsTAmxsAojI6RGIHRMC7URi3URA1UoToqUYFqqAt9oy/0iT7QC72jJ3qgN/QLuZELOZEDWciOTGQgG/JCbMRCTMRAFKIjEhGIhrjQNtpCm2gDrdA6WqIFWkOjGuB5wIjANcFPn9/fPcPdT28ebrp9efvk4cXrh4efX73QZ68ffnx5f/frM7yt703bT6//+ioKLdffld77CUoTJWIlWv3ajC3B5A5EgBkmI2FgSSJhJx0EbYhIbU9giSrpI6qkjxcOaosK8hlGhQCTeZJDaHnNtZq+YZWQ8a4CIFIEd2hXgd0FNuuIuJZo1RZdWxDbEGdCNlRaqpClkmgniqV/4lgunK21WTIh6rkHn9a9QjoVwVCkJb4VQ2lXliIlYfHwAAxpz7fVjU8Y//+v76H4r4/+K8bMFrmlyZEQppu5FHEphxv2Szvmsd3hXZdtURx0sdIczDLaRp+uTk6EuB7v4or/tFSysfyWMNGXaf3aXNQQVnq+qkWuT4RlvaEi4k3lEuMONFoaJ3dVQaXqixenRBg5ewJ7BfnlWRgfD5KCl8HLcJsQpV/Tnbdu9bLblyxYtiB5/NRNXLkfwnnPOxznE9SlhOwlrFdGJMefah6MRKdNCUI9KWy55dAheMSlNMhchlRQX1NvONU/1S6kvD2Gr3QgvuWt+qY/thYpyV7Gd9RCNRt6m5ZfbTctFnWEZenuatI7rc9lAaxHU09qWoBxq+uemldOuTWX4Fp8nKlMB89wtZS7npdIbcj7lf5SXFSf2jKbusgP9QgPEh/VKJv7O41wTzsvU7AtsUVtB4Lur0Tp1JHkk2lAtjBW4w/j9sis5gnTnU5pml3DSuHSAHIZSVWSozy9eFShGuVpgkuX08CBiEAwnewv6dqqRy6antfo445igrbaAdnRGLXVUNwSGJ66XWkNdozlNJ0ew+Ll8diyzkXosrt9hIutj4/xb8bfxu2I6oOhkJbnKe3XJHyT0HmGM9Jpzg+Ww72mG6WmJdijVKIlt+BFuWXy1LKTVCq2HaVbVS7G/Vz+XIyJUYtyns44xqmzHV/yxOeS3Pal5T4ojLs2Jv/EWzWrMwzTfVbhpqkwuQIPINuxcw6HrIHUZMhuwoNnaSPa1BkY6lDQP9BYmIf2kVOigitn4mhkD4htV/U35Ym7uxEMnSLcHDyI5Bln2zFrGtttdjjXaUvYUrT55MqtR3c+2uxCYae+kWaluk1Rc7v9V+5/m7Kpt24x8U0lEi6kUJEwkXxWjUE9ZNzi1H6pQ+y49ZrtLYVRaNq+VJhcsU6NuYVMrcvNTx95j7c8Bf4lB1zuTkPalues0nCvYeycoSxfV40finRAmo1sZhm9kMGoav2zZTV/PcxXeD5b/s2jdr1uw10J3vKD0tN8L1uQ2kK3EwzJyuxul+JSXAxJw+MlZYVoiWcLP05phX8XpRLM7A43omaDs3D7dOV0ItotuZRyH6ntnd3Z0Ln8w+0dfuOfh5Yffv/qT/F97vM=", "solutions": "# YOUR CODE HERE\n\n# Read the number of buildings\nN = int(input())\n\n# Read the heights of the buildings\nheights = list(map(int, input().split()))\n\n# Get the height of the first building\nfirst_height = heights[0]\n\n# Initialize the position of the tallest building to -1\ntallest_position = -1\n\n# Iterate through the buildings\nfor i in range(1, N):\n    # Check if the current building is taller than the first one\n    if heights[i] > first_height:\n        # Update the position of the tallest building\n        tallest_position = i + 1\n        # Exit the loop since we found the leftmost tallest building\n        break\n\n# Print the position of the tallest building\nprint(tallest_position)", "task": "livecodebench", "difficulty": "easy", "split": "test", "transformation_type": "plain_summary", "starter": ""}