{"qid": "abc355_b", "orig_input": "You are given a sequence A=(A_1,A_2,\\dots,A_N) of length N and a sequence B=(B_1,B_2,\\dots,B_M) of length M. Here, all elements of A and B are pairwise distinct. Determine whether the sequence C=(C_1,C_2,\\dots,C_{N+M}) formed by sorting all elements of A and B in ascending order contains two consecutive elements appearing in A.\n\nInput\n\nThe input is given from Standard Input in the following format:\nN M\r\nA_1 A_2 \\dots A_N\r\nB_1 B_2 \\dots B_M\n\nOutput\n\nIf C contains two consecutive elements appearing in A, print Yes; otherwise, print No.\n\nConstraints\n\n\n- 1 \\leq N, M \\leq 100\n- 1 \\leq A_i, B_j \\leq 200\n- A_1, A_2, \\dots, A_N, B_1, B_2, \\dots, B_M are distinct.\n- All input values are integers.\n\nSample Input 1\n\n3 2\r\n3 2 5\r\n4 1\n\nSample Output 1\n\nYes\r\n\nC=(1,2,3,4,5). Since 2 and 3 from A occur consecutively in C, print Yes.\n\nSample Input 2\n\n3 2\r\n3 1 5\r\n4 2\n\nSample Output 2\n\nNo\r\n\nC=(1,2,3,4,5). Since no two elements from A occur consecutively in C, print No.\n\nSample Input 3\n\n1 1\r\n1\r\n2\n\nSample Output 3\n\nNo", "input": "SUMMARY\nDetermine if two consecutive elements from sequence A appear consecutively in the sorted combination of sequences A and B.", "test_cases": [{"input": "3 2\n3 2 5\n4 1\n", "output": "Yes\n", "testtype": "stdin"}, {"input": "3 2\n3 1 5\n4 2\n", "output": "No\n", "testtype": "stdin"}, {"input": "1 1\n1\n2\n", "output": "No\n", "testtype": "stdin"}], "priv_test": "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", "solutions": "# YOUR CODE HERE\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nc = sorted(a + b)\n\nfound = False\nfor i in range(len(c) - 1):\n    if c[i] in a and c[i + 1] in a:\n        found = True\n        break\n\nif found:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "task": "livecodebench", "difficulty": "easy", "split": "test", "transformation_type": "plain_summary", "starter": ""}