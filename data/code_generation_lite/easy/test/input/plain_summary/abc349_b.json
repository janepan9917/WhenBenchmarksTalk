{"qid": "abc349_b", "orig_input": "A string S consisting of lowercase English letters is a good string if and only if it satisfies the following property for all integers i not less than 1:\n\n- There are exactly zero or exactly two different letters that appear exactly i times in S.\n\nGiven a string S, determine if it is a good string.\n\nInput\n\nThe input is given from Standard Input in the following format:\nS\n\nOutput\n\nPrint Yes if S is a good string, and No otherwise.\n\nConstraints\n\n\n- S is a string of lowercase English letters with a length between 1 and 100, inclusive.\n\nSample Input 1\n\ncommencement\n\nSample Output 1\n\nYes\r\n\nFor the string commencement, the number of different letters that appear exactly i times is as follows:\n\n- i=1: two letters (o and t)\n- i=2: two letters (c and n)\n- i=3: two letters (e and m)\n- i\\geq 4: zero letters\n\nTherefore, commencement satisfies the condition of a good string.\n\nSample Input 2\n\nbanana\n\nSample Output 2\n\nNo\r\n\nFor the string banana, there is only one letter that appears exactly one time, which is b, so it does not satisfy the condition of a good string.\n\nSample Input 3\n\nab\n\nSample Output 3\n\nYes", "input": "SUMMARY\nDetermine if a given string is \"good\" based on the frequency of letter occurrences, where each frequency must appear exactly zero or two times.", "test_cases": [{"input": "commencement\n", "output": "Yes\n", "testtype": "stdin"}, {"input": "banana\n", "output": "No\n", "testtype": "stdin"}, {"input": "ab\n", "output": "Yes\n", "testtype": "stdin"}], "priv_test": "eJy9VEuOEzEQZYHENUZZjzgAh2ANAhb+lDPutO322N0VGyFxCLgiO+7AK3cGECvoBXbs+rz3KpZdyefnX7+/eDbGm29w3n08+bis9fTq7rRtSWaqadvqJiOltFVsa93EgSucVYAVzjayABHAChtCWMHWdR16Qd7H0/3dCczbN72lsqcqlVrbQpIs1fp4+nR/99uRurWl224rbC29wtaOWWxF2CtQgCM19o5yXXxoujCQgxBhLwMTWoFqYIeP1ZpP3ng/lver9w3DN4N7aatP8I1gJvmWTJO84L75tRkvH5+M2VXJSz4NRmsrWBD8ebLX6e8OZslaImedtlYTkcROO03OkcaSFHJaO8E1PHIaa9CsFWwIpQj4TuK9jtOHb4vp8XxGW02P6sHkmS5nvsRoWwnazOt0veqm2ty9dFKfwuaX7PQl+6uxSyirU9bVh2V7pM6xPBy9GnVU6IzBTYRrCEEc48wVQxzsyASBXADkhCO+uTGDoAa42HAjXo0JvwSHbzWjayb0XJv8IsaPdppay21py+hLpKfJj5RHUhowS5Mh56cFnMHLooezIAe+FJu8cJejN8aM52bFhZM+95RK4nTm1BnZxNyZtTipC1CSSgWohmhwIBh8RgXmAoA7EkmJTKlRjo8ebZ5nK1M6fZ6znTMRbEaEJp+xZQxY8LJwBd4lIsKYKd88EVupMX42oOXDj3m5EMnnMnbYi2Ro+Hu8Yzthd27hzqYnOj2V+jlvejp8uO0/jKPvmXuOcZ6x+jDYQsy9xwAbZcfDRcGBmuicFgLiEHaZPNuwUQqIOKNUxwJrNj0ePRnx5EgpN6ZyThEaGpYUw3fYHclUak8TjHLsWOgMDjMN7hA7YtGzm+SvXIT/cK4PX17+ABoLCQs=", "solutions": "# YOUR CODE HERE\n\nfrom collections import Counter\n\ndef is_good_string(s):\n    freq_counts = Counter(Counter(s).values()).values()\n    allowed_counts = [0, 2]\n    for count in freq_counts:\n        if count not in allowed_counts:\n            return \"No\"\n    return \"Yes\"\n\ns = input().strip()\nprint(is_good_string(s))", "task": "livecodebench", "difficulty": "easy", "split": "test", "transformation_type": "plain_summary", "starter": ""}