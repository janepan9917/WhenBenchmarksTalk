{"qid": "3543", "orig_input": "You are given a binary string s and an integer k.\nA binary string satisfies the k-constraint if either of the following conditions holds:\n\nThe number of 0's in the string is at most k.\nThe number of 1's in the string is at most k.\n\nReturn an integer denoting the number of substrings of s that satisfy the k-constraint.\n \nExample 1:\n\nInput: s = \"10101\", k = 1\nOutput: 12\nExplanation:\nEvery substring of s except the substrings \"1010\", \"10101\", and \"0101\" satisfies the k-constraint.\n\nExample 2:\n\nInput: s = \"1010101\", k = 2\nOutput: 25\nExplanation:\nEvery substring of s except the substrings with a length greater than 5 satisfies the k-constraint.\n\nExample 3:\n\nInput: s = \"11111\", k = 1\nOutput: 15\nExplanation:\nAll substrings of s satisfy the k-constraint.\n\n \nConstraints:\n\n1 <= s.length <= 50 \n1 <= k <= s.length\ns[i] is either '0' or '1'.", "input": "You are given a binary string s and an integer k.\nA binary string satisfies the k-constraint if either of the following conditions holds:\n\nThe number of 0's in the string is at most k.\nThe number of 1's in the string is at most k.\n\nReturn an integer denoting the number of substrings of s that satisfy the k-constraint.\n \nExample 1:\n\nInput: s = \"10101\", k = 1\nOutput: 12\nExplanation:\nEvery substring of s except the substrings \"1010\", \"10101\", and \"0101\" satisfies the k-constraint.\n\nExample 2:\n\nInput: s = \"1010101\", k = 2\nOutput: 25\nExplanation:\nEvery substring of s except the substrings with a length greater than 5 satisfies the k-constraint.\n\nExample 3:\n\nInput: s = \"11111\", k = 1\nOutput: 15\nExplanation:\nAll substrings of s satisfy the k-constraint.\n\n \nConstraints:\n\n1 <= s.length <= 50 \n1 <= k <= s.length\ns[i] is either '0' or '1'.", "test_cases": [{"input": "\"10101\"\n1", "output": "12", "testtype": "functional"}, {"input": "\"1010101\"\n2", "output": "25", "testtype": "functional"}, {"input": "\"11111\"\n1", "output": "15", "testtype": "functional"}], "priv_test": "eJylVstOwzAQ5MCZb6h8rpDXTdKUEzd+AYlyQKhIlVBaifSAEBIfAf9L43jXjtlGHWKg1KF49jEz66/Ln7urC7/ub49vHj7MttkfWnMzM2tjLdHarBsy85nZHdrwh1W3bTdvbfu+33QPXg7Nc7vdNU+v5nM+y46QRWPLw9ghTm0JQTqe4mE6JP+afHXf3Zv+MwlmOYQsSwtB9od7QMH021A5l5WuqErgfB9uSEvyof54K7/SlNUyriBM6+MeHrGAgpYyxJbEznDEXLLjpgMssjotC6gPCkuhmJX/h7gXcukzJqZ7oFp4ONgrOZcY3ZlhWdQIf0cVSRyq6gG1g4QSqDkp2ECeEJbUmKIWWIP9XiWyRfWdIpHg8T60nD1AhXSQXwZ5UwopcaSy4VwVSFcjird6qaDmnGvz44ZPrqiwWrGh5NbOZh9q6dGqIVi1wKyY81PEUNT/KHduN2i52VuJ7JArJC4TdHCCmG61RCFjeZmTJLM1SjOoQZ9FDp2vceLJ8EumC0cTHqiSR/RHaqkQViY3DQ6174OmsQqZUskNhqmvysiBQ2DywOfmKwcV4BXOnv7RphDC4DONKfOoMreoJWob8c6W6sbKrU78S1STX0pBlqBLcyM4Tb39Dmk/aZFAqcchKQPaUupPyQVU7st/bBHzi8kxT5Sf2j9Qv7yG41szrHHFPX5f/wJTp9ys", "solutions": "class Solution:\n    def countKConstraintSubstrings(self, s: str, k: int) -> int:\n        n = len(s)\n        count = 0\n        max_ones = 0\n        max_zeros = 0\n        \n        def at_most_k(zeros, ones, k):\n            return zeros <= k or ones <= k\n        \n        for left in range(n):\n            max_zeros = 0\n            max_ones = 0\n            zeros = 0\n            ones = 0\n            \n            for right in range(left, n):\n                if s[right] == '0':\n                    zeros += 1\n                    max_zeros = max(max_zeros, zeros)\n                else:\n                    ones += 1\n                    max_ones = max(max_ones, ones)\n                \n                if at_most_k(max_zeros, max_ones, k):\n                    count += 1\n                else:\n                    break\n        \n        return count", "task": "livecodebench", "difficulty": "easy", "split": "test", "transformation_type": "vanilla", "starter": "class Solution:\n    def countKConstraintSubstrings(self, s: str, k: int) -> int:\n        "}