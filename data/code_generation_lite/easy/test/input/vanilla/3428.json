{"qid": "3428", "orig_input": "You are given an array nums, where each number in the array appears either once or twice.\nReturn the bitwise XOR of all the numbers that appear twice in the array, or 0 if no number appears twice.\n \nExample 1:\n\nInput: nums = [1,2,1,3]\nOutput: 1\nExplanation:\nThe only number that appears twice in nums is 1.\n\nExample 2:\n\nInput: nums = [1,2,3]\nOutput: 0\nExplanation:\nNo number appears twice in nums.\n\nExample 3:\n\nInput: nums = [1,2,2,1]\nOutput: 3\nExplanation:\nNumbers 1 and 2 appeared twice. 1 XOR 2 == 3.\n\n \nConstraints:\n\n1 <= nums.length <= 50\n1 <= nums[i] <= 50\nEach number in nums appears either once or twice.", "input": "You are given an array nums, where each number in the array appears either once or twice.\nReturn the bitwise XOR of all the numbers that appear twice in the array, or 0 if no number appears twice.\n \nExample 1:\n\nInput: nums = [1,2,1,3]\nOutput: 1\nExplanation:\nThe only number that appears twice in nums is 1.\n\nExample 2:\n\nInput: nums = [1,2,3]\nOutput: 0\nExplanation:\nNo number appears twice in nums.\n\nExample 3:\n\nInput: nums = [1,2,2,1]\nOutput: 3\nExplanation:\nNumbers 1 and 2 appeared twice. 1 XOR 2 == 3.\n\n \nConstraints:\n\n1 <= nums.length <= 50\n1 <= nums[i] <= 50\nEach number in nums appears either once or twice.", "test_cases": [{"input": "[1, 2, 1, 3]", "output": "1", "testtype": "functional"}, {"input": "[1, 2, 3]", "output": "0", "testtype": "functional"}, {"input": "[1, 2, 2, 1]", "output": "3", "testtype": "functional"}], "priv_test": "eJylV1uKHEcQ9IcO4CMM812Yej90EoPQhxGyEZiVQLMfxgh0CPm+jojM7pF6jdlml5ntnurqqsjMiMysr6/+efj5J/39+gdu3vx9/fDw6fF2fX25vmnhkvFN0b654FvDZeGSMYQLv9F/ciavmJF6uOAzcYcZiVe8NDARd7hgoYRvfXsNl+vHx5tvmCd/395/vt3++vSeI78/Pry7ffj48Nuf1y/h8j02x1Ft+anVuTShCHS3PQhAwA1dN9AEWxyrmaBbXPnqOuBK9fm4WgwplBxqCdhvhcLfWDyHHmrDvzwCMJYRSuLDFerUfEypoaaQMS/yXYzjhVIDpmJKD2Vx1bqwFm4xxIWypnAQr8aA7avmjqNv2/NtoB/xqfJRMy/Lp8N8yWBu/tookMzV0yJQ5GnFoFkcsvMA1yfuPRF2ruFRrRbNqDtCHNp+Gc7mW1eD6+HfmeGsbk6Y5CDLEVp6PrTju/GEVdE8F53RGyzDL9DL7DZhOYOHIW8yuprdZoYLT04/mnSCCGN3cTaHtzuiXfObwp0XeZN+9pQhVNGQeSS6jMlH/Z8hAnXWKRkoCVrpAduUQjnkSRkt/sIY4OIhJFIoC2CAlkxoEN2gcDBMvUBQMBLwIVCtg1u+PAOsLC3UQbnC6qSxyA+XpXoPdtQzoTeneubanClVNWO2+9W858rj827Onjv5N7ltjqfv4wtSbHoBoafZ1O/VwknsVWJL3GKS2eka3KRpNnlqoTleTaSCI3HWicIxmF+ZMPVfUWfCbIppJjkAoyrHghVgVyF3FGygBe8wFdwposHgJ5NuAJz4poiDWVqANANf+BDjk1keKw0l/KMR7USuAXAiFKairScJiu0HYQG5qB7dVCgAUxIxRRWgQfEk1iTEJKmCRK2oypRYZ1CHMldKWhFe4UCmOSS+XsVCT7LLiUg0+Zsgq8Qm58Ic/FxBqnbktCwJqaKw4EtO6wSTl1ApKkkw5YwmGxvNYkEtzAZT6k0MF4YZ3uUV9kkj0k9Q3TqRZHUoeTXJeS9DuXm22xO2RFqc3F4qq4vf26bl8sDliG2c4jq9NuFNth4IMLZTH7IUTot8p6MwCRiYQRVx+bOK8SSY+MO0OBgMudVEkoY3L5RQF1PUhNC1pGFiUNrBhH6G6dpORpC4UxEtfs+E3dT5mNS46VCTJHyALTxM4OyL0sYEYmTmTuKAGZL2MoKVOl8Q36uSPybWY0dVzyQdLSy/JqUVgE9q3pJqTxVIl1p0qWUWKGaPql6veDA6HxepQ81mFe1pjSIKQ4pZrRwluZLxClR+akY70dyWe38xnK/D20NrnXPe2Uyir73b2nqYfD8VbEVhunhe0HrBuKwYF5Vv8pYJmE5OTAVKyHKeuMrkb/yJagqmIqIyQNcahbqWbNYbsE1o5EIyeSg4ll6qpVYwnWI7ciSfMIItVjHHlHtbkLzhLuzI6W1rcxtd9l12wVBlW7X28CxPMH7kqWzncV+j+7zee2B47lK4Lecw7XA/Lt4VsWytduGRzTq9ypq9PKRWv9MxUZ0pBRuV/ISgttF7eesZ5g8NbvqhP1CujfdjivKvk8v65WNrfuowFJ2v8X58GPfDsB1tusHztj3uffmG2U8hG9+nm/Ffh6ETcqxqgJm2lbnBkB6khKxjJrODqp3yAtva5rmmMGHCIC6g+klON1JZuZAtUpCeshK7leXmTVHWspiuJoKnVBaTgxnlfyvo22+//AuvdLp2", "solutions": "class Solution:\n    def duplicateNumbersXOR(self, nums: List[int]) -> int:\n        xor = 0\n        seen = set()\n        for num in nums:\n            if num in seen:\n                xor ^= num\n            else:\n                seen.add(num)\n        return xor", "task": "livecodebench", "difficulty": "easy", "split": "test", "transformation_type": "vanilla", "starter": "class Solution:\n    def duplicateNumbersXOR(self, nums: List[int]) -> int:\n        "}