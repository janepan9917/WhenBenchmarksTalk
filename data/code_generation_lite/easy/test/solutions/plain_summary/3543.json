{"qid": "3543", "split": "test", "solutions": "class Solution:\n    def countKConstraintSubstrings(self, s: str, k: int) -> int:\n        n = len(s)\n        count = 0\n        max_ones = 0\n        max_zeros = 0\n        \n        def at_most_k(zeros, ones, k):\n            return zeros <= k or ones <= k\n        \n        for left in range(n):\n            max_zeros = 0\n            max_ones = 0\n            zeros = 0\n            ones = 0\n            \n            for right in range(left, n):\n                if s[right] == '0':\n                    zeros += 1\n                    max_zeros = max(max_zeros, zeros)\n                else:\n                    ones += 1\n                    max_ones = max(max_ones, ones)\n                \n                if at_most_k(max_zeros, max_ones, k):\n                    count += 1\n                else:\n                    break\n        \n        return count", "starter": "class Solution:\n    def countKConstraintSubstrings(self, s: str, k: int) -> int:\n        "}