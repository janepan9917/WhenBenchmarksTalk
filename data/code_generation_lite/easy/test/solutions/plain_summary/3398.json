{"qid": "3398", "split": "test", "solutions": "class Solution:\n    def canMakeSquare(self, grid: List[List[str]]) -> bool:\n        def find_square(i, j, color):\n            for row in range(i, i + 2):\n                for col in range(j, j + 2):\n                    if row >= 3 or col >= 3 or grid[row][col] != color:\n                        return False\n            return True\n\n        def flip_cell(i, j):\n            grid[i][j] = 'W' if grid[i][j] == 'B' else 'B'\n\n        for i in range(2):\n            for j in range(2):\n                if find_square(i, j, grid[i][j]):\n                    return True\n\n                for x in range(3):\n                    for y in range(3):\n                        if grid[x][y] != grid[i][j]:\n                            flip_cell(x, y)\n                            if find_square(i, j, grid[i][j]):\n                                flip_cell(x, y)\n                                return True\n                            flip_cell(x, y)\n\n        return find_square(1, 1, grid[1][1])", "starter": "class Solution:\n    def canMakeSquare(self, grid: List[List[str]]) -> bool:\n        "}