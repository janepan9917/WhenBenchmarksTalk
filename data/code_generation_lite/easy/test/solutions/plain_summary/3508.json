{"qid": "3508", "split": "test", "solutions": "class Solution:\n    def minChanges(self, n: int, k: int) -> int:\n        # Convert n and k to binary strings\n        n_bin = bin(n)[2:]\n        k_bin = bin(k)[2:]\n        \n        # Pad the shorter string with leading zeros\n        max_len = max(len(n_bin), len(k_bin))\n        n_bin = n_bin.zfill(max_len)\n        k_bin = k_bin.zfill(max_len)\n        \n        # Count the number of differences\n        diff_count = 0\n        for i in range(max_len):\n            if n_bin[i] != k_bin[i]:\n                if n_bin[i] == '1':\n                    diff_count += 1\n                else:\n                    # If n has a 0 where k has a 1, it's impossible\n                    return -1\n        \n        return diff_count", "starter": "class Solution:\n    def minChanges(self, n: int, k: int) -> int:\n        "}